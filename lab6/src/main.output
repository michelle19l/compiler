Terminals unused in grammar

   POINT
   LBRACK
   RBRACK
   BOOL
   GET_VALUE


State 50 conflicts: 1 reduce/reduce
State 87 conflicts: 1 shift/reduce


Grammar

    0 $accept: program $end

    1 program: statements

    2 statements: statement
    3           | statements statement

    4 statement: SEMICOLON
    5          | declaration SEMICOLON
    6          | eq_assign SEMICOLON
    7          | if_else
    8          | while
    9          | printf SEMICOLON
   10          | scanf SEMICOLON
   11          | function_decl SEMICOLON
   12          | function_def
   13          | function_use SEMICOLON
   14          | for
   15          | opassign SEMICOLON
   16          | return SEMICOLON
   17          | block

   18 return: RETURN expr
   19       | RETURN bool_statements

   20 for: FOR LPAREN declaration SEMICOLON bool_statements SEMICOLON assigns RPAREN block
   21    | FOR LPAREN SEMICOLON bool_statements SEMICOLON assigns RPAREN block

   22 function_decl: T IDENTIFIER LPAREN RPAREN
   23              | T IDENTIFIER LPAREN params RPAREN

   24 function_def: T IDENTIFIER LPAREN params RPAREN block
   25             | T IDENTIFIER LPAREN RPAREN block

   26 function_use: IDENTIFIER LPAREN idlist RPAREN
   27             | IDENTIFIER LPAREN RPAREN

   28 params: params COMMA param
   29       | param

   30 param: T IDENTIFIER

   31 printf: PRINTF LPAREN STRING RPAREN
   32       | PRINTF LPAREN STRING COMMA exprs RPAREN
   33       | PRINTF LPAREN idlist RPAREN
   34       | PRINTF LPAREN STRING COMMA address_idlist RPAREN

   35 scanf: SCANF LPAREN STRING COMMA address_idlist RPAREN

   36 address_idlist: address_idlist COMMA get_address_id
   37               | get_address_id

   38 get_address_id: GET_ADDRESS IDENTIFIER

   39 while: WHILE LPAREN bool_statements RPAREN block

   40 block: LBRACE statements RBRACE
   41      | LBRACE RBRACE

   42 if_else: IF LPAREN bool_statements RPAREN block ELSE block
   43        | IF LPAREN bool_statements RPAREN block

   44 bool_statements: LPAREN bool_statements RPAREN
   45                | bool_statements AND bool_statements
   46                | bool_statements OR bool_statements
   47                | NOT bool_statements
   48                | bool_statement

   49 bool_statement: expr
   50               | bool_statement GREAT bool_statement
   51               | bool_statement LESS bool_statement
   52               | bool_statement GREAT_EQ bool_statement
   53               | bool_statement LESS_EQ bool_statement
   54               | bool_statement LOP_EQ bool_statement
   55               | bool_statement NOT_EQ bool_statement

   56 declaration: T eq_assigns
   57            | T idlist

   58 assigns: assigns COMMA assign
   59        | assign

   60 assign: opassign
   61       | eq_assign

   62 eq_assigns: eq_assigns COMMA eq_assign
   63           | eq_assign

   64 eq_assign: IDENTIFIER LOP_ASSIGN expr

   65 opassign: IDENTIFIER ADD_ASSIGN expr
   66         | IDENTIFIER SUB_ASSIGN expr
   67         | IDENTIFIER MUL_ASSIGN expr
   68         | IDENTIFIER DIV_ASSIGN expr
   69         | IDENTIFIER MOD_ASSIGN expr
   70         | SELF_DEC IDENTIFIER
   71         | SELF_INC IDENTIFIER
   72         | IDENTIFIER SELF_INC
   73         | IDENTIFIER SELF_DEC

   74 idlist: idlist COMMA IDENTIFIER
   75       | IDENTIFIER

   76 exprs: exprs COMMA expr
   77      | expr

   78 expr: function_use
   79     | LPAREN expr RPAREN
   80     | expr ADD expr
   81     | expr SUB expr
   82     | SUB expr
   83     | ADD expr
   84     | expr MUL expr
   85     | expr DIV expr
   86     | expr MOD expr
   87     | IDENTIFIER
   88     | INTEGER
   89     | CHAR
   90     | STRING

   91 T: T_INT
   92  | T_CHAR
   93  | T_BOOL
   94  | T_VOID
   95  | T_STRING
   96  | T_INT_POINTER
   97  | T_CHAR_POINTER


Terminals, with rules where they appear

$end (0) 0
error (256)
IF (258) 42 43
ELSE (259) 42
WHILE (260) 39
FOR (261) 20 21
RETURN (262) 18 19
T_CHAR (263) 92
T_INT (264) 91
T_STRING (265) 95
T_BOOL (266) 93
T_INT_POINTER (267) 96
T_CHAR_POINTER (268) 97
T_VOID (269) 94
PRINTF (270) 31 32 33 34
SCANF (271) 35
LOP_ASSIGN (272) 64
ADD_ASSIGN (273) 65
SUB_ASSIGN (274) 66
MOD_ASSIGN (275) 69
DIV_ASSIGN (276) 68
MUL_ASSIGN (277) 67
SEMICOLON (278) 4 5 6 9 10 11 13 15 16 20 21
COMMA (279) 28 32 34 35 36 58 62 74 76
POINT (280)
LPAREN (281) 20 21 22 23 24 25 26 27 31 32 33 34 35 39 42 43 44 79
RPAREN (282) 20 21 22 23 24 25 26 27 31 32 33 34 35 39 42 43 44 79
LBRACK (283)
RBRACK (284)
LBRACE (285) 40 41
RBRACE (286) 40 41
IDENTIFIER (287) 22 23 24 25 26 27 30 38 64 65 66 67 68 69 70 71 72
    73 74 75 87
INTEGER (288) 88
CHAR (289) 89
BOOL (290)
STRING (291) 31 32 34 35 90
LOP_EQ (292) 54
GREAT (293) 50
LESS (294) 51
GREAT_EQ (295) 52
LESS_EQ (296) 53
NOT_EQ (297) 55
ADD (298) 80 83
SUB (299) 81 82
MUL (300) 84
DIV (301) 85
MOD (302) 86
OR (303) 46
AND (304) 45
NOT (305) 47
NEG (306)
POS (307)
SELF_INC (308) 71 72
SELF_DEC (309) 70 73
SELF_INC_R (310)
SELF_DEC_R (311)
SELF_INC_L (312)
SELF_DEC_L (313)
GET_ADDRESS (314) 38
GET_VALUE (315)


Nonterminals, with rules where they appear

$accept (61)
    on left: 0
program (62)
    on left: 1, on right: 0
statements (63)
    on left: 2 3, on right: 1 3 40
statement (64)
    on left: 4 5 6 7 8 9 10 11 12 13 14 15 16 17, on right: 2 3
return (65)
    on left: 18 19, on right: 16
for (66)
    on left: 20 21, on right: 14
function_decl (67)
    on left: 22 23, on right: 11
function_def (68)
    on left: 24 25, on right: 12
function_use (69)
    on left: 26 27, on right: 13 78
params (70)
    on left: 28 29, on right: 23 24 28
param (71)
    on left: 30, on right: 28 29
printf (72)
    on left: 31 32 33 34, on right: 9
scanf (73)
    on left: 35, on right: 10
address_idlist (74)
    on left: 36 37, on right: 34 35 36
get_address_id (75)
    on left: 38, on right: 36 37
while (76)
    on left: 39, on right: 8
block (77)
    on left: 40 41, on right: 17 20 21 24 25 39 42 43
if_else (78)
    on left: 42 43, on right: 7
bool_statements (79)
    on left: 44 45 46 47 48, on right: 19 20 21 39 42 43 44 45 46 47
bool_statement (80)
    on left: 49 50 51 52 53 54 55, on right: 48 50 51 52 53 54 55
declaration (81)
    on left: 56 57, on right: 5 20
assigns (82)
    on left: 58 59, on right: 20 21 58
assign (83)
    on left: 60 61, on right: 58 59
eq_assigns (84)
    on left: 62 63, on right: 56 62
eq_assign (85)
    on left: 64, on right: 6 61 62 63
opassign (86)
    on left: 65 66 67 68 69 70 71 72 73, on right: 15 60
idlist (87)
    on left: 74 75, on right: 26 33 57 74
exprs (88)
    on left: 76 77, on right: 32 76
expr (89)
    on left: 78 79 80 81 82 83 84 85 86 87 88 89 90, on right: 18 49
    64 65 66 67 68 69 76 77 79 80 81 82 83 84 85 86
T (90)
    on left: 91 92 93 94 95 96 97, on right: 22 23 24 25 30 56 57


State 0

    0 $accept: . program $end

    IF              shift, and go to state 1
    WHILE           shift, and go to state 2
    FOR             shift, and go to state 3
    RETURN          shift, and go to state 4
    T_CHAR          shift, and go to state 5
    T_INT           shift, and go to state 6
    T_STRING        shift, and go to state 7
    T_BOOL          shift, and go to state 8
    T_INT_POINTER   shift, and go to state 9
    T_CHAR_POINTER  shift, and go to state 10
    T_VOID          shift, and go to state 11
    PRINTF          shift, and go to state 12
    SCANF           shift, and go to state 13
    SEMICOLON       shift, and go to state 14
    LBRACE          shift, and go to state 15
    IDENTIFIER      shift, and go to state 16
    SELF_INC        shift, and go to state 17
    SELF_DEC        shift, and go to state 18

    program        go to state 19
    statements     go to state 20
    statement      go to state 21
    return         go to state 22
    for            go to state 23
    function_decl  go to state 24
    function_def   go to state 25
    function_use   go to state 26
    printf         go to state 27
    scanf          go to state 28
    while          go to state 29
    block          go to state 30
    if_else        go to state 31
    declaration    go to state 32
    eq_assign      go to state 33
    opassign       go to state 34
    T              go to state 35


State 1

   42 if_else: IF . LPAREN bool_statements RPAREN block ELSE block
   43        | IF . LPAREN bool_statements RPAREN block

    LPAREN  shift, and go to state 36


State 2

   39 while: WHILE . LPAREN bool_statements RPAREN block

    LPAREN  shift, and go to state 37


State 3

   20 for: FOR . LPAREN declaration SEMICOLON bool_statements SEMICOLON assigns RPAREN block
   21    | FOR . LPAREN SEMICOLON bool_statements SEMICOLON assigns RPAREN block

    LPAREN  shift, and go to state 38


State 4

   18 return: RETURN . expr
   19       | RETURN . bool_statements

    LPAREN      shift, and go to state 39
    IDENTIFIER  shift, and go to state 40
    INTEGER     shift, and go to state 41
    CHAR        shift, and go to state 42
    STRING      shift, and go to state 43
    ADD         shift, and go to state 44
    SUB         shift, and go to state 45
    NOT         shift, and go to state 46

    function_use     go to state 47
    bool_statements  go to state 48
    bool_statement   go to state 49
    expr             go to state 50


State 5

   92 T: T_CHAR .

    $default  reduce using rule 92 (T)


State 6

   91 T: T_INT .

    $default  reduce using rule 91 (T)


State 7

   95 T: T_STRING .

    $default  reduce using rule 95 (T)


State 8

   93 T: T_BOOL .

    $default  reduce using rule 93 (T)


State 9

   96 T: T_INT_POINTER .

    $default  reduce using rule 96 (T)


State 10

   97 T: T_CHAR_POINTER .

    $default  reduce using rule 97 (T)


State 11

   94 T: T_VOID .

    $default  reduce using rule 94 (T)


State 12

   31 printf: PRINTF . LPAREN STRING RPAREN
   32       | PRINTF . LPAREN STRING COMMA exprs RPAREN
   33       | PRINTF . LPAREN idlist RPAREN
   34       | PRINTF . LPAREN STRING COMMA address_idlist RPAREN

    LPAREN  shift, and go to state 51


State 13

   35 scanf: SCANF . LPAREN STRING COMMA address_idlist RPAREN

    LPAREN  shift, and go to state 52


State 14

    4 statement: SEMICOLON .

    $default  reduce using rule 4 (statement)


State 15

   40 block: LBRACE . statements RBRACE
   41      | LBRACE . RBRACE

    IF              shift, and go to state 1
    WHILE           shift, and go to state 2
    FOR             shift, and go to state 3
    RETURN          shift, and go to state 4
    T_CHAR          shift, and go to state 5
    T_INT           shift, and go to state 6
    T_STRING        shift, and go to state 7
    T_BOOL          shift, and go to state 8
    T_INT_POINTER   shift, and go to state 9
    T_CHAR_POINTER  shift, and go to state 10
    T_VOID          shift, and go to state 11
    PRINTF          shift, and go to state 12
    SCANF           shift, and go to state 13
    SEMICOLON       shift, and go to state 14
    LBRACE          shift, and go to state 15
    RBRACE          shift, and go to state 53
    IDENTIFIER      shift, and go to state 16
    SELF_INC        shift, and go to state 17
    SELF_DEC        shift, and go to state 18

    statements     go to state 54
    statement      go to state 21
    return         go to state 22
    for            go to state 23
    function_decl  go to state 24
    function_def   go to state 25
    function_use   go to state 26
    printf         go to state 27
    scanf          go to state 28
    while          go to state 29
    block          go to state 30
    if_else        go to state 31
    declaration    go to state 32
    eq_assign      go to state 33
    opassign       go to state 34
    T              go to state 35


State 16

   26 function_use: IDENTIFIER . LPAREN idlist RPAREN
   27             | IDENTIFIER . LPAREN RPAREN
   64 eq_assign: IDENTIFIER . LOP_ASSIGN expr
   65 opassign: IDENTIFIER . ADD_ASSIGN expr
   66         | IDENTIFIER . SUB_ASSIGN expr
   67         | IDENTIFIER . MUL_ASSIGN expr
   68         | IDENTIFIER . DIV_ASSIGN expr
   69         | IDENTIFIER . MOD_ASSIGN expr
   72         | IDENTIFIER . SELF_INC
   73         | IDENTIFIER . SELF_DEC

    LOP_ASSIGN  shift, and go to state 55
    ADD_ASSIGN  shift, and go to state 56
    SUB_ASSIGN  shift, and go to state 57
    MOD_ASSIGN  shift, and go to state 58
    DIV_ASSIGN  shift, and go to state 59
    MUL_ASSIGN  shift, and go to state 60
    LPAREN      shift, and go to state 61
    SELF_INC    shift, and go to state 62
    SELF_DEC    shift, and go to state 63


State 17

   71 opassign: SELF_INC . IDENTIFIER

    IDENTIFIER  shift, and go to state 64


State 18

   70 opassign: SELF_DEC . IDENTIFIER

    IDENTIFIER  shift, and go to state 65


State 19

    0 $accept: program . $end

    $end  shift, and go to state 66


State 20

    1 program: statements .
    3 statements: statements . statement

    IF              shift, and go to state 1
    WHILE           shift, and go to state 2
    FOR             shift, and go to state 3
    RETURN          shift, and go to state 4
    T_CHAR          shift, and go to state 5
    T_INT           shift, and go to state 6
    T_STRING        shift, and go to state 7
    T_BOOL          shift, and go to state 8
    T_INT_POINTER   shift, and go to state 9
    T_CHAR_POINTER  shift, and go to state 10
    T_VOID          shift, and go to state 11
    PRINTF          shift, and go to state 12
    SCANF           shift, and go to state 13
    SEMICOLON       shift, and go to state 14
    LBRACE          shift, and go to state 15
    IDENTIFIER      shift, and go to state 16
    SELF_INC        shift, and go to state 17
    SELF_DEC        shift, and go to state 18

    $default  reduce using rule 1 (program)

    statement      go to state 67
    return         go to state 22
    for            go to state 23
    function_decl  go to state 24
    function_def   go to state 25
    function_use   go to state 26
    printf         go to state 27
    scanf          go to state 28
    while          go to state 29
    block          go to state 30
    if_else        go to state 31
    declaration    go to state 32
    eq_assign      go to state 33
    opassign       go to state 34
    T              go to state 35


State 21

    2 statements: statement .

    $default  reduce using rule 2 (statements)


State 22

   16 statement: return . SEMICOLON

    SEMICOLON  shift, and go to state 68


State 23

   14 statement: for .

    $default  reduce using rule 14 (statement)


State 24

   11 statement: function_decl . SEMICOLON

    SEMICOLON  shift, and go to state 69


State 25

   12 statement: function_def .

    $default  reduce using rule 12 (statement)


State 26

   13 statement: function_use . SEMICOLON

    SEMICOLON  shift, and go to state 70


State 27

    9 statement: printf . SEMICOLON

    SEMICOLON  shift, and go to state 71


State 28

   10 statement: scanf . SEMICOLON

    SEMICOLON  shift, and go to state 72


State 29

    8 statement: while .

    $default  reduce using rule 8 (statement)


State 30

   17 statement: block .

    $default  reduce using rule 17 (statement)


State 31

    7 statement: if_else .

    $default  reduce using rule 7 (statement)


State 32

    5 statement: declaration . SEMICOLON

    SEMICOLON  shift, and go to state 73


State 33

    6 statement: eq_assign . SEMICOLON

    SEMICOLON  shift, and go to state 74


State 34

   15 statement: opassign . SEMICOLON

    SEMICOLON  shift, and go to state 75


State 35

   22 function_decl: T . IDENTIFIER LPAREN RPAREN
   23              | T . IDENTIFIER LPAREN params RPAREN
   24 function_def: T . IDENTIFIER LPAREN params RPAREN block
   25             | T . IDENTIFIER LPAREN RPAREN block
   56 declaration: T . eq_assigns
   57            | T . idlist

    IDENTIFIER  shift, and go to state 76

    eq_assigns  go to state 77
    eq_assign   go to state 78
    idlist      go to state 79


State 36

   42 if_else: IF LPAREN . bool_statements RPAREN block ELSE block
   43        | IF LPAREN . bool_statements RPAREN block

    LPAREN      shift, and go to state 39
    IDENTIFIER  shift, and go to state 40
    INTEGER     shift, and go to state 41
    CHAR        shift, and go to state 42
    STRING      shift, and go to state 43
    ADD         shift, and go to state 44
    SUB         shift, and go to state 45
    NOT         shift, and go to state 46

    function_use     go to state 47
    bool_statements  go to state 80
    bool_statement   go to state 49
    expr             go to state 81


State 37

   39 while: WHILE LPAREN . bool_statements RPAREN block

    LPAREN      shift, and go to state 39
    IDENTIFIER  shift, and go to state 40
    INTEGER     shift, and go to state 41
    CHAR        shift, and go to state 42
    STRING      shift, and go to state 43
    ADD         shift, and go to state 44
    SUB         shift, and go to state 45
    NOT         shift, and go to state 46

    function_use     go to state 47
    bool_statements  go to state 82
    bool_statement   go to state 49
    expr             go to state 81


State 38

   20 for: FOR LPAREN . declaration SEMICOLON bool_statements SEMICOLON assigns RPAREN block
   21    | FOR LPAREN . SEMICOLON bool_statements SEMICOLON assigns RPAREN block

    T_CHAR          shift, and go to state 5
    T_INT           shift, and go to state 6
    T_STRING        shift, and go to state 7
    T_BOOL          shift, and go to state 8
    T_INT_POINTER   shift, and go to state 9
    T_CHAR_POINTER  shift, and go to state 10
    T_VOID          shift, and go to state 11
    SEMICOLON       shift, and go to state 83

    declaration  go to state 84
    T            go to state 85


State 39

   44 bool_statements: LPAREN . bool_statements RPAREN
   79 expr: LPAREN . expr RPAREN

    LPAREN      shift, and go to state 39
    IDENTIFIER  shift, and go to state 40
    INTEGER     shift, and go to state 41
    CHAR        shift, and go to state 42
    STRING      shift, and go to state 43
    ADD         shift, and go to state 44
    SUB         shift, and go to state 45
    NOT         shift, and go to state 46

    function_use     go to state 47
    bool_statements  go to state 86
    bool_statement   go to state 49
    expr             go to state 87


State 40

   26 function_use: IDENTIFIER . LPAREN idlist RPAREN
   27             | IDENTIFIER . LPAREN RPAREN
   87 expr: IDENTIFIER .

    LPAREN  shift, and go to state 61

    $default  reduce using rule 87 (expr)


State 41

   88 expr: INTEGER .

    $default  reduce using rule 88 (expr)


State 42

   89 expr: CHAR .

    $default  reduce using rule 89 (expr)


State 43

   90 expr: STRING .

    $default  reduce using rule 90 (expr)


State 44

   83 expr: ADD . expr

    LPAREN      shift, and go to state 88
    IDENTIFIER  shift, and go to state 40
    INTEGER     shift, and go to state 41
    CHAR        shift, and go to state 42
    STRING      shift, and go to state 43
    ADD         shift, and go to state 44
    SUB         shift, and go to state 45

    function_use  go to state 47
    expr          go to state 89


State 45

   82 expr: SUB . expr

    LPAREN      shift, and go to state 88
    IDENTIFIER  shift, and go to state 40
    INTEGER     shift, and go to state 41
    CHAR        shift, and go to state 42
    STRING      shift, and go to state 43
    ADD         shift, and go to state 44
    SUB         shift, and go to state 45

    function_use  go to state 47
    expr          go to state 90


State 46

   47 bool_statements: NOT . bool_statements

    LPAREN      shift, and go to state 39
    IDENTIFIER  shift, and go to state 40
    INTEGER     shift, and go to state 41
    CHAR        shift, and go to state 42
    STRING      shift, and go to state 43
    ADD         shift, and go to state 44
    SUB         shift, and go to state 45
    NOT         shift, and go to state 46

    function_use     go to state 47
    bool_statements  go to state 91
    bool_statement   go to state 49
    expr             go to state 81


State 47

   78 expr: function_use .

    $default  reduce using rule 78 (expr)


State 48

   19 return: RETURN bool_statements .
   45 bool_statements: bool_statements . AND bool_statements
   46                | bool_statements . OR bool_statements

    OR   shift, and go to state 92
    AND  shift, and go to state 93

    $default  reduce using rule 19 (return)


State 49

   48 bool_statements: bool_statement .
   50 bool_statement: bool_statement . GREAT bool_statement
   51               | bool_statement . LESS bool_statement
   52               | bool_statement . GREAT_EQ bool_statement
   53               | bool_statement . LESS_EQ bool_statement
   54               | bool_statement . LOP_EQ bool_statement
   55               | bool_statement . NOT_EQ bool_statement

    LOP_EQ    shift, and go to state 94
    GREAT     shift, and go to state 95
    LESS      shift, and go to state 96
    GREAT_EQ  shift, and go to state 97
    LESS_EQ   shift, and go to state 98
    NOT_EQ    shift, and go to state 99

    $default  reduce using rule 48 (bool_statements)


State 50

   18 return: RETURN expr .
   49 bool_statement: expr .
   80 expr: expr . ADD expr
   81     | expr . SUB expr
   84     | expr . MUL expr
   85     | expr . DIV expr
   86     | expr . MOD expr

    ADD  shift, and go to state 100
    SUB  shift, and go to state 101
    MUL  shift, and go to state 102
    DIV  shift, and go to state 103
    MOD  shift, and go to state 104

    SEMICOLON  reduce using rule 18 (return)
    SEMICOLON  [reduce using rule 49 (bool_statement)]
    $default   reduce using rule 49 (bool_statement)


State 51

   31 printf: PRINTF LPAREN . STRING RPAREN
   32       | PRINTF LPAREN . STRING COMMA exprs RPAREN
   33       | PRINTF LPAREN . idlist RPAREN
   34       | PRINTF LPAREN . STRING COMMA address_idlist RPAREN

    IDENTIFIER  shift, and go to state 105
    STRING      shift, and go to state 106

    idlist  go to state 107


State 52

   35 scanf: SCANF LPAREN . STRING COMMA address_idlist RPAREN

    STRING  shift, and go to state 108


State 53

   41 block: LBRACE RBRACE .

    $default  reduce using rule 41 (block)


State 54

    3 statements: statements . statement
   40 block: LBRACE statements . RBRACE

    IF              shift, and go to state 1
    WHILE           shift, and go to state 2
    FOR             shift, and go to state 3
    RETURN          shift, and go to state 4
    T_CHAR          shift, and go to state 5
    T_INT           shift, and go to state 6
    T_STRING        shift, and go to state 7
    T_BOOL          shift, and go to state 8
    T_INT_POINTER   shift, and go to state 9
    T_CHAR_POINTER  shift, and go to state 10
    T_VOID          shift, and go to state 11
    PRINTF          shift, and go to state 12
    SCANF           shift, and go to state 13
    SEMICOLON       shift, and go to state 14
    LBRACE          shift, and go to state 15
    RBRACE          shift, and go to state 109
    IDENTIFIER      shift, and go to state 16
    SELF_INC        shift, and go to state 17
    SELF_DEC        shift, and go to state 18

    statement      go to state 67
    return         go to state 22
    for            go to state 23
    function_decl  go to state 24
    function_def   go to state 25
    function_use   go to state 26
    printf         go to state 27
    scanf          go to state 28
    while          go to state 29
    block          go to state 30
    if_else        go to state 31
    declaration    go to state 32
    eq_assign      go to state 33
    opassign       go to state 34
    T              go to state 35


State 55

   64 eq_assign: IDENTIFIER LOP_ASSIGN . expr

    LPAREN      shift, and go to state 88
    IDENTIFIER  shift, and go to state 40
    INTEGER     shift, and go to state 41
    CHAR        shift, and go to state 42
    STRING      shift, and go to state 43
    ADD         shift, and go to state 44
    SUB         shift, and go to state 45

    function_use  go to state 47
    expr          go to state 110


State 56

   65 opassign: IDENTIFIER ADD_ASSIGN . expr

    LPAREN      shift, and go to state 88
    IDENTIFIER  shift, and go to state 40
    INTEGER     shift, and go to state 41
    CHAR        shift, and go to state 42
    STRING      shift, and go to state 43
    ADD         shift, and go to state 44
    SUB         shift, and go to state 45

    function_use  go to state 47
    expr          go to state 111


State 57

   66 opassign: IDENTIFIER SUB_ASSIGN . expr

    LPAREN      shift, and go to state 88
    IDENTIFIER  shift, and go to state 40
    INTEGER     shift, and go to state 41
    CHAR        shift, and go to state 42
    STRING      shift, and go to state 43
    ADD         shift, and go to state 44
    SUB         shift, and go to state 45

    function_use  go to state 47
    expr          go to state 112


State 58

   69 opassign: IDENTIFIER MOD_ASSIGN . expr

    LPAREN      shift, and go to state 88
    IDENTIFIER  shift, and go to state 40
    INTEGER     shift, and go to state 41
    CHAR        shift, and go to state 42
    STRING      shift, and go to state 43
    ADD         shift, and go to state 44
    SUB         shift, and go to state 45

    function_use  go to state 47
    expr          go to state 113


State 59

   68 opassign: IDENTIFIER DIV_ASSIGN . expr

    LPAREN      shift, and go to state 88
    IDENTIFIER  shift, and go to state 40
    INTEGER     shift, and go to state 41
    CHAR        shift, and go to state 42
    STRING      shift, and go to state 43
    ADD         shift, and go to state 44
    SUB         shift, and go to state 45

    function_use  go to state 47
    expr          go to state 114


State 60

   67 opassign: IDENTIFIER MUL_ASSIGN . expr

    LPAREN      shift, and go to state 88
    IDENTIFIER  shift, and go to state 40
    INTEGER     shift, and go to state 41
    CHAR        shift, and go to state 42
    STRING      shift, and go to state 43
    ADD         shift, and go to state 44
    SUB         shift, and go to state 45

    function_use  go to state 47
    expr          go to state 115


State 61

   26 function_use: IDENTIFIER LPAREN . idlist RPAREN
   27             | IDENTIFIER LPAREN . RPAREN

    RPAREN      shift, and go to state 116
    IDENTIFIER  shift, and go to state 105

    idlist  go to state 117


State 62

   72 opassign: IDENTIFIER SELF_INC .

    $default  reduce using rule 72 (opassign)


State 63

   73 opassign: IDENTIFIER SELF_DEC .

    $default  reduce using rule 73 (opassign)


State 64

   71 opassign: SELF_INC IDENTIFIER .

    $default  reduce using rule 71 (opassign)


State 65

   70 opassign: SELF_DEC IDENTIFIER .

    $default  reduce using rule 70 (opassign)


State 66

    0 $accept: program $end .

    $default  accept


State 67

    3 statements: statements statement .

    $default  reduce using rule 3 (statements)


State 68

   16 statement: return SEMICOLON .

    $default  reduce using rule 16 (statement)


State 69

   11 statement: function_decl SEMICOLON .

    $default  reduce using rule 11 (statement)


State 70

   13 statement: function_use SEMICOLON .

    $default  reduce using rule 13 (statement)


State 71

    9 statement: printf SEMICOLON .

    $default  reduce using rule 9 (statement)


State 72

   10 statement: scanf SEMICOLON .

    $default  reduce using rule 10 (statement)


State 73

    5 statement: declaration SEMICOLON .

    $default  reduce using rule 5 (statement)


State 74

    6 statement: eq_assign SEMICOLON .

    $default  reduce using rule 6 (statement)


State 75

   15 statement: opassign SEMICOLON .

    $default  reduce using rule 15 (statement)


State 76

   22 function_decl: T IDENTIFIER . LPAREN RPAREN
   23              | T IDENTIFIER . LPAREN params RPAREN
   24 function_def: T IDENTIFIER . LPAREN params RPAREN block
   25             | T IDENTIFIER . LPAREN RPAREN block
   64 eq_assign: IDENTIFIER . LOP_ASSIGN expr
   75 idlist: IDENTIFIER .

    LOP_ASSIGN  shift, and go to state 55
    LPAREN      shift, and go to state 118

    $default  reduce using rule 75 (idlist)


State 77

   56 declaration: T eq_assigns .
   62 eq_assigns: eq_assigns . COMMA eq_assign

    COMMA  shift, and go to state 119

    $default  reduce using rule 56 (declaration)


State 78

   63 eq_assigns: eq_assign .

    $default  reduce using rule 63 (eq_assigns)


State 79

   57 declaration: T idlist .
   74 idlist: idlist . COMMA IDENTIFIER

    COMMA  shift, and go to state 120

    $default  reduce using rule 57 (declaration)


State 80

   42 if_else: IF LPAREN bool_statements . RPAREN block ELSE block
   43        | IF LPAREN bool_statements . RPAREN block
   45 bool_statements: bool_statements . AND bool_statements
   46                | bool_statements . OR bool_statements

    RPAREN  shift, and go to state 121
    OR      shift, and go to state 92
    AND     shift, and go to state 93


State 81

   49 bool_statement: expr .
   80 expr: expr . ADD expr
   81     | expr . SUB expr
   84     | expr . MUL expr
   85     | expr . DIV expr
   86     | expr . MOD expr

    ADD  shift, and go to state 100
    SUB  shift, and go to state 101
    MUL  shift, and go to state 102
    DIV  shift, and go to state 103
    MOD  shift, and go to state 104

    $default  reduce using rule 49 (bool_statement)


State 82

   39 while: WHILE LPAREN bool_statements . RPAREN block
   45 bool_statements: bool_statements . AND bool_statements
   46                | bool_statements . OR bool_statements

    RPAREN  shift, and go to state 122
    OR      shift, and go to state 92
    AND     shift, and go to state 93


State 83

   21 for: FOR LPAREN SEMICOLON . bool_statements SEMICOLON assigns RPAREN block

    LPAREN      shift, and go to state 39
    IDENTIFIER  shift, and go to state 40
    INTEGER     shift, and go to state 41
    CHAR        shift, and go to state 42
    STRING      shift, and go to state 43
    ADD         shift, and go to state 44
    SUB         shift, and go to state 45
    NOT         shift, and go to state 46

    function_use     go to state 47
    bool_statements  go to state 123
    bool_statement   go to state 49
    expr             go to state 81


State 84

   20 for: FOR LPAREN declaration . SEMICOLON bool_statements SEMICOLON assigns RPAREN block

    SEMICOLON  shift, and go to state 124


State 85

   56 declaration: T . eq_assigns
   57            | T . idlist

    IDENTIFIER  shift, and go to state 125

    eq_assigns  go to state 77
    eq_assign   go to state 78
    idlist      go to state 79


State 86

   44 bool_statements: LPAREN bool_statements . RPAREN
   45                | bool_statements . AND bool_statements
   46                | bool_statements . OR bool_statements

    RPAREN  shift, and go to state 126
    OR      shift, and go to state 92
    AND     shift, and go to state 93


State 87

   49 bool_statement: expr .
   79 expr: LPAREN expr . RPAREN
   80     | expr . ADD expr
   81     | expr . SUB expr
   84     | expr . MUL expr
   85     | expr . DIV expr
   86     | expr . MOD expr

    RPAREN  shift, and go to state 127
    ADD     shift, and go to state 100
    SUB     shift, and go to state 101
    MUL     shift, and go to state 102
    DIV     shift, and go to state 103
    MOD     shift, and go to state 104

    RPAREN    [reduce using rule 49 (bool_statement)]
    $default  reduce using rule 49 (bool_statement)


State 88

   79 expr: LPAREN . expr RPAREN

    LPAREN      shift, and go to state 88
    IDENTIFIER  shift, and go to state 40
    INTEGER     shift, and go to state 41
    CHAR        shift, and go to state 42
    STRING      shift, and go to state 43
    ADD         shift, and go to state 44
    SUB         shift, and go to state 45

    function_use  go to state 47
    expr          go to state 128


State 89

   80 expr: expr . ADD expr
   81     | expr . SUB expr
   83     | ADD expr .
   84     | expr . MUL expr
   85     | expr . DIV expr
   86     | expr . MOD expr

    $default  reduce using rule 83 (expr)


State 90

   80 expr: expr . ADD expr
   81     | expr . SUB expr
   82     | SUB expr .
   84     | expr . MUL expr
   85     | expr . DIV expr
   86     | expr . MOD expr

    $default  reduce using rule 82 (expr)


State 91

   45 bool_statements: bool_statements . AND bool_statements
   46                | bool_statements . OR bool_statements
   47                | NOT bool_statements .

    $default  reduce using rule 47 (bool_statements)


State 92

   46 bool_statements: bool_statements OR . bool_statements

    LPAREN      shift, and go to state 39
    IDENTIFIER  shift, and go to state 40
    INTEGER     shift, and go to state 41
    CHAR        shift, and go to state 42
    STRING      shift, and go to state 43
    ADD         shift, and go to state 44
    SUB         shift, and go to state 45
    NOT         shift, and go to state 46

    function_use     go to state 47
    bool_statements  go to state 129
    bool_statement   go to state 49
    expr             go to state 81


State 93

   45 bool_statements: bool_statements AND . bool_statements

    LPAREN      shift, and go to state 39
    IDENTIFIER  shift, and go to state 40
    INTEGER     shift, and go to state 41
    CHAR        shift, and go to state 42
    STRING      shift, and go to state 43
    ADD         shift, and go to state 44
    SUB         shift, and go to state 45
    NOT         shift, and go to state 46

    function_use     go to state 47
    bool_statements  go to state 130
    bool_statement   go to state 49
    expr             go to state 81


State 94

   54 bool_statement: bool_statement LOP_EQ . bool_statement

    LPAREN      shift, and go to state 88
    IDENTIFIER  shift, and go to state 40
    INTEGER     shift, and go to state 41
    CHAR        shift, and go to state 42
    STRING      shift, and go to state 43
    ADD         shift, and go to state 44
    SUB         shift, and go to state 45

    function_use    go to state 47
    bool_statement  go to state 131
    expr            go to state 81


State 95

   50 bool_statement: bool_statement GREAT . bool_statement

    LPAREN      shift, and go to state 88
    IDENTIFIER  shift, and go to state 40
    INTEGER     shift, and go to state 41
    CHAR        shift, and go to state 42
    STRING      shift, and go to state 43
    ADD         shift, and go to state 44
    SUB         shift, and go to state 45

    function_use    go to state 47
    bool_statement  go to state 132
    expr            go to state 81


State 96

   51 bool_statement: bool_statement LESS . bool_statement

    LPAREN      shift, and go to state 88
    IDENTIFIER  shift, and go to state 40
    INTEGER     shift, and go to state 41
    CHAR        shift, and go to state 42
    STRING      shift, and go to state 43
    ADD         shift, and go to state 44
    SUB         shift, and go to state 45

    function_use    go to state 47
    bool_statement  go to state 133
    expr            go to state 81


State 97

   52 bool_statement: bool_statement GREAT_EQ . bool_statement

    LPAREN      shift, and go to state 88
    IDENTIFIER  shift, and go to state 40
    INTEGER     shift, and go to state 41
    CHAR        shift, and go to state 42
    STRING      shift, and go to state 43
    ADD         shift, and go to state 44
    SUB         shift, and go to state 45

    function_use    go to state 47
    bool_statement  go to state 134
    expr            go to state 81


State 98

   53 bool_statement: bool_statement LESS_EQ . bool_statement

    LPAREN      shift, and go to state 88
    IDENTIFIER  shift, and go to state 40
    INTEGER     shift, and go to state 41
    CHAR        shift, and go to state 42
    STRING      shift, and go to state 43
    ADD         shift, and go to state 44
    SUB         shift, and go to state 45

    function_use    go to state 47
    bool_statement  go to state 135
    expr            go to state 81


State 99

   55 bool_statement: bool_statement NOT_EQ . bool_statement

    LPAREN      shift, and go to state 88
    IDENTIFIER  shift, and go to state 40
    INTEGER     shift, and go to state 41
    CHAR        shift, and go to state 42
    STRING      shift, and go to state 43
    ADD         shift, and go to state 44
    SUB         shift, and go to state 45

    function_use    go to state 47
    bool_statement  go to state 136
    expr            go to state 81


State 100

   80 expr: expr ADD . expr

    LPAREN      shift, and go to state 88
    IDENTIFIER  shift, and go to state 40
    INTEGER     shift, and go to state 41
    CHAR        shift, and go to state 42
    STRING      shift, and go to state 43
    ADD         shift, and go to state 44
    SUB         shift, and go to state 45

    function_use  go to state 47
    expr          go to state 137


State 101

   81 expr: expr SUB . expr

    LPAREN      shift, and go to state 88
    IDENTIFIER  shift, and go to state 40
    INTEGER     shift, and go to state 41
    CHAR        shift, and go to state 42
    STRING      shift, and go to state 43
    ADD         shift, and go to state 44
    SUB         shift, and go to state 45

    function_use  go to state 47
    expr          go to state 138


State 102

   84 expr: expr MUL . expr

    LPAREN      shift, and go to state 88
    IDENTIFIER  shift, and go to state 40
    INTEGER     shift, and go to state 41
    CHAR        shift, and go to state 42
    STRING      shift, and go to state 43
    ADD         shift, and go to state 44
    SUB         shift, and go to state 45

    function_use  go to state 47
    expr          go to state 139


State 103

   85 expr: expr DIV . expr

    LPAREN      shift, and go to state 88
    IDENTIFIER  shift, and go to state 40
    INTEGER     shift, and go to state 41
    CHAR        shift, and go to state 42
    STRING      shift, and go to state 43
    ADD         shift, and go to state 44
    SUB         shift, and go to state 45

    function_use  go to state 47
    expr          go to state 140


State 104

   86 expr: expr MOD . expr

    LPAREN      shift, and go to state 88
    IDENTIFIER  shift, and go to state 40
    INTEGER     shift, and go to state 41
    CHAR        shift, and go to state 42
    STRING      shift, and go to state 43
    ADD         shift, and go to state 44
    SUB         shift, and go to state 45

    function_use  go to state 47
    expr          go to state 141


State 105

   75 idlist: IDENTIFIER .

    $default  reduce using rule 75 (idlist)


State 106

   31 printf: PRINTF LPAREN STRING . RPAREN
   32       | PRINTF LPAREN STRING . COMMA exprs RPAREN
   34       | PRINTF LPAREN STRING . COMMA address_idlist RPAREN

    COMMA   shift, and go to state 142
    RPAREN  shift, and go to state 143


State 107

   33 printf: PRINTF LPAREN idlist . RPAREN
   74 idlist: idlist . COMMA IDENTIFIER

    COMMA   shift, and go to state 120
    RPAREN  shift, and go to state 144


State 108

   35 scanf: SCANF LPAREN STRING . COMMA address_idlist RPAREN

    COMMA  shift, and go to state 145


State 109

   40 block: LBRACE statements RBRACE .

    $default  reduce using rule 40 (block)


State 110

   64 eq_assign: IDENTIFIER LOP_ASSIGN expr .
   80 expr: expr . ADD expr
   81     | expr . SUB expr
   84     | expr . MUL expr
   85     | expr . DIV expr
   86     | expr . MOD expr

    ADD  shift, and go to state 100
    SUB  shift, and go to state 101
    MUL  shift, and go to state 102
    DIV  shift, and go to state 103
    MOD  shift, and go to state 104

    $default  reduce using rule 64 (eq_assign)


State 111

   65 opassign: IDENTIFIER ADD_ASSIGN expr .
   80 expr: expr . ADD expr
   81     | expr . SUB expr
   84     | expr . MUL expr
   85     | expr . DIV expr
   86     | expr . MOD expr

    ADD  shift, and go to state 100
    SUB  shift, and go to state 101
    MUL  shift, and go to state 102
    DIV  shift, and go to state 103
    MOD  shift, and go to state 104

    $default  reduce using rule 65 (opassign)


State 112

   66 opassign: IDENTIFIER SUB_ASSIGN expr .
   80 expr: expr . ADD expr
   81     | expr . SUB expr
   84     | expr . MUL expr
   85     | expr . DIV expr
   86     | expr . MOD expr

    ADD  shift, and go to state 100
    SUB  shift, and go to state 101
    MUL  shift, and go to state 102
    DIV  shift, and go to state 103
    MOD  shift, and go to state 104

    $default  reduce using rule 66 (opassign)


State 113

   69 opassign: IDENTIFIER MOD_ASSIGN expr .
   80 expr: expr . ADD expr
   81     | expr . SUB expr
   84     | expr . MUL expr
   85     | expr . DIV expr
   86     | expr . MOD expr

    ADD  shift, and go to state 100
    SUB  shift, and go to state 101
    MUL  shift, and go to state 102
    DIV  shift, and go to state 103
    MOD  shift, and go to state 104

    $default  reduce using rule 69 (opassign)


State 114

   68 opassign: IDENTIFIER DIV_ASSIGN expr .
   80 expr: expr . ADD expr
   81     | expr . SUB expr
   84     | expr . MUL expr
   85     | expr . DIV expr
   86     | expr . MOD expr

    ADD  shift, and go to state 100
    SUB  shift, and go to state 101
    MUL  shift, and go to state 102
    DIV  shift, and go to state 103
    MOD  shift, and go to state 104

    $default  reduce using rule 68 (opassign)


State 115

   67 opassign: IDENTIFIER MUL_ASSIGN expr .
   80 expr: expr . ADD expr
   81     | expr . SUB expr
   84     | expr . MUL expr
   85     | expr . DIV expr
   86     | expr . MOD expr

    ADD  shift, and go to state 100
    SUB  shift, and go to state 101
    MUL  shift, and go to state 102
    DIV  shift, and go to state 103
    MOD  shift, and go to state 104

    $default  reduce using rule 67 (opassign)


State 116

   27 function_use: IDENTIFIER LPAREN RPAREN .

    $default  reduce using rule 27 (function_use)


State 117

   26 function_use: IDENTIFIER LPAREN idlist . RPAREN
   74 idlist: idlist . COMMA IDENTIFIER

    COMMA   shift, and go to state 120
    RPAREN  shift, and go to state 146


State 118

   22 function_decl: T IDENTIFIER LPAREN . RPAREN
   23              | T IDENTIFIER LPAREN . params RPAREN
   24 function_def: T IDENTIFIER LPAREN . params RPAREN block
   25             | T IDENTIFIER LPAREN . RPAREN block

    T_CHAR          shift, and go to state 5
    T_INT           shift, and go to state 6
    T_STRING        shift, and go to state 7
    T_BOOL          shift, and go to state 8
    T_INT_POINTER   shift, and go to state 9
    T_CHAR_POINTER  shift, and go to state 10
    T_VOID          shift, and go to state 11
    RPAREN          shift, and go to state 147

    params  go to state 148
    param   go to state 149
    T       go to state 150


State 119

   62 eq_assigns: eq_assigns COMMA . eq_assign

    IDENTIFIER  shift, and go to state 151

    eq_assign  go to state 152


State 120

   74 idlist: idlist COMMA . IDENTIFIER

    IDENTIFIER  shift, and go to state 153


State 121

   42 if_else: IF LPAREN bool_statements RPAREN . block ELSE block
   43        | IF LPAREN bool_statements RPAREN . block

    LBRACE  shift, and go to state 15

    block  go to state 154


State 122

   39 while: WHILE LPAREN bool_statements RPAREN . block

    LBRACE  shift, and go to state 15

    block  go to state 155


State 123

   21 for: FOR LPAREN SEMICOLON bool_statements . SEMICOLON assigns RPAREN block
   45 bool_statements: bool_statements . AND bool_statements
   46                | bool_statements . OR bool_statements

    SEMICOLON  shift, and go to state 156
    OR         shift, and go to state 92
    AND        shift, and go to state 93


State 124

   20 for: FOR LPAREN declaration SEMICOLON . bool_statements SEMICOLON assigns RPAREN block

    LPAREN      shift, and go to state 39
    IDENTIFIER  shift, and go to state 40
    INTEGER     shift, and go to state 41
    CHAR        shift, and go to state 42
    STRING      shift, and go to state 43
    ADD         shift, and go to state 44
    SUB         shift, and go to state 45
    NOT         shift, and go to state 46

    function_use     go to state 47
    bool_statements  go to state 157
    bool_statement   go to state 49
    expr             go to state 81


State 125

   64 eq_assign: IDENTIFIER . LOP_ASSIGN expr
   75 idlist: IDENTIFIER .

    LOP_ASSIGN  shift, and go to state 55

    $default  reduce using rule 75 (idlist)


State 126

   44 bool_statements: LPAREN bool_statements RPAREN .

    $default  reduce using rule 44 (bool_statements)


State 127

   79 expr: LPAREN expr RPAREN .

    $default  reduce using rule 79 (expr)


State 128

   79 expr: LPAREN expr . RPAREN
   80     | expr . ADD expr
   81     | expr . SUB expr
   84     | expr . MUL expr
   85     | expr . DIV expr
   86     | expr . MOD expr

    RPAREN  shift, and go to state 127
    ADD     shift, and go to state 100
    SUB     shift, and go to state 101
    MUL     shift, and go to state 102
    DIV     shift, and go to state 103
    MOD     shift, and go to state 104


State 129

   45 bool_statements: bool_statements . AND bool_statements
   46                | bool_statements . OR bool_statements
   46                | bool_statements OR bool_statements .

    AND  shift, and go to state 93

    $default  reduce using rule 46 (bool_statements)


State 130

   45 bool_statements: bool_statements . AND bool_statements
   45                | bool_statements AND bool_statements .
   46                | bool_statements . OR bool_statements

    $default  reduce using rule 45 (bool_statements)


State 131

   50 bool_statement: bool_statement . GREAT bool_statement
   51               | bool_statement . LESS bool_statement
   52               | bool_statement . GREAT_EQ bool_statement
   53               | bool_statement . LESS_EQ bool_statement
   54               | bool_statement . LOP_EQ bool_statement
   54               | bool_statement LOP_EQ bool_statement .
   55               | bool_statement . NOT_EQ bool_statement

    $default  reduce using rule 54 (bool_statement)


State 132

   50 bool_statement: bool_statement . GREAT bool_statement
   50               | bool_statement GREAT bool_statement .
   51               | bool_statement . LESS bool_statement
   52               | bool_statement . GREAT_EQ bool_statement
   53               | bool_statement . LESS_EQ bool_statement
   54               | bool_statement . LOP_EQ bool_statement
   55               | bool_statement . NOT_EQ bool_statement

    $default  reduce using rule 50 (bool_statement)


State 133

   50 bool_statement: bool_statement . GREAT bool_statement
   51               | bool_statement . LESS bool_statement
   51               | bool_statement LESS bool_statement .
   52               | bool_statement . GREAT_EQ bool_statement
   53               | bool_statement . LESS_EQ bool_statement
   54               | bool_statement . LOP_EQ bool_statement
   55               | bool_statement . NOT_EQ bool_statement

    $default  reduce using rule 51 (bool_statement)


State 134

   50 bool_statement: bool_statement . GREAT bool_statement
   51               | bool_statement . LESS bool_statement
   52               | bool_statement . GREAT_EQ bool_statement
   52               | bool_statement GREAT_EQ bool_statement .
   53               | bool_statement . LESS_EQ bool_statement
   54               | bool_statement . LOP_EQ bool_statement
   55               | bool_statement . NOT_EQ bool_statement

    $default  reduce using rule 52 (bool_statement)


State 135

   50 bool_statement: bool_statement . GREAT bool_statement
   51               | bool_statement . LESS bool_statement
   52               | bool_statement . GREAT_EQ bool_statement
   53               | bool_statement . LESS_EQ bool_statement
   53               | bool_statement LESS_EQ bool_statement .
   54               | bool_statement . LOP_EQ bool_statement
   55               | bool_statement . NOT_EQ bool_statement

    $default  reduce using rule 53 (bool_statement)


State 136

   50 bool_statement: bool_statement . GREAT bool_statement
   51               | bool_statement . LESS bool_statement
   52               | bool_statement . GREAT_EQ bool_statement
   53               | bool_statement . LESS_EQ bool_statement
   54               | bool_statement . LOP_EQ bool_statement
   55               | bool_statement . NOT_EQ bool_statement
   55               | bool_statement NOT_EQ bool_statement .

    $default  reduce using rule 55 (bool_statement)


State 137

   80 expr: expr . ADD expr
   80     | expr ADD expr .
   81     | expr . SUB expr
   84     | expr . MUL expr
   85     | expr . DIV expr
   86     | expr . MOD expr

    MUL  shift, and go to state 102
    DIV  shift, and go to state 103
    MOD  shift, and go to state 104

    $default  reduce using rule 80 (expr)


State 138

   80 expr: expr . ADD expr
   81     | expr . SUB expr
   81     | expr SUB expr .
   84     | expr . MUL expr
   85     | expr . DIV expr
   86     | expr . MOD expr

    MUL  shift, and go to state 102
    DIV  shift, and go to state 103
    MOD  shift, and go to state 104

    $default  reduce using rule 81 (expr)


State 139

   80 expr: expr . ADD expr
   81     | expr . SUB expr
   84     | expr . MUL expr
   84     | expr MUL expr .
   85     | expr . DIV expr
   86     | expr . MOD expr

    $default  reduce using rule 84 (expr)


State 140

   80 expr: expr . ADD expr
   81     | expr . SUB expr
   84     | expr . MUL expr
   85     | expr . DIV expr
   85     | expr DIV expr .
   86     | expr . MOD expr

    $default  reduce using rule 85 (expr)


State 141

   80 expr: expr . ADD expr
   81     | expr . SUB expr
   84     | expr . MUL expr
   85     | expr . DIV expr
   86     | expr . MOD expr
   86     | expr MOD expr .

    $default  reduce using rule 86 (expr)


State 142

   32 printf: PRINTF LPAREN STRING COMMA . exprs RPAREN
   34       | PRINTF LPAREN STRING COMMA . address_idlist RPAREN

    LPAREN       shift, and go to state 88
    IDENTIFIER   shift, and go to state 40
    INTEGER      shift, and go to state 41
    CHAR         shift, and go to state 42
    STRING       shift, and go to state 43
    ADD          shift, and go to state 44
    SUB          shift, and go to state 45
    GET_ADDRESS  shift, and go to state 158

    function_use    go to state 47
    address_idlist  go to state 159
    get_address_id  go to state 160
    exprs           go to state 161
    expr            go to state 162


State 143

   31 printf: PRINTF LPAREN STRING RPAREN .

    $default  reduce using rule 31 (printf)


State 144

   33 printf: PRINTF LPAREN idlist RPAREN .

    $default  reduce using rule 33 (printf)


State 145

   35 scanf: SCANF LPAREN STRING COMMA . address_idlist RPAREN

    GET_ADDRESS  shift, and go to state 158

    address_idlist  go to state 163
    get_address_id  go to state 160


State 146

   26 function_use: IDENTIFIER LPAREN idlist RPAREN .

    $default  reduce using rule 26 (function_use)


State 147

   22 function_decl: T IDENTIFIER LPAREN RPAREN .
   25 function_def: T IDENTIFIER LPAREN RPAREN . block

    LBRACE  shift, and go to state 15

    $default  reduce using rule 22 (function_decl)

    block  go to state 164


State 148

   23 function_decl: T IDENTIFIER LPAREN params . RPAREN
   24 function_def: T IDENTIFIER LPAREN params . RPAREN block
   28 params: params . COMMA param

    COMMA   shift, and go to state 165
    RPAREN  shift, and go to state 166


State 149

   29 params: param .

    $default  reduce using rule 29 (params)


State 150

   30 param: T . IDENTIFIER

    IDENTIFIER  shift, and go to state 167


State 151

   64 eq_assign: IDENTIFIER . LOP_ASSIGN expr

    LOP_ASSIGN  shift, and go to state 55


State 152

   62 eq_assigns: eq_assigns COMMA eq_assign .

    $default  reduce using rule 62 (eq_assigns)


State 153

   74 idlist: idlist COMMA IDENTIFIER .

    $default  reduce using rule 74 (idlist)


State 154

   42 if_else: IF LPAREN bool_statements RPAREN block . ELSE block
   43        | IF LPAREN bool_statements RPAREN block .

    ELSE  shift, and go to state 168

    $default  reduce using rule 43 (if_else)


State 155

   39 while: WHILE LPAREN bool_statements RPAREN block .

    $default  reduce using rule 39 (while)


State 156

   21 for: FOR LPAREN SEMICOLON bool_statements SEMICOLON . assigns RPAREN block

    IDENTIFIER  shift, and go to state 169
    SELF_INC    shift, and go to state 17
    SELF_DEC    shift, and go to state 18

    assigns    go to state 170
    assign     go to state 171
    eq_assign  go to state 172
    opassign   go to state 173


State 157

   20 for: FOR LPAREN declaration SEMICOLON bool_statements . SEMICOLON assigns RPAREN block
   45 bool_statements: bool_statements . AND bool_statements
   46                | bool_statements . OR bool_statements

    SEMICOLON  shift, and go to state 174
    OR         shift, and go to state 92
    AND        shift, and go to state 93


State 158

   38 get_address_id: GET_ADDRESS . IDENTIFIER

    IDENTIFIER  shift, and go to state 175


State 159

   34 printf: PRINTF LPAREN STRING COMMA address_idlist . RPAREN
   36 address_idlist: address_idlist . COMMA get_address_id

    COMMA   shift, and go to state 176
    RPAREN  shift, and go to state 177


State 160

   37 address_idlist: get_address_id .

    $default  reduce using rule 37 (address_idlist)


State 161

   32 printf: PRINTF LPAREN STRING COMMA exprs . RPAREN
   76 exprs: exprs . COMMA expr

    COMMA   shift, and go to state 178
    RPAREN  shift, and go to state 179


State 162

   77 exprs: expr .
   80 expr: expr . ADD expr
   81     | expr . SUB expr
   84     | expr . MUL expr
   85     | expr . DIV expr
   86     | expr . MOD expr

    ADD  shift, and go to state 100
    SUB  shift, and go to state 101
    MUL  shift, and go to state 102
    DIV  shift, and go to state 103
    MOD  shift, and go to state 104

    $default  reduce using rule 77 (exprs)


State 163

   35 scanf: SCANF LPAREN STRING COMMA address_idlist . RPAREN
   36 address_idlist: address_idlist . COMMA get_address_id

    COMMA   shift, and go to state 176
    RPAREN  shift, and go to state 180


State 164

   25 function_def: T IDENTIFIER LPAREN RPAREN block .

    $default  reduce using rule 25 (function_def)


State 165

   28 params: params COMMA . param

    T_CHAR          shift, and go to state 5
    T_INT           shift, and go to state 6
    T_STRING        shift, and go to state 7
    T_BOOL          shift, and go to state 8
    T_INT_POINTER   shift, and go to state 9
    T_CHAR_POINTER  shift, and go to state 10
    T_VOID          shift, and go to state 11

    param  go to state 181
    T      go to state 150


State 166

   23 function_decl: T IDENTIFIER LPAREN params RPAREN .
   24 function_def: T IDENTIFIER LPAREN params RPAREN . block

    LBRACE  shift, and go to state 15

    $default  reduce using rule 23 (function_decl)

    block  go to state 182


State 167

   30 param: T IDENTIFIER .

    $default  reduce using rule 30 (param)


State 168

   42 if_else: IF LPAREN bool_statements RPAREN block ELSE . block

    LBRACE  shift, and go to state 15

    block  go to state 183


State 169

   64 eq_assign: IDENTIFIER . LOP_ASSIGN expr
   65 opassign: IDENTIFIER . ADD_ASSIGN expr
   66         | IDENTIFIER . SUB_ASSIGN expr
   67         | IDENTIFIER . MUL_ASSIGN expr
   68         | IDENTIFIER . DIV_ASSIGN expr
   69         | IDENTIFIER . MOD_ASSIGN expr
   72         | IDENTIFIER . SELF_INC
   73         | IDENTIFIER . SELF_DEC

    LOP_ASSIGN  shift, and go to state 55
    ADD_ASSIGN  shift, and go to state 56
    SUB_ASSIGN  shift, and go to state 57
    MOD_ASSIGN  shift, and go to state 58
    DIV_ASSIGN  shift, and go to state 59
    MUL_ASSIGN  shift, and go to state 60
    SELF_INC    shift, and go to state 62
    SELF_DEC    shift, and go to state 63


State 170

   21 for: FOR LPAREN SEMICOLON bool_statements SEMICOLON assigns . RPAREN block
   58 assigns: assigns . COMMA assign

    COMMA   shift, and go to state 184
    RPAREN  shift, and go to state 185


State 171

   59 assigns: assign .

    $default  reduce using rule 59 (assigns)


State 172

   61 assign: eq_assign .

    $default  reduce using rule 61 (assign)


State 173

   60 assign: opassign .

    $default  reduce using rule 60 (assign)


State 174

   20 for: FOR LPAREN declaration SEMICOLON bool_statements SEMICOLON . assigns RPAREN block

    IDENTIFIER  shift, and go to state 169
    SELF_INC    shift, and go to state 17
    SELF_DEC    shift, and go to state 18

    assigns    go to state 186
    assign     go to state 171
    eq_assign  go to state 172
    opassign   go to state 173


State 175

   38 get_address_id: GET_ADDRESS IDENTIFIER .

    $default  reduce using rule 38 (get_address_id)


State 176

   36 address_idlist: address_idlist COMMA . get_address_id

    GET_ADDRESS  shift, and go to state 158

    get_address_id  go to state 187


State 177

   34 printf: PRINTF LPAREN STRING COMMA address_idlist RPAREN .

    $default  reduce using rule 34 (printf)


State 178

   76 exprs: exprs COMMA . expr

    LPAREN      shift, and go to state 88
    IDENTIFIER  shift, and go to state 40
    INTEGER     shift, and go to state 41
    CHAR        shift, and go to state 42
    STRING      shift, and go to state 43
    ADD         shift, and go to state 44
    SUB         shift, and go to state 45

    function_use  go to state 47
    expr          go to state 188


State 179

   32 printf: PRINTF LPAREN STRING COMMA exprs RPAREN .

    $default  reduce using rule 32 (printf)


State 180

   35 scanf: SCANF LPAREN STRING COMMA address_idlist RPAREN .

    $default  reduce using rule 35 (scanf)


State 181

   28 params: params COMMA param .

    $default  reduce using rule 28 (params)


State 182

   24 function_def: T IDENTIFIER LPAREN params RPAREN block .

    $default  reduce using rule 24 (function_def)


State 183

   42 if_else: IF LPAREN bool_statements RPAREN block ELSE block .

    $default  reduce using rule 42 (if_else)


State 184

   58 assigns: assigns COMMA . assign

    IDENTIFIER  shift, and go to state 169
    SELF_INC    shift, and go to state 17
    SELF_DEC    shift, and go to state 18

    assign     go to state 189
    eq_assign  go to state 172
    opassign   go to state 173


State 185

   21 for: FOR LPAREN SEMICOLON bool_statements SEMICOLON assigns RPAREN . block

    LBRACE  shift, and go to state 15

    block  go to state 190


State 186

   20 for: FOR LPAREN declaration SEMICOLON bool_statements SEMICOLON assigns . RPAREN block
   58 assigns: assigns . COMMA assign

    COMMA   shift, and go to state 184
    RPAREN  shift, and go to state 191


State 187

   36 address_idlist: address_idlist COMMA get_address_id .

    $default  reduce using rule 36 (address_idlist)


State 188

   76 exprs: exprs COMMA expr .
   80 expr: expr . ADD expr
   81     | expr . SUB expr
   84     | expr . MUL expr
   85     | expr . DIV expr
   86     | expr . MOD expr

    ADD  shift, and go to state 100
    SUB  shift, and go to state 101
    MUL  shift, and go to state 102
    DIV  shift, and go to state 103
    MOD  shift, and go to state 104

    $default  reduce using rule 76 (exprs)


State 189

   58 assigns: assigns COMMA assign .

    $default  reduce using rule 58 (assigns)


State 190

   21 for: FOR LPAREN SEMICOLON bool_statements SEMICOLON assigns RPAREN block .

    $default  reduce using rule 21 (for)


State 191

   20 for: FOR LPAREN declaration SEMICOLON bool_statements SEMICOLON assigns RPAREN . block

    LBRACE  shift, and go to state 15

    block  go to state 192


State 192

   20 for: FOR LPAREN declaration SEMICOLON bool_statements SEMICOLON assigns RPAREN block .

    $default  reduce using rule 20 (for)

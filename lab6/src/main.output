Terminals unused in grammar

   POINT
   LBRACK
   RBRACK
   BOOL
   GET_VALUE


State 50 conflicts: 1 reduce/reduce
State 92 conflicts: 1 shift/reduce


Grammar

    0 $accept: program $end

    1 program: statements

    2 statements: statement
    3           | statements statement

    4 statement: SEMICOLON
    5          | declaration SEMICOLON
    6          | eq_assign SEMICOLON
    7          | if_else
    8          | while
    9          | printf SEMICOLON
   10          | scanf SEMICOLON
   11          | function_decl SEMICOLON
   12          | function_def
   13          | function_use SEMICOLON
   14          | for
   15          | opassign SEMICOLON
   16          | return SEMICOLON
   17          | block

   18 return: RETURN expr
   19       | RETURN bool_statements

   20 for: FOR LPAREN declaration SEMICOLON bool_statements SEMICOLON assigns RPAREN block
   21    | FOR LPAREN assigns SEMICOLON bool_statements SEMICOLON assigns RPAREN block
   22    | FOR LPAREN SEMICOLON bool_statements SEMICOLON assigns RPAREN block

   23 function_decl: T IDENTIFIER LPAREN RPAREN
   24              | T IDENTIFIER LPAREN params RPAREN

   25 function_def: T IDENTIFIER LPAREN params RPAREN block
   26             | T IDENTIFIER LPAREN RPAREN block

   27 function_use: IDENTIFIER LPAREN idlist RPAREN
   28             | IDENTIFIER LPAREN RPAREN

   29 params: params COMMA param
   30       | param

   31 param: T IDENTIFIER

   32 printf: PRINTF LPAREN STRING RPAREN
   33       | PRINTF LPAREN STRING COMMA exprs RPAREN
   34       | PRINTF LPAREN idlist RPAREN
   35       | PRINTF LPAREN STRING COMMA address_idlist RPAREN

   36 scanf: SCANF LPAREN STRING COMMA address_idlist RPAREN

   37 address_idlist: address_idlist COMMA get_address_id
   38               | get_address_id

   39 get_address_id: GET_ADDRESS IDENTIFIER

   40 while: WHILE LPAREN bool_statements RPAREN block

   41 block: LBRACE statements RBRACE
   42      | LBRACE RBRACE

   43 if_else: IF LPAREN bool_statements RPAREN block ELSE block
   44        | IF LPAREN bool_statements RPAREN block

   45 bool_statements: LPAREN bool_statements RPAREN
   46                | bool_statements AND bool_statements
   47                | bool_statements OR bool_statements
   48                | NOT bool_statements
   49                | bool_statement

   50 bool_statement: expr
   51               | bool_statement GREAT bool_statement
   52               | bool_statement LESS bool_statement
   53               | bool_statement GREAT_EQ bool_statement
   54               | bool_statement LESS_EQ bool_statement
   55               | bool_statement LOP_EQ bool_statement
   56               | bool_statement NOT_EQ bool_statement

   57 declaration: T eq_assigns
   58            | T idlist

   59 assigns: assigns COMMA assign
   60        | assign

   61 assign: opassign
   62       | eq_assign

   63 eq_assigns: eq_assigns COMMA eq_assign
   64           | eq_assign

   65 eq_assign: IDENTIFIER LOP_ASSIGN expr

   66 opassign: IDENTIFIER ADD_ASSIGN expr
   67         | IDENTIFIER SUB_ASSIGN expr
   68         | IDENTIFIER MUL_ASSIGN expr
   69         | IDENTIFIER DIV_ASSIGN expr
   70         | IDENTIFIER MOD_ASSIGN expr
   71         | SELF_DEC IDENTIFIER
   72         | SELF_INC IDENTIFIER
   73         | IDENTIFIER SELF_INC
   74         | IDENTIFIER SELF_DEC

   75 idlist: idlist COMMA IDENTIFIER
   76       | IDENTIFIER

   77 exprs: exprs COMMA expr
   78      | expr

   79 expr: function_use
   80     | LPAREN expr RPAREN
   81     | expr ADD expr
   82     | expr SUB expr
   83     | SUB expr
   84     | ADD expr
   85     | expr MUL expr
   86     | expr DIV expr
   87     | expr MOD expr
   88     | IDENTIFIER
   89     | INTEGER
   90     | CHAR
   91     | STRING

   92 T: T_INT
   93  | T_CHAR
   94  | T_BOOL
   95  | T_VOID
   96  | T_STRING
   97  | T_INT_POINTER
   98  | T_CHAR_POINTER


Terminals, with rules where they appear

$end (0) 0
error (256)
IF (258) 43 44
ELSE (259) 43
WHILE (260) 40
FOR (261) 20 21 22
RETURN (262) 18 19
T_CHAR (263) 93
T_INT (264) 92
T_STRING (265) 96
T_BOOL (266) 94
T_INT_POINTER (267) 97
T_CHAR_POINTER (268) 98
T_VOID (269) 95
PRINTF (270) 32 33 34 35
SCANF (271) 36
LOP_ASSIGN (272) 65
ADD_ASSIGN (273) 66
SUB_ASSIGN (274) 67
MOD_ASSIGN (275) 70
DIV_ASSIGN (276) 69
MUL_ASSIGN (277) 68
SEMICOLON (278) 4 5 6 9 10 11 13 15 16 20 21 22
COMMA (279) 29 33 35 36 37 59 63 75 77
POINT (280)
LPAREN (281) 20 21 22 23 24 25 26 27 28 32 33 34 35 36 40 43 44 45
    80
RPAREN (282) 20 21 22 23 24 25 26 27 28 32 33 34 35 36 40 43 44 45
    80
LBRACK (283)
RBRACK (284)
LBRACE (285) 41 42
RBRACE (286) 41 42
IDENTIFIER (287) 23 24 25 26 27 28 31 39 65 66 67 68 69 70 71 72 73
    74 75 76 88
INTEGER (288) 89
CHAR (289) 90
BOOL (290)
STRING (291) 32 33 35 36 91
LOP_EQ (292) 55
GREAT (293) 51
LESS (294) 52
GREAT_EQ (295) 53
LESS_EQ (296) 54
NOT_EQ (297) 56
ADD (298) 81 84
SUB (299) 82 83
MUL (300) 85
DIV (301) 86
MOD (302) 87
OR (303) 47
AND (304) 46
NOT (305) 48
NEG (306)
POS (307)
SELF_INC (308) 72 73
SELF_DEC (309) 71 74
SELF_INC_R (310)
SELF_DEC_R (311)
SELF_INC_L (312)
SELF_DEC_L (313)
GET_ADDRESS (314) 39
GET_VALUE (315)


Nonterminals, with rules where they appear

$accept (61)
    on left: 0
program (62)
    on left: 1, on right: 0
statements (63)
    on left: 2 3, on right: 1 3 41
statement (64)
    on left: 4 5 6 7 8 9 10 11 12 13 14 15 16 17, on right: 2 3
return (65)
    on left: 18 19, on right: 16
for (66)
    on left: 20 21 22, on right: 14
function_decl (67)
    on left: 23 24, on right: 11
function_def (68)
    on left: 25 26, on right: 12
function_use (69)
    on left: 27 28, on right: 13 79
params (70)
    on left: 29 30, on right: 24 25 29
param (71)
    on left: 31, on right: 29 30
printf (72)
    on left: 32 33 34 35, on right: 9
scanf (73)
    on left: 36, on right: 10
address_idlist (74)
    on left: 37 38, on right: 35 36 37
get_address_id (75)
    on left: 39, on right: 37 38
while (76)
    on left: 40, on right: 8
block (77)
    on left: 41 42, on right: 17 20 21 22 25 26 40 43 44
if_else (78)
    on left: 43 44, on right: 7
bool_statements (79)
    on left: 45 46 47 48 49, on right: 19 20 21 22 40 43 44 45 46 47
    48
bool_statement (80)
    on left: 50 51 52 53 54 55 56, on right: 49 51 52 53 54 55 56
declaration (81)
    on left: 57 58, on right: 5 20
assigns (82)
    on left: 59 60, on right: 20 21 22 59
assign (83)
    on left: 61 62, on right: 59 60
eq_assigns (84)
    on left: 63 64, on right: 57 63
eq_assign (85)
    on left: 65, on right: 6 62 63 64
opassign (86)
    on left: 66 67 68 69 70 71 72 73 74, on right: 15 61
idlist (87)
    on left: 75 76, on right: 27 34 58 75
exprs (88)
    on left: 77 78, on right: 33 77
expr (89)
    on left: 79 80 81 82 83 84 85 86 87 88 89 90 91, on right: 18 50
    65 66 67 68 69 70 77 78 80 81 82 83 84 85 86 87
T (90)
    on left: 92 93 94 95 96 97 98, on right: 23 24 25 26 31 57 58


State 0

    0 $accept: . program $end

    IF              shift, and go to state 1
    WHILE           shift, and go to state 2
    FOR             shift, and go to state 3
    RETURN          shift, and go to state 4
    T_CHAR          shift, and go to state 5
    T_INT           shift, and go to state 6
    T_STRING        shift, and go to state 7
    T_BOOL          shift, and go to state 8
    T_INT_POINTER   shift, and go to state 9
    T_CHAR_POINTER  shift, and go to state 10
    T_VOID          shift, and go to state 11
    PRINTF          shift, and go to state 12
    SCANF           shift, and go to state 13
    SEMICOLON       shift, and go to state 14
    LBRACE          shift, and go to state 15
    IDENTIFIER      shift, and go to state 16
    SELF_INC        shift, and go to state 17
    SELF_DEC        shift, and go to state 18

    program        go to state 19
    statements     go to state 20
    statement      go to state 21
    return         go to state 22
    for            go to state 23
    function_decl  go to state 24
    function_def   go to state 25
    function_use   go to state 26
    printf         go to state 27
    scanf          go to state 28
    while          go to state 29
    block          go to state 30
    if_else        go to state 31
    declaration    go to state 32
    eq_assign      go to state 33
    opassign       go to state 34
    T              go to state 35


State 1

   43 if_else: IF . LPAREN bool_statements RPAREN block ELSE block
   44        | IF . LPAREN bool_statements RPAREN block

    LPAREN  shift, and go to state 36


State 2

   40 while: WHILE . LPAREN bool_statements RPAREN block

    LPAREN  shift, and go to state 37


State 3

   20 for: FOR . LPAREN declaration SEMICOLON bool_statements SEMICOLON assigns RPAREN block
   21    | FOR . LPAREN assigns SEMICOLON bool_statements SEMICOLON assigns RPAREN block
   22    | FOR . LPAREN SEMICOLON bool_statements SEMICOLON assigns RPAREN block

    LPAREN  shift, and go to state 38


State 4

   18 return: RETURN . expr
   19       | RETURN . bool_statements

    LPAREN      shift, and go to state 39
    IDENTIFIER  shift, and go to state 40
    INTEGER     shift, and go to state 41
    CHAR        shift, and go to state 42
    STRING      shift, and go to state 43
    ADD         shift, and go to state 44
    SUB         shift, and go to state 45
    NOT         shift, and go to state 46

    function_use     go to state 47
    bool_statements  go to state 48
    bool_statement   go to state 49
    expr             go to state 50


State 5

   93 T: T_CHAR .

    $default  reduce using rule 93 (T)


State 6

   92 T: T_INT .

    $default  reduce using rule 92 (T)


State 7

   96 T: T_STRING .

    $default  reduce using rule 96 (T)


State 8

   94 T: T_BOOL .

    $default  reduce using rule 94 (T)


State 9

   97 T: T_INT_POINTER .

    $default  reduce using rule 97 (T)


State 10

   98 T: T_CHAR_POINTER .

    $default  reduce using rule 98 (T)


State 11

   95 T: T_VOID .

    $default  reduce using rule 95 (T)


State 12

   32 printf: PRINTF . LPAREN STRING RPAREN
   33       | PRINTF . LPAREN STRING COMMA exprs RPAREN
   34       | PRINTF . LPAREN idlist RPAREN
   35       | PRINTF . LPAREN STRING COMMA address_idlist RPAREN

    LPAREN  shift, and go to state 51


State 13

   36 scanf: SCANF . LPAREN STRING COMMA address_idlist RPAREN

    LPAREN  shift, and go to state 52


State 14

    4 statement: SEMICOLON .

    $default  reduce using rule 4 (statement)


State 15

   41 block: LBRACE . statements RBRACE
   42      | LBRACE . RBRACE

    IF              shift, and go to state 1
    WHILE           shift, and go to state 2
    FOR             shift, and go to state 3
    RETURN          shift, and go to state 4
    T_CHAR          shift, and go to state 5
    T_INT           shift, and go to state 6
    T_STRING        shift, and go to state 7
    T_BOOL          shift, and go to state 8
    T_INT_POINTER   shift, and go to state 9
    T_CHAR_POINTER  shift, and go to state 10
    T_VOID          shift, and go to state 11
    PRINTF          shift, and go to state 12
    SCANF           shift, and go to state 13
    SEMICOLON       shift, and go to state 14
    LBRACE          shift, and go to state 15
    RBRACE          shift, and go to state 53
    IDENTIFIER      shift, and go to state 16
    SELF_INC        shift, and go to state 17
    SELF_DEC        shift, and go to state 18

    statements     go to state 54
    statement      go to state 21
    return         go to state 22
    for            go to state 23
    function_decl  go to state 24
    function_def   go to state 25
    function_use   go to state 26
    printf         go to state 27
    scanf          go to state 28
    while          go to state 29
    block          go to state 30
    if_else        go to state 31
    declaration    go to state 32
    eq_assign      go to state 33
    opassign       go to state 34
    T              go to state 35


State 16

   27 function_use: IDENTIFIER . LPAREN idlist RPAREN
   28             | IDENTIFIER . LPAREN RPAREN
   65 eq_assign: IDENTIFIER . LOP_ASSIGN expr
   66 opassign: IDENTIFIER . ADD_ASSIGN expr
   67         | IDENTIFIER . SUB_ASSIGN expr
   68         | IDENTIFIER . MUL_ASSIGN expr
   69         | IDENTIFIER . DIV_ASSIGN expr
   70         | IDENTIFIER . MOD_ASSIGN expr
   73         | IDENTIFIER . SELF_INC
   74         | IDENTIFIER . SELF_DEC

    LOP_ASSIGN  shift, and go to state 55
    ADD_ASSIGN  shift, and go to state 56
    SUB_ASSIGN  shift, and go to state 57
    MOD_ASSIGN  shift, and go to state 58
    DIV_ASSIGN  shift, and go to state 59
    MUL_ASSIGN  shift, and go to state 60
    LPAREN      shift, and go to state 61
    SELF_INC    shift, and go to state 62
    SELF_DEC    shift, and go to state 63


State 17

   72 opassign: SELF_INC . IDENTIFIER

    IDENTIFIER  shift, and go to state 64


State 18

   71 opassign: SELF_DEC . IDENTIFIER

    IDENTIFIER  shift, and go to state 65


State 19

    0 $accept: program . $end

    $end  shift, and go to state 66


State 20

    1 program: statements .
    3 statements: statements . statement

    IF              shift, and go to state 1
    WHILE           shift, and go to state 2
    FOR             shift, and go to state 3
    RETURN          shift, and go to state 4
    T_CHAR          shift, and go to state 5
    T_INT           shift, and go to state 6
    T_STRING        shift, and go to state 7
    T_BOOL          shift, and go to state 8
    T_INT_POINTER   shift, and go to state 9
    T_CHAR_POINTER  shift, and go to state 10
    T_VOID          shift, and go to state 11
    PRINTF          shift, and go to state 12
    SCANF           shift, and go to state 13
    SEMICOLON       shift, and go to state 14
    LBRACE          shift, and go to state 15
    IDENTIFIER      shift, and go to state 16
    SELF_INC        shift, and go to state 17
    SELF_DEC        shift, and go to state 18

    $default  reduce using rule 1 (program)

    statement      go to state 67
    return         go to state 22
    for            go to state 23
    function_decl  go to state 24
    function_def   go to state 25
    function_use   go to state 26
    printf         go to state 27
    scanf          go to state 28
    while          go to state 29
    block          go to state 30
    if_else        go to state 31
    declaration    go to state 32
    eq_assign      go to state 33
    opassign       go to state 34
    T              go to state 35


State 21

    2 statements: statement .

    $default  reduce using rule 2 (statements)


State 22

   16 statement: return . SEMICOLON

    SEMICOLON  shift, and go to state 68


State 23

   14 statement: for .

    $default  reduce using rule 14 (statement)


State 24

   11 statement: function_decl . SEMICOLON

    SEMICOLON  shift, and go to state 69


State 25

   12 statement: function_def .

    $default  reduce using rule 12 (statement)


State 26

   13 statement: function_use . SEMICOLON

    SEMICOLON  shift, and go to state 70


State 27

    9 statement: printf . SEMICOLON

    SEMICOLON  shift, and go to state 71


State 28

   10 statement: scanf . SEMICOLON

    SEMICOLON  shift, and go to state 72


State 29

    8 statement: while .

    $default  reduce using rule 8 (statement)


State 30

   17 statement: block .

    $default  reduce using rule 17 (statement)


State 31

    7 statement: if_else .

    $default  reduce using rule 7 (statement)


State 32

    5 statement: declaration . SEMICOLON

    SEMICOLON  shift, and go to state 73


State 33

    6 statement: eq_assign . SEMICOLON

    SEMICOLON  shift, and go to state 74


State 34

   15 statement: opassign . SEMICOLON

    SEMICOLON  shift, and go to state 75


State 35

   23 function_decl: T . IDENTIFIER LPAREN RPAREN
   24              | T . IDENTIFIER LPAREN params RPAREN
   25 function_def: T . IDENTIFIER LPAREN params RPAREN block
   26             | T . IDENTIFIER LPAREN RPAREN block
   57 declaration: T . eq_assigns
   58            | T . idlist

    IDENTIFIER  shift, and go to state 76

    eq_assigns  go to state 77
    eq_assign   go to state 78
    idlist      go to state 79


State 36

   43 if_else: IF LPAREN . bool_statements RPAREN block ELSE block
   44        | IF LPAREN . bool_statements RPAREN block

    LPAREN      shift, and go to state 39
    IDENTIFIER  shift, and go to state 40
    INTEGER     shift, and go to state 41
    CHAR        shift, and go to state 42
    STRING      shift, and go to state 43
    ADD         shift, and go to state 44
    SUB         shift, and go to state 45
    NOT         shift, and go to state 46

    function_use     go to state 47
    bool_statements  go to state 80
    bool_statement   go to state 49
    expr             go to state 81


State 37

   40 while: WHILE LPAREN . bool_statements RPAREN block

    LPAREN      shift, and go to state 39
    IDENTIFIER  shift, and go to state 40
    INTEGER     shift, and go to state 41
    CHAR        shift, and go to state 42
    STRING      shift, and go to state 43
    ADD         shift, and go to state 44
    SUB         shift, and go to state 45
    NOT         shift, and go to state 46

    function_use     go to state 47
    bool_statements  go to state 82
    bool_statement   go to state 49
    expr             go to state 81


State 38

   20 for: FOR LPAREN . declaration SEMICOLON bool_statements SEMICOLON assigns RPAREN block
   21    | FOR LPAREN . assigns SEMICOLON bool_statements SEMICOLON assigns RPAREN block
   22    | FOR LPAREN . SEMICOLON bool_statements SEMICOLON assigns RPAREN block

    T_CHAR          shift, and go to state 5
    T_INT           shift, and go to state 6
    T_STRING        shift, and go to state 7
    T_BOOL          shift, and go to state 8
    T_INT_POINTER   shift, and go to state 9
    T_CHAR_POINTER  shift, and go to state 10
    T_VOID          shift, and go to state 11
    SEMICOLON       shift, and go to state 83
    IDENTIFIER      shift, and go to state 84
    SELF_INC        shift, and go to state 17
    SELF_DEC        shift, and go to state 18

    declaration  go to state 85
    assigns      go to state 86
    assign       go to state 87
    eq_assign    go to state 88
    opassign     go to state 89
    T            go to state 90


State 39

   45 bool_statements: LPAREN . bool_statements RPAREN
   80 expr: LPAREN . expr RPAREN

    LPAREN      shift, and go to state 39
    IDENTIFIER  shift, and go to state 40
    INTEGER     shift, and go to state 41
    CHAR        shift, and go to state 42
    STRING      shift, and go to state 43
    ADD         shift, and go to state 44
    SUB         shift, and go to state 45
    NOT         shift, and go to state 46

    function_use     go to state 47
    bool_statements  go to state 91
    bool_statement   go to state 49
    expr             go to state 92


State 40

   27 function_use: IDENTIFIER . LPAREN idlist RPAREN
   28             | IDENTIFIER . LPAREN RPAREN
   88 expr: IDENTIFIER .

    LPAREN  shift, and go to state 61

    $default  reduce using rule 88 (expr)


State 41

   89 expr: INTEGER .

    $default  reduce using rule 89 (expr)


State 42

   90 expr: CHAR .

    $default  reduce using rule 90 (expr)


State 43

   91 expr: STRING .

    $default  reduce using rule 91 (expr)


State 44

   84 expr: ADD . expr

    LPAREN      shift, and go to state 93
    IDENTIFIER  shift, and go to state 40
    INTEGER     shift, and go to state 41
    CHAR        shift, and go to state 42
    STRING      shift, and go to state 43
    ADD         shift, and go to state 44
    SUB         shift, and go to state 45

    function_use  go to state 47
    expr          go to state 94


State 45

   83 expr: SUB . expr

    LPAREN      shift, and go to state 93
    IDENTIFIER  shift, and go to state 40
    INTEGER     shift, and go to state 41
    CHAR        shift, and go to state 42
    STRING      shift, and go to state 43
    ADD         shift, and go to state 44
    SUB         shift, and go to state 45

    function_use  go to state 47
    expr          go to state 95


State 46

   48 bool_statements: NOT . bool_statements

    LPAREN      shift, and go to state 39
    IDENTIFIER  shift, and go to state 40
    INTEGER     shift, and go to state 41
    CHAR        shift, and go to state 42
    STRING      shift, and go to state 43
    ADD         shift, and go to state 44
    SUB         shift, and go to state 45
    NOT         shift, and go to state 46

    function_use     go to state 47
    bool_statements  go to state 96
    bool_statement   go to state 49
    expr             go to state 81


State 47

   79 expr: function_use .

    $default  reduce using rule 79 (expr)


State 48

   19 return: RETURN bool_statements .
   46 bool_statements: bool_statements . AND bool_statements
   47                | bool_statements . OR bool_statements

    OR   shift, and go to state 97
    AND  shift, and go to state 98

    $default  reduce using rule 19 (return)


State 49

   49 bool_statements: bool_statement .
   51 bool_statement: bool_statement . GREAT bool_statement
   52               | bool_statement . LESS bool_statement
   53               | bool_statement . GREAT_EQ bool_statement
   54               | bool_statement . LESS_EQ bool_statement
   55               | bool_statement . LOP_EQ bool_statement
   56               | bool_statement . NOT_EQ bool_statement

    LOP_EQ    shift, and go to state 99
    GREAT     shift, and go to state 100
    LESS      shift, and go to state 101
    GREAT_EQ  shift, and go to state 102
    LESS_EQ   shift, and go to state 103
    NOT_EQ    shift, and go to state 104

    $default  reduce using rule 49 (bool_statements)


State 50

   18 return: RETURN expr .
   50 bool_statement: expr .
   81 expr: expr . ADD expr
   82     | expr . SUB expr
   85     | expr . MUL expr
   86     | expr . DIV expr
   87     | expr . MOD expr

    ADD  shift, and go to state 105
    SUB  shift, and go to state 106
    MUL  shift, and go to state 107
    DIV  shift, and go to state 108
    MOD  shift, and go to state 109

    SEMICOLON  reduce using rule 18 (return)
    SEMICOLON  [reduce using rule 50 (bool_statement)]
    $default   reduce using rule 50 (bool_statement)


State 51

   32 printf: PRINTF LPAREN . STRING RPAREN
   33       | PRINTF LPAREN . STRING COMMA exprs RPAREN
   34       | PRINTF LPAREN . idlist RPAREN
   35       | PRINTF LPAREN . STRING COMMA address_idlist RPAREN

    IDENTIFIER  shift, and go to state 110
    STRING      shift, and go to state 111

    idlist  go to state 112


State 52

   36 scanf: SCANF LPAREN . STRING COMMA address_idlist RPAREN

    STRING  shift, and go to state 113


State 53

   42 block: LBRACE RBRACE .

    $default  reduce using rule 42 (block)


State 54

    3 statements: statements . statement
   41 block: LBRACE statements . RBRACE

    IF              shift, and go to state 1
    WHILE           shift, and go to state 2
    FOR             shift, and go to state 3
    RETURN          shift, and go to state 4
    T_CHAR          shift, and go to state 5
    T_INT           shift, and go to state 6
    T_STRING        shift, and go to state 7
    T_BOOL          shift, and go to state 8
    T_INT_POINTER   shift, and go to state 9
    T_CHAR_POINTER  shift, and go to state 10
    T_VOID          shift, and go to state 11
    PRINTF          shift, and go to state 12
    SCANF           shift, and go to state 13
    SEMICOLON       shift, and go to state 14
    LBRACE          shift, and go to state 15
    RBRACE          shift, and go to state 114
    IDENTIFIER      shift, and go to state 16
    SELF_INC        shift, and go to state 17
    SELF_DEC        shift, and go to state 18

    statement      go to state 67
    return         go to state 22
    for            go to state 23
    function_decl  go to state 24
    function_def   go to state 25
    function_use   go to state 26
    printf         go to state 27
    scanf          go to state 28
    while          go to state 29
    block          go to state 30
    if_else        go to state 31
    declaration    go to state 32
    eq_assign      go to state 33
    opassign       go to state 34
    T              go to state 35


State 55

   65 eq_assign: IDENTIFIER LOP_ASSIGN . expr

    LPAREN      shift, and go to state 93
    IDENTIFIER  shift, and go to state 40
    INTEGER     shift, and go to state 41
    CHAR        shift, and go to state 42
    STRING      shift, and go to state 43
    ADD         shift, and go to state 44
    SUB         shift, and go to state 45

    function_use  go to state 47
    expr          go to state 115


State 56

   66 opassign: IDENTIFIER ADD_ASSIGN . expr

    LPAREN      shift, and go to state 93
    IDENTIFIER  shift, and go to state 40
    INTEGER     shift, and go to state 41
    CHAR        shift, and go to state 42
    STRING      shift, and go to state 43
    ADD         shift, and go to state 44
    SUB         shift, and go to state 45

    function_use  go to state 47
    expr          go to state 116


State 57

   67 opassign: IDENTIFIER SUB_ASSIGN . expr

    LPAREN      shift, and go to state 93
    IDENTIFIER  shift, and go to state 40
    INTEGER     shift, and go to state 41
    CHAR        shift, and go to state 42
    STRING      shift, and go to state 43
    ADD         shift, and go to state 44
    SUB         shift, and go to state 45

    function_use  go to state 47
    expr          go to state 117


State 58

   70 opassign: IDENTIFIER MOD_ASSIGN . expr

    LPAREN      shift, and go to state 93
    IDENTIFIER  shift, and go to state 40
    INTEGER     shift, and go to state 41
    CHAR        shift, and go to state 42
    STRING      shift, and go to state 43
    ADD         shift, and go to state 44
    SUB         shift, and go to state 45

    function_use  go to state 47
    expr          go to state 118


State 59

   69 opassign: IDENTIFIER DIV_ASSIGN . expr

    LPAREN      shift, and go to state 93
    IDENTIFIER  shift, and go to state 40
    INTEGER     shift, and go to state 41
    CHAR        shift, and go to state 42
    STRING      shift, and go to state 43
    ADD         shift, and go to state 44
    SUB         shift, and go to state 45

    function_use  go to state 47
    expr          go to state 119


State 60

   68 opassign: IDENTIFIER MUL_ASSIGN . expr

    LPAREN      shift, and go to state 93
    IDENTIFIER  shift, and go to state 40
    INTEGER     shift, and go to state 41
    CHAR        shift, and go to state 42
    STRING      shift, and go to state 43
    ADD         shift, and go to state 44
    SUB         shift, and go to state 45

    function_use  go to state 47
    expr          go to state 120


State 61

   27 function_use: IDENTIFIER LPAREN . idlist RPAREN
   28             | IDENTIFIER LPAREN . RPAREN

    RPAREN      shift, and go to state 121
    IDENTIFIER  shift, and go to state 110

    idlist  go to state 122


State 62

   73 opassign: IDENTIFIER SELF_INC .

    $default  reduce using rule 73 (opassign)


State 63

   74 opassign: IDENTIFIER SELF_DEC .

    $default  reduce using rule 74 (opassign)


State 64

   72 opassign: SELF_INC IDENTIFIER .

    $default  reduce using rule 72 (opassign)


State 65

   71 opassign: SELF_DEC IDENTIFIER .

    $default  reduce using rule 71 (opassign)


State 66

    0 $accept: program $end .

    $default  accept


State 67

    3 statements: statements statement .

    $default  reduce using rule 3 (statements)


State 68

   16 statement: return SEMICOLON .

    $default  reduce using rule 16 (statement)


State 69

   11 statement: function_decl SEMICOLON .

    $default  reduce using rule 11 (statement)


State 70

   13 statement: function_use SEMICOLON .

    $default  reduce using rule 13 (statement)


State 71

    9 statement: printf SEMICOLON .

    $default  reduce using rule 9 (statement)


State 72

   10 statement: scanf SEMICOLON .

    $default  reduce using rule 10 (statement)


State 73

    5 statement: declaration SEMICOLON .

    $default  reduce using rule 5 (statement)


State 74

    6 statement: eq_assign SEMICOLON .

    $default  reduce using rule 6 (statement)


State 75

   15 statement: opassign SEMICOLON .

    $default  reduce using rule 15 (statement)


State 76

   23 function_decl: T IDENTIFIER . LPAREN RPAREN
   24              | T IDENTIFIER . LPAREN params RPAREN
   25 function_def: T IDENTIFIER . LPAREN params RPAREN block
   26             | T IDENTIFIER . LPAREN RPAREN block
   65 eq_assign: IDENTIFIER . LOP_ASSIGN expr
   76 idlist: IDENTIFIER .

    LOP_ASSIGN  shift, and go to state 55
    LPAREN      shift, and go to state 123

    $default  reduce using rule 76 (idlist)


State 77

   57 declaration: T eq_assigns .
   63 eq_assigns: eq_assigns . COMMA eq_assign

    COMMA  shift, and go to state 124

    $default  reduce using rule 57 (declaration)


State 78

   64 eq_assigns: eq_assign .

    $default  reduce using rule 64 (eq_assigns)


State 79

   58 declaration: T idlist .
   75 idlist: idlist . COMMA IDENTIFIER

    COMMA  shift, and go to state 125

    $default  reduce using rule 58 (declaration)


State 80

   43 if_else: IF LPAREN bool_statements . RPAREN block ELSE block
   44        | IF LPAREN bool_statements . RPAREN block
   46 bool_statements: bool_statements . AND bool_statements
   47                | bool_statements . OR bool_statements

    RPAREN  shift, and go to state 126
    OR      shift, and go to state 97
    AND     shift, and go to state 98


State 81

   50 bool_statement: expr .
   81 expr: expr . ADD expr
   82     | expr . SUB expr
   85     | expr . MUL expr
   86     | expr . DIV expr
   87     | expr . MOD expr

    ADD  shift, and go to state 105
    SUB  shift, and go to state 106
    MUL  shift, and go to state 107
    DIV  shift, and go to state 108
    MOD  shift, and go to state 109

    $default  reduce using rule 50 (bool_statement)


State 82

   40 while: WHILE LPAREN bool_statements . RPAREN block
   46 bool_statements: bool_statements . AND bool_statements
   47                | bool_statements . OR bool_statements

    RPAREN  shift, and go to state 127
    OR      shift, and go to state 97
    AND     shift, and go to state 98


State 83

   22 for: FOR LPAREN SEMICOLON . bool_statements SEMICOLON assigns RPAREN block

    LPAREN      shift, and go to state 39
    IDENTIFIER  shift, and go to state 40
    INTEGER     shift, and go to state 41
    CHAR        shift, and go to state 42
    STRING      shift, and go to state 43
    ADD         shift, and go to state 44
    SUB         shift, and go to state 45
    NOT         shift, and go to state 46

    function_use     go to state 47
    bool_statements  go to state 128
    bool_statement   go to state 49
    expr             go to state 81


State 84

   65 eq_assign: IDENTIFIER . LOP_ASSIGN expr
   66 opassign: IDENTIFIER . ADD_ASSIGN expr
   67         | IDENTIFIER . SUB_ASSIGN expr
   68         | IDENTIFIER . MUL_ASSIGN expr
   69         | IDENTIFIER . DIV_ASSIGN expr
   70         | IDENTIFIER . MOD_ASSIGN expr
   73         | IDENTIFIER . SELF_INC
   74         | IDENTIFIER . SELF_DEC

    LOP_ASSIGN  shift, and go to state 55
    ADD_ASSIGN  shift, and go to state 56
    SUB_ASSIGN  shift, and go to state 57
    MOD_ASSIGN  shift, and go to state 58
    DIV_ASSIGN  shift, and go to state 59
    MUL_ASSIGN  shift, and go to state 60
    SELF_INC    shift, and go to state 62
    SELF_DEC    shift, and go to state 63


State 85

   20 for: FOR LPAREN declaration . SEMICOLON bool_statements SEMICOLON assigns RPAREN block

    SEMICOLON  shift, and go to state 129


State 86

   21 for: FOR LPAREN assigns . SEMICOLON bool_statements SEMICOLON assigns RPAREN block
   59 assigns: assigns . COMMA assign

    SEMICOLON  shift, and go to state 130
    COMMA      shift, and go to state 131


State 87

   60 assigns: assign .

    $default  reduce using rule 60 (assigns)


State 88

   62 assign: eq_assign .

    $default  reduce using rule 62 (assign)


State 89

   61 assign: opassign .

    $default  reduce using rule 61 (assign)


State 90

   57 declaration: T . eq_assigns
   58            | T . idlist

    IDENTIFIER  shift, and go to state 132

    eq_assigns  go to state 77
    eq_assign   go to state 78
    idlist      go to state 79


State 91

   45 bool_statements: LPAREN bool_statements . RPAREN
   46                | bool_statements . AND bool_statements
   47                | bool_statements . OR bool_statements

    RPAREN  shift, and go to state 133
    OR      shift, and go to state 97
    AND     shift, and go to state 98


State 92

   50 bool_statement: expr .
   80 expr: LPAREN expr . RPAREN
   81     | expr . ADD expr
   82     | expr . SUB expr
   85     | expr . MUL expr
   86     | expr . DIV expr
   87     | expr . MOD expr

    RPAREN  shift, and go to state 134
    ADD     shift, and go to state 105
    SUB     shift, and go to state 106
    MUL     shift, and go to state 107
    DIV     shift, and go to state 108
    MOD     shift, and go to state 109

    RPAREN    [reduce using rule 50 (bool_statement)]
    $default  reduce using rule 50 (bool_statement)


State 93

   80 expr: LPAREN . expr RPAREN

    LPAREN      shift, and go to state 93
    IDENTIFIER  shift, and go to state 40
    INTEGER     shift, and go to state 41
    CHAR        shift, and go to state 42
    STRING      shift, and go to state 43
    ADD         shift, and go to state 44
    SUB         shift, and go to state 45

    function_use  go to state 47
    expr          go to state 135


State 94

   81 expr: expr . ADD expr
   82     | expr . SUB expr
   84     | ADD expr .
   85     | expr . MUL expr
   86     | expr . DIV expr
   87     | expr . MOD expr

    $default  reduce using rule 84 (expr)


State 95

   81 expr: expr . ADD expr
   82     | expr . SUB expr
   83     | SUB expr .
   85     | expr . MUL expr
   86     | expr . DIV expr
   87     | expr . MOD expr

    $default  reduce using rule 83 (expr)


State 96

   46 bool_statements: bool_statements . AND bool_statements
   47                | bool_statements . OR bool_statements
   48                | NOT bool_statements .

    $default  reduce using rule 48 (bool_statements)


State 97

   47 bool_statements: bool_statements OR . bool_statements

    LPAREN      shift, and go to state 39
    IDENTIFIER  shift, and go to state 40
    INTEGER     shift, and go to state 41
    CHAR        shift, and go to state 42
    STRING      shift, and go to state 43
    ADD         shift, and go to state 44
    SUB         shift, and go to state 45
    NOT         shift, and go to state 46

    function_use     go to state 47
    bool_statements  go to state 136
    bool_statement   go to state 49
    expr             go to state 81


State 98

   46 bool_statements: bool_statements AND . bool_statements

    LPAREN      shift, and go to state 39
    IDENTIFIER  shift, and go to state 40
    INTEGER     shift, and go to state 41
    CHAR        shift, and go to state 42
    STRING      shift, and go to state 43
    ADD         shift, and go to state 44
    SUB         shift, and go to state 45
    NOT         shift, and go to state 46

    function_use     go to state 47
    bool_statements  go to state 137
    bool_statement   go to state 49
    expr             go to state 81


State 99

   55 bool_statement: bool_statement LOP_EQ . bool_statement

    LPAREN      shift, and go to state 93
    IDENTIFIER  shift, and go to state 40
    INTEGER     shift, and go to state 41
    CHAR        shift, and go to state 42
    STRING      shift, and go to state 43
    ADD         shift, and go to state 44
    SUB         shift, and go to state 45

    function_use    go to state 47
    bool_statement  go to state 138
    expr            go to state 81


State 100

   51 bool_statement: bool_statement GREAT . bool_statement

    LPAREN      shift, and go to state 93
    IDENTIFIER  shift, and go to state 40
    INTEGER     shift, and go to state 41
    CHAR        shift, and go to state 42
    STRING      shift, and go to state 43
    ADD         shift, and go to state 44
    SUB         shift, and go to state 45

    function_use    go to state 47
    bool_statement  go to state 139
    expr            go to state 81


State 101

   52 bool_statement: bool_statement LESS . bool_statement

    LPAREN      shift, and go to state 93
    IDENTIFIER  shift, and go to state 40
    INTEGER     shift, and go to state 41
    CHAR        shift, and go to state 42
    STRING      shift, and go to state 43
    ADD         shift, and go to state 44
    SUB         shift, and go to state 45

    function_use    go to state 47
    bool_statement  go to state 140
    expr            go to state 81


State 102

   53 bool_statement: bool_statement GREAT_EQ . bool_statement

    LPAREN      shift, and go to state 93
    IDENTIFIER  shift, and go to state 40
    INTEGER     shift, and go to state 41
    CHAR        shift, and go to state 42
    STRING      shift, and go to state 43
    ADD         shift, and go to state 44
    SUB         shift, and go to state 45

    function_use    go to state 47
    bool_statement  go to state 141
    expr            go to state 81


State 103

   54 bool_statement: bool_statement LESS_EQ . bool_statement

    LPAREN      shift, and go to state 93
    IDENTIFIER  shift, and go to state 40
    INTEGER     shift, and go to state 41
    CHAR        shift, and go to state 42
    STRING      shift, and go to state 43
    ADD         shift, and go to state 44
    SUB         shift, and go to state 45

    function_use    go to state 47
    bool_statement  go to state 142
    expr            go to state 81


State 104

   56 bool_statement: bool_statement NOT_EQ . bool_statement

    LPAREN      shift, and go to state 93
    IDENTIFIER  shift, and go to state 40
    INTEGER     shift, and go to state 41
    CHAR        shift, and go to state 42
    STRING      shift, and go to state 43
    ADD         shift, and go to state 44
    SUB         shift, and go to state 45

    function_use    go to state 47
    bool_statement  go to state 143
    expr            go to state 81


State 105

   81 expr: expr ADD . expr

    LPAREN      shift, and go to state 93
    IDENTIFIER  shift, and go to state 40
    INTEGER     shift, and go to state 41
    CHAR        shift, and go to state 42
    STRING      shift, and go to state 43
    ADD         shift, and go to state 44
    SUB         shift, and go to state 45

    function_use  go to state 47
    expr          go to state 144


State 106

   82 expr: expr SUB . expr

    LPAREN      shift, and go to state 93
    IDENTIFIER  shift, and go to state 40
    INTEGER     shift, and go to state 41
    CHAR        shift, and go to state 42
    STRING      shift, and go to state 43
    ADD         shift, and go to state 44
    SUB         shift, and go to state 45

    function_use  go to state 47
    expr          go to state 145


State 107

   85 expr: expr MUL . expr

    LPAREN      shift, and go to state 93
    IDENTIFIER  shift, and go to state 40
    INTEGER     shift, and go to state 41
    CHAR        shift, and go to state 42
    STRING      shift, and go to state 43
    ADD         shift, and go to state 44
    SUB         shift, and go to state 45

    function_use  go to state 47
    expr          go to state 146


State 108

   86 expr: expr DIV . expr

    LPAREN      shift, and go to state 93
    IDENTIFIER  shift, and go to state 40
    INTEGER     shift, and go to state 41
    CHAR        shift, and go to state 42
    STRING      shift, and go to state 43
    ADD         shift, and go to state 44
    SUB         shift, and go to state 45

    function_use  go to state 47
    expr          go to state 147


State 109

   87 expr: expr MOD . expr

    LPAREN      shift, and go to state 93
    IDENTIFIER  shift, and go to state 40
    INTEGER     shift, and go to state 41
    CHAR        shift, and go to state 42
    STRING      shift, and go to state 43
    ADD         shift, and go to state 44
    SUB         shift, and go to state 45

    function_use  go to state 47
    expr          go to state 148


State 110

   76 idlist: IDENTIFIER .

    $default  reduce using rule 76 (idlist)


State 111

   32 printf: PRINTF LPAREN STRING . RPAREN
   33       | PRINTF LPAREN STRING . COMMA exprs RPAREN
   35       | PRINTF LPAREN STRING . COMMA address_idlist RPAREN

    COMMA   shift, and go to state 149
    RPAREN  shift, and go to state 150


State 112

   34 printf: PRINTF LPAREN idlist . RPAREN
   75 idlist: idlist . COMMA IDENTIFIER

    COMMA   shift, and go to state 125
    RPAREN  shift, and go to state 151


State 113

   36 scanf: SCANF LPAREN STRING . COMMA address_idlist RPAREN

    COMMA  shift, and go to state 152


State 114

   41 block: LBRACE statements RBRACE .

    $default  reduce using rule 41 (block)


State 115

   65 eq_assign: IDENTIFIER LOP_ASSIGN expr .
   81 expr: expr . ADD expr
   82     | expr . SUB expr
   85     | expr . MUL expr
   86     | expr . DIV expr
   87     | expr . MOD expr

    ADD  shift, and go to state 105
    SUB  shift, and go to state 106
    MUL  shift, and go to state 107
    DIV  shift, and go to state 108
    MOD  shift, and go to state 109

    $default  reduce using rule 65 (eq_assign)


State 116

   66 opassign: IDENTIFIER ADD_ASSIGN expr .
   81 expr: expr . ADD expr
   82     | expr . SUB expr
   85     | expr . MUL expr
   86     | expr . DIV expr
   87     | expr . MOD expr

    ADD  shift, and go to state 105
    SUB  shift, and go to state 106
    MUL  shift, and go to state 107
    DIV  shift, and go to state 108
    MOD  shift, and go to state 109

    $default  reduce using rule 66 (opassign)


State 117

   67 opassign: IDENTIFIER SUB_ASSIGN expr .
   81 expr: expr . ADD expr
   82     | expr . SUB expr
   85     | expr . MUL expr
   86     | expr . DIV expr
   87     | expr . MOD expr

    ADD  shift, and go to state 105
    SUB  shift, and go to state 106
    MUL  shift, and go to state 107
    DIV  shift, and go to state 108
    MOD  shift, and go to state 109

    $default  reduce using rule 67 (opassign)


State 118

   70 opassign: IDENTIFIER MOD_ASSIGN expr .
   81 expr: expr . ADD expr
   82     | expr . SUB expr
   85     | expr . MUL expr
   86     | expr . DIV expr
   87     | expr . MOD expr

    ADD  shift, and go to state 105
    SUB  shift, and go to state 106
    MUL  shift, and go to state 107
    DIV  shift, and go to state 108
    MOD  shift, and go to state 109

    $default  reduce using rule 70 (opassign)


State 119

   69 opassign: IDENTIFIER DIV_ASSIGN expr .
   81 expr: expr . ADD expr
   82     | expr . SUB expr
   85     | expr . MUL expr
   86     | expr . DIV expr
   87     | expr . MOD expr

    ADD  shift, and go to state 105
    SUB  shift, and go to state 106
    MUL  shift, and go to state 107
    DIV  shift, and go to state 108
    MOD  shift, and go to state 109

    $default  reduce using rule 69 (opassign)


State 120

   68 opassign: IDENTIFIER MUL_ASSIGN expr .
   81 expr: expr . ADD expr
   82     | expr . SUB expr
   85     | expr . MUL expr
   86     | expr . DIV expr
   87     | expr . MOD expr

    ADD  shift, and go to state 105
    SUB  shift, and go to state 106
    MUL  shift, and go to state 107
    DIV  shift, and go to state 108
    MOD  shift, and go to state 109

    $default  reduce using rule 68 (opassign)


State 121

   28 function_use: IDENTIFIER LPAREN RPAREN .

    $default  reduce using rule 28 (function_use)


State 122

   27 function_use: IDENTIFIER LPAREN idlist . RPAREN
   75 idlist: idlist . COMMA IDENTIFIER

    COMMA   shift, and go to state 125
    RPAREN  shift, and go to state 153


State 123

   23 function_decl: T IDENTIFIER LPAREN . RPAREN
   24              | T IDENTIFIER LPAREN . params RPAREN
   25 function_def: T IDENTIFIER LPAREN . params RPAREN block
   26             | T IDENTIFIER LPAREN . RPAREN block

    T_CHAR          shift, and go to state 5
    T_INT           shift, and go to state 6
    T_STRING        shift, and go to state 7
    T_BOOL          shift, and go to state 8
    T_INT_POINTER   shift, and go to state 9
    T_CHAR_POINTER  shift, and go to state 10
    T_VOID          shift, and go to state 11
    RPAREN          shift, and go to state 154

    params  go to state 155
    param   go to state 156
    T       go to state 157


State 124

   63 eq_assigns: eq_assigns COMMA . eq_assign

    IDENTIFIER  shift, and go to state 158

    eq_assign  go to state 159


State 125

   75 idlist: idlist COMMA . IDENTIFIER

    IDENTIFIER  shift, and go to state 160


State 126

   43 if_else: IF LPAREN bool_statements RPAREN . block ELSE block
   44        | IF LPAREN bool_statements RPAREN . block

    LBRACE  shift, and go to state 15

    block  go to state 161


State 127

   40 while: WHILE LPAREN bool_statements RPAREN . block

    LBRACE  shift, and go to state 15

    block  go to state 162


State 128

   22 for: FOR LPAREN SEMICOLON bool_statements . SEMICOLON assigns RPAREN block
   46 bool_statements: bool_statements . AND bool_statements
   47                | bool_statements . OR bool_statements

    SEMICOLON  shift, and go to state 163
    OR         shift, and go to state 97
    AND        shift, and go to state 98


State 129

   20 for: FOR LPAREN declaration SEMICOLON . bool_statements SEMICOLON assigns RPAREN block

    LPAREN      shift, and go to state 39
    IDENTIFIER  shift, and go to state 40
    INTEGER     shift, and go to state 41
    CHAR        shift, and go to state 42
    STRING      shift, and go to state 43
    ADD         shift, and go to state 44
    SUB         shift, and go to state 45
    NOT         shift, and go to state 46

    function_use     go to state 47
    bool_statements  go to state 164
    bool_statement   go to state 49
    expr             go to state 81


State 130

   21 for: FOR LPAREN assigns SEMICOLON . bool_statements SEMICOLON assigns RPAREN block

    LPAREN      shift, and go to state 39
    IDENTIFIER  shift, and go to state 40
    INTEGER     shift, and go to state 41
    CHAR        shift, and go to state 42
    STRING      shift, and go to state 43
    ADD         shift, and go to state 44
    SUB         shift, and go to state 45
    NOT         shift, and go to state 46

    function_use     go to state 47
    bool_statements  go to state 165
    bool_statement   go to state 49
    expr             go to state 81


State 131

   59 assigns: assigns COMMA . assign

    IDENTIFIER  shift, and go to state 84
    SELF_INC    shift, and go to state 17
    SELF_DEC    shift, and go to state 18

    assign     go to state 166
    eq_assign  go to state 88
    opassign   go to state 89


State 132

   65 eq_assign: IDENTIFIER . LOP_ASSIGN expr
   76 idlist: IDENTIFIER .

    LOP_ASSIGN  shift, and go to state 55

    $default  reduce using rule 76 (idlist)


State 133

   45 bool_statements: LPAREN bool_statements RPAREN .

    $default  reduce using rule 45 (bool_statements)


State 134

   80 expr: LPAREN expr RPAREN .

    $default  reduce using rule 80 (expr)


State 135

   80 expr: LPAREN expr . RPAREN
   81     | expr . ADD expr
   82     | expr . SUB expr
   85     | expr . MUL expr
   86     | expr . DIV expr
   87     | expr . MOD expr

    RPAREN  shift, and go to state 134
    ADD     shift, and go to state 105
    SUB     shift, and go to state 106
    MUL     shift, and go to state 107
    DIV     shift, and go to state 108
    MOD     shift, and go to state 109


State 136

   46 bool_statements: bool_statements . AND bool_statements
   47                | bool_statements . OR bool_statements
   47                | bool_statements OR bool_statements .

    AND  shift, and go to state 98

    $default  reduce using rule 47 (bool_statements)


State 137

   46 bool_statements: bool_statements . AND bool_statements
   46                | bool_statements AND bool_statements .
   47                | bool_statements . OR bool_statements

    $default  reduce using rule 46 (bool_statements)


State 138

   51 bool_statement: bool_statement . GREAT bool_statement
   52               | bool_statement . LESS bool_statement
   53               | bool_statement . GREAT_EQ bool_statement
   54               | bool_statement . LESS_EQ bool_statement
   55               | bool_statement . LOP_EQ bool_statement
   55               | bool_statement LOP_EQ bool_statement .
   56               | bool_statement . NOT_EQ bool_statement

    $default  reduce using rule 55 (bool_statement)


State 139

   51 bool_statement: bool_statement . GREAT bool_statement
   51               | bool_statement GREAT bool_statement .
   52               | bool_statement . LESS bool_statement
   53               | bool_statement . GREAT_EQ bool_statement
   54               | bool_statement . LESS_EQ bool_statement
   55               | bool_statement . LOP_EQ bool_statement
   56               | bool_statement . NOT_EQ bool_statement

    $default  reduce using rule 51 (bool_statement)


State 140

   51 bool_statement: bool_statement . GREAT bool_statement
   52               | bool_statement . LESS bool_statement
   52               | bool_statement LESS bool_statement .
   53               | bool_statement . GREAT_EQ bool_statement
   54               | bool_statement . LESS_EQ bool_statement
   55               | bool_statement . LOP_EQ bool_statement
   56               | bool_statement . NOT_EQ bool_statement

    $default  reduce using rule 52 (bool_statement)


State 141

   51 bool_statement: bool_statement . GREAT bool_statement
   52               | bool_statement . LESS bool_statement
   53               | bool_statement . GREAT_EQ bool_statement
   53               | bool_statement GREAT_EQ bool_statement .
   54               | bool_statement . LESS_EQ bool_statement
   55               | bool_statement . LOP_EQ bool_statement
   56               | bool_statement . NOT_EQ bool_statement

    $default  reduce using rule 53 (bool_statement)


State 142

   51 bool_statement: bool_statement . GREAT bool_statement
   52               | bool_statement . LESS bool_statement
   53               | bool_statement . GREAT_EQ bool_statement
   54               | bool_statement . LESS_EQ bool_statement
   54               | bool_statement LESS_EQ bool_statement .
   55               | bool_statement . LOP_EQ bool_statement
   56               | bool_statement . NOT_EQ bool_statement

    $default  reduce using rule 54 (bool_statement)


State 143

   51 bool_statement: bool_statement . GREAT bool_statement
   52               | bool_statement . LESS bool_statement
   53               | bool_statement . GREAT_EQ bool_statement
   54               | bool_statement . LESS_EQ bool_statement
   55               | bool_statement . LOP_EQ bool_statement
   56               | bool_statement . NOT_EQ bool_statement
   56               | bool_statement NOT_EQ bool_statement .

    $default  reduce using rule 56 (bool_statement)


State 144

   81 expr: expr . ADD expr
   81     | expr ADD expr .
   82     | expr . SUB expr
   85     | expr . MUL expr
   86     | expr . DIV expr
   87     | expr . MOD expr

    MUL  shift, and go to state 107
    DIV  shift, and go to state 108
    MOD  shift, and go to state 109

    $default  reduce using rule 81 (expr)


State 145

   81 expr: expr . ADD expr
   82     | expr . SUB expr
   82     | expr SUB expr .
   85     | expr . MUL expr
   86     | expr . DIV expr
   87     | expr . MOD expr

    MUL  shift, and go to state 107
    DIV  shift, and go to state 108
    MOD  shift, and go to state 109

    $default  reduce using rule 82 (expr)


State 146

   81 expr: expr . ADD expr
   82     | expr . SUB expr
   85     | expr . MUL expr
   85     | expr MUL expr .
   86     | expr . DIV expr
   87     | expr . MOD expr

    $default  reduce using rule 85 (expr)


State 147

   81 expr: expr . ADD expr
   82     | expr . SUB expr
   85     | expr . MUL expr
   86     | expr . DIV expr
   86     | expr DIV expr .
   87     | expr . MOD expr

    $default  reduce using rule 86 (expr)


State 148

   81 expr: expr . ADD expr
   82     | expr . SUB expr
   85     | expr . MUL expr
   86     | expr . DIV expr
   87     | expr . MOD expr
   87     | expr MOD expr .

    $default  reduce using rule 87 (expr)


State 149

   33 printf: PRINTF LPAREN STRING COMMA . exprs RPAREN
   35       | PRINTF LPAREN STRING COMMA . address_idlist RPAREN

    LPAREN       shift, and go to state 93
    IDENTIFIER   shift, and go to state 40
    INTEGER      shift, and go to state 41
    CHAR         shift, and go to state 42
    STRING       shift, and go to state 43
    ADD          shift, and go to state 44
    SUB          shift, and go to state 45
    GET_ADDRESS  shift, and go to state 167

    function_use    go to state 47
    address_idlist  go to state 168
    get_address_id  go to state 169
    exprs           go to state 170
    expr            go to state 171


State 150

   32 printf: PRINTF LPAREN STRING RPAREN .

    $default  reduce using rule 32 (printf)


State 151

   34 printf: PRINTF LPAREN idlist RPAREN .

    $default  reduce using rule 34 (printf)


State 152

   36 scanf: SCANF LPAREN STRING COMMA . address_idlist RPAREN

    GET_ADDRESS  shift, and go to state 167

    address_idlist  go to state 172
    get_address_id  go to state 169


State 153

   27 function_use: IDENTIFIER LPAREN idlist RPAREN .

    $default  reduce using rule 27 (function_use)


State 154

   23 function_decl: T IDENTIFIER LPAREN RPAREN .
   26 function_def: T IDENTIFIER LPAREN RPAREN . block

    LBRACE  shift, and go to state 15

    $default  reduce using rule 23 (function_decl)

    block  go to state 173


State 155

   24 function_decl: T IDENTIFIER LPAREN params . RPAREN
   25 function_def: T IDENTIFIER LPAREN params . RPAREN block
   29 params: params . COMMA param

    COMMA   shift, and go to state 174
    RPAREN  shift, and go to state 175


State 156

   30 params: param .

    $default  reduce using rule 30 (params)


State 157

   31 param: T . IDENTIFIER

    IDENTIFIER  shift, and go to state 176


State 158

   65 eq_assign: IDENTIFIER . LOP_ASSIGN expr

    LOP_ASSIGN  shift, and go to state 55


State 159

   63 eq_assigns: eq_assigns COMMA eq_assign .

    $default  reduce using rule 63 (eq_assigns)


State 160

   75 idlist: idlist COMMA IDENTIFIER .

    $default  reduce using rule 75 (idlist)


State 161

   43 if_else: IF LPAREN bool_statements RPAREN block . ELSE block
   44        | IF LPAREN bool_statements RPAREN block .

    ELSE  shift, and go to state 177

    $default  reduce using rule 44 (if_else)


State 162

   40 while: WHILE LPAREN bool_statements RPAREN block .

    $default  reduce using rule 40 (while)


State 163

   22 for: FOR LPAREN SEMICOLON bool_statements SEMICOLON . assigns RPAREN block

    IDENTIFIER  shift, and go to state 84
    SELF_INC    shift, and go to state 17
    SELF_DEC    shift, and go to state 18

    assigns    go to state 178
    assign     go to state 87
    eq_assign  go to state 88
    opassign   go to state 89


State 164

   20 for: FOR LPAREN declaration SEMICOLON bool_statements . SEMICOLON assigns RPAREN block
   46 bool_statements: bool_statements . AND bool_statements
   47                | bool_statements . OR bool_statements

    SEMICOLON  shift, and go to state 179
    OR         shift, and go to state 97
    AND        shift, and go to state 98


State 165

   21 for: FOR LPAREN assigns SEMICOLON bool_statements . SEMICOLON assigns RPAREN block
   46 bool_statements: bool_statements . AND bool_statements
   47                | bool_statements . OR bool_statements

    SEMICOLON  shift, and go to state 180
    OR         shift, and go to state 97
    AND        shift, and go to state 98


State 166

   59 assigns: assigns COMMA assign .

    $default  reduce using rule 59 (assigns)


State 167

   39 get_address_id: GET_ADDRESS . IDENTIFIER

    IDENTIFIER  shift, and go to state 181


State 168

   35 printf: PRINTF LPAREN STRING COMMA address_idlist . RPAREN
   37 address_idlist: address_idlist . COMMA get_address_id

    COMMA   shift, and go to state 182
    RPAREN  shift, and go to state 183


State 169

   38 address_idlist: get_address_id .

    $default  reduce using rule 38 (address_idlist)


State 170

   33 printf: PRINTF LPAREN STRING COMMA exprs . RPAREN
   77 exprs: exprs . COMMA expr

    COMMA   shift, and go to state 184
    RPAREN  shift, and go to state 185


State 171

   78 exprs: expr .
   81 expr: expr . ADD expr
   82     | expr . SUB expr
   85     | expr . MUL expr
   86     | expr . DIV expr
   87     | expr . MOD expr

    ADD  shift, and go to state 105
    SUB  shift, and go to state 106
    MUL  shift, and go to state 107
    DIV  shift, and go to state 108
    MOD  shift, and go to state 109

    $default  reduce using rule 78 (exprs)


State 172

   36 scanf: SCANF LPAREN STRING COMMA address_idlist . RPAREN
   37 address_idlist: address_idlist . COMMA get_address_id

    COMMA   shift, and go to state 182
    RPAREN  shift, and go to state 186


State 173

   26 function_def: T IDENTIFIER LPAREN RPAREN block .

    $default  reduce using rule 26 (function_def)


State 174

   29 params: params COMMA . param

    T_CHAR          shift, and go to state 5
    T_INT           shift, and go to state 6
    T_STRING        shift, and go to state 7
    T_BOOL          shift, and go to state 8
    T_INT_POINTER   shift, and go to state 9
    T_CHAR_POINTER  shift, and go to state 10
    T_VOID          shift, and go to state 11

    param  go to state 187
    T      go to state 157


State 175

   24 function_decl: T IDENTIFIER LPAREN params RPAREN .
   25 function_def: T IDENTIFIER LPAREN params RPAREN . block

    LBRACE  shift, and go to state 15

    $default  reduce using rule 24 (function_decl)

    block  go to state 188


State 176

   31 param: T IDENTIFIER .

    $default  reduce using rule 31 (param)


State 177

   43 if_else: IF LPAREN bool_statements RPAREN block ELSE . block

    LBRACE  shift, and go to state 15

    block  go to state 189


State 178

   22 for: FOR LPAREN SEMICOLON bool_statements SEMICOLON assigns . RPAREN block
   59 assigns: assigns . COMMA assign

    COMMA   shift, and go to state 131
    RPAREN  shift, and go to state 190


State 179

   20 for: FOR LPAREN declaration SEMICOLON bool_statements SEMICOLON . assigns RPAREN block

    IDENTIFIER  shift, and go to state 84
    SELF_INC    shift, and go to state 17
    SELF_DEC    shift, and go to state 18

    assigns    go to state 191
    assign     go to state 87
    eq_assign  go to state 88
    opassign   go to state 89


State 180

   21 for: FOR LPAREN assigns SEMICOLON bool_statements SEMICOLON . assigns RPAREN block

    IDENTIFIER  shift, and go to state 84
    SELF_INC    shift, and go to state 17
    SELF_DEC    shift, and go to state 18

    assigns    go to state 192
    assign     go to state 87
    eq_assign  go to state 88
    opassign   go to state 89


State 181

   39 get_address_id: GET_ADDRESS IDENTIFIER .

    $default  reduce using rule 39 (get_address_id)


State 182

   37 address_idlist: address_idlist COMMA . get_address_id

    GET_ADDRESS  shift, and go to state 167

    get_address_id  go to state 193


State 183

   35 printf: PRINTF LPAREN STRING COMMA address_idlist RPAREN .

    $default  reduce using rule 35 (printf)


State 184

   77 exprs: exprs COMMA . expr

    LPAREN      shift, and go to state 93
    IDENTIFIER  shift, and go to state 40
    INTEGER     shift, and go to state 41
    CHAR        shift, and go to state 42
    STRING      shift, and go to state 43
    ADD         shift, and go to state 44
    SUB         shift, and go to state 45

    function_use  go to state 47
    expr          go to state 194


State 185

   33 printf: PRINTF LPAREN STRING COMMA exprs RPAREN .

    $default  reduce using rule 33 (printf)


State 186

   36 scanf: SCANF LPAREN STRING COMMA address_idlist RPAREN .

    $default  reduce using rule 36 (scanf)


State 187

   29 params: params COMMA param .

    $default  reduce using rule 29 (params)


State 188

   25 function_def: T IDENTIFIER LPAREN params RPAREN block .

    $default  reduce using rule 25 (function_def)


State 189

   43 if_else: IF LPAREN bool_statements RPAREN block ELSE block .

    $default  reduce using rule 43 (if_else)


State 190

   22 for: FOR LPAREN SEMICOLON bool_statements SEMICOLON assigns RPAREN . block

    LBRACE  shift, and go to state 15

    block  go to state 195


State 191

   20 for: FOR LPAREN declaration SEMICOLON bool_statements SEMICOLON assigns . RPAREN block
   59 assigns: assigns . COMMA assign

    COMMA   shift, and go to state 131
    RPAREN  shift, and go to state 196


State 192

   21 for: FOR LPAREN assigns SEMICOLON bool_statements SEMICOLON assigns . RPAREN block
   59 assigns: assigns . COMMA assign

    COMMA   shift, and go to state 131
    RPAREN  shift, and go to state 197


State 193

   37 address_idlist: address_idlist COMMA get_address_id .

    $default  reduce using rule 37 (address_idlist)


State 194

   77 exprs: exprs COMMA expr .
   81 expr: expr . ADD expr
   82     | expr . SUB expr
   85     | expr . MUL expr
   86     | expr . DIV expr
   87     | expr . MOD expr

    ADD  shift, and go to state 105
    SUB  shift, and go to state 106
    MUL  shift, and go to state 107
    DIV  shift, and go to state 108
    MOD  shift, and go to state 109

    $default  reduce using rule 77 (exprs)


State 195

   22 for: FOR LPAREN SEMICOLON bool_statements SEMICOLON assigns RPAREN block .

    $default  reduce using rule 22 (for)


State 196

   20 for: FOR LPAREN declaration SEMICOLON bool_statements SEMICOLON assigns RPAREN . block

    LBRACE  shift, and go to state 15

    block  go to state 198


State 197

   21 for: FOR LPAREN assigns SEMICOLON bool_statements SEMICOLON assigns RPAREN . block

    LBRACE  shift, and go to state 15

    block  go to state 199


State 198

   20 for: FOR LPAREN declaration SEMICOLON bool_statements SEMICOLON assigns RPAREN block .

    $default  reduce using rule 20 (for)


State 199

   21 for: FOR LPAREN assigns SEMICOLON bool_statements SEMICOLON assigns RPAREN block .

    $default  reduce using rule 21 (for)

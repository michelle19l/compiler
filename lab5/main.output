State 24 conflicts: 1 shift/reduce


Grammar

    0 $accept: program $end

    1 program: statements

    2 statements: statement
    3           | statements statement

    4 statement: instruction
    5          | if_else
    6          | while
    7          | LBRACE statements RBRACE
    8          | SEMICOLON

    9 if_else: IF bool_statment statement
   10        | IF bool_statment statement ELSE statement

   11 while: WHILE bool_statment statement

   12 bool_statment: LPAREN bool_expr RPAREN

   13 instruction: type ID ASSIGN expr SEMICOLON
   14            | ID ASSIGN expr SEMICOLON
   15            | printf SEMICOLON
   16            | scanf SEMICOLON

   17 printf: PRINTF LPAREN expr RPAREN
   18       | PRINTF LPAREN RPAREN

   19 scanf: SCANF LPAREN expr RPAREN

   20 bool_expr: TRUE
   21          | FALSE
   22          | expr EQUAL expr
   23          | NOT bool_expr

   24 expr: ID
   25     | INTEGER
   26     | expr ADD expr
   27     | %empty

   28 type: INT
   29     | VOID


Terminals, with rules where they appear

$end (0) 0
error (256)
ID (258) 13 14 24
INTEGER (259) 25
IF (260) 9 10
ELSE (261) 10
WHILE (262) 11
INT (263) 28
VOID (264) 29
LPAREN (265) 12 17 18 19
RPAREN (266) 12 17 18 19
LBRACE (267) 7
RBRACE (268) 7
SEMICOLON (269) 8 13 14 15 16
TRUE (270) 20
FALSE (271) 21
ADD (272) 26
ASSIGN (273) 13 14
EQUAL (274) 22
NOT (275) 23
PRINTF (276) 17 18
SCANF (277) 19
LOWER_THEN_ELSE (278)


Nonterminals, with rules where they appear

$accept (24)
    on left: 0
program (25)
    on left: 1, on right: 0
statements (26)
    on left: 2 3, on right: 1 3 7
statement (27)
    on left: 4 5 6 7 8, on right: 2 3 9 10 11
if_else (28)
    on left: 9 10, on right: 5
while (29)
    on left: 11, on right: 6
bool_statment (30)
    on left: 12, on right: 9 10 11
instruction (31)
    on left: 13 14 15 16, on right: 4
printf (32)
    on left: 17 18, on right: 15
scanf (33)
    on left: 19, on right: 16
bool_expr (34)
    on left: 20 21 22 23, on right: 12 23
expr (35)
    on left: 24 25 26 27, on right: 13 14 17 19 22 26
type (36)
    on left: 28 29, on right: 13


State 0

    0 $accept: . program $end

    ID         shift, and go to state 1
    IF         shift, and go to state 2
    WHILE      shift, and go to state 3
    INT        shift, and go to state 4
    VOID       shift, and go to state 5
    LBRACE     shift, and go to state 6
    SEMICOLON  shift, and go to state 7
    PRINTF     shift, and go to state 8
    SCANF      shift, and go to state 9

    program      go to state 10
    statements   go to state 11
    statement    go to state 12
    if_else      go to state 13
    while        go to state 14
    instruction  go to state 15
    printf       go to state 16
    scanf        go to state 17
    type         go to state 18


State 1

   14 instruction: ID . ASSIGN expr SEMICOLON

    ASSIGN  shift, and go to state 19


State 2

    9 if_else: IF . bool_statment statement
   10        | IF . bool_statment statement ELSE statement

    LPAREN  shift, and go to state 20

    bool_statment  go to state 21


State 3

   11 while: WHILE . bool_statment statement

    LPAREN  shift, and go to state 20

    bool_statment  go to state 22


State 4

   28 type: INT .

    $default  reduce using rule 28 (type)


State 5

   29 type: VOID .

    $default  reduce using rule 29 (type)


State 6

    7 statement: LBRACE . statements RBRACE

    ID         shift, and go to state 1
    IF         shift, and go to state 2
    WHILE      shift, and go to state 3
    INT        shift, and go to state 4
    VOID       shift, and go to state 5
    LBRACE     shift, and go to state 6
    SEMICOLON  shift, and go to state 7
    PRINTF     shift, and go to state 8
    SCANF      shift, and go to state 9

    statements   go to state 23
    statement    go to state 12
    if_else      go to state 13
    while        go to state 14
    instruction  go to state 15
    printf       go to state 16
    scanf        go to state 17
    type         go to state 18


State 7

    8 statement: SEMICOLON .

    $default  reduce using rule 8 (statement)


State 8

   17 printf: PRINTF . LPAREN expr RPAREN
   18       | PRINTF . LPAREN RPAREN

    LPAREN  shift, and go to state 24


State 9

   19 scanf: SCANF . LPAREN expr RPAREN

    LPAREN  shift, and go to state 25


State 10

    0 $accept: program . $end

    $end  shift, and go to state 26


State 11

    1 program: statements .
    3 statements: statements . statement

    ID         shift, and go to state 1
    IF         shift, and go to state 2
    WHILE      shift, and go to state 3
    INT        shift, and go to state 4
    VOID       shift, and go to state 5
    LBRACE     shift, and go to state 6
    SEMICOLON  shift, and go to state 7
    PRINTF     shift, and go to state 8
    SCANF      shift, and go to state 9

    $default  reduce using rule 1 (program)

    statement    go to state 27
    if_else      go to state 13
    while        go to state 14
    instruction  go to state 15
    printf       go to state 16
    scanf        go to state 17
    type         go to state 18


State 12

    2 statements: statement .

    $default  reduce using rule 2 (statements)


State 13

    5 statement: if_else .

    $default  reduce using rule 5 (statement)


State 14

    6 statement: while .

    $default  reduce using rule 6 (statement)


State 15

    4 statement: instruction .

    $default  reduce using rule 4 (statement)


State 16

   15 instruction: printf . SEMICOLON

    SEMICOLON  shift, and go to state 28


State 17

   16 instruction: scanf . SEMICOLON

    SEMICOLON  shift, and go to state 29


State 18

   13 instruction: type . ID ASSIGN expr SEMICOLON

    ID  shift, and go to state 30


State 19

   14 instruction: ID ASSIGN . expr SEMICOLON

    ID       shift, and go to state 31
    INTEGER  shift, and go to state 32

    $default  reduce using rule 27 (expr)

    expr  go to state 33


State 20

   12 bool_statment: LPAREN . bool_expr RPAREN

    ID       shift, and go to state 31
    INTEGER  shift, and go to state 32
    TRUE     shift, and go to state 34
    FALSE    shift, and go to state 35
    NOT      shift, and go to state 36

    $default  reduce using rule 27 (expr)

    bool_expr  go to state 37
    expr       go to state 38


State 21

    9 if_else: IF bool_statment . statement
   10        | IF bool_statment . statement ELSE statement

    ID         shift, and go to state 1
    IF         shift, and go to state 2
    WHILE      shift, and go to state 3
    INT        shift, and go to state 4
    VOID       shift, and go to state 5
    LBRACE     shift, and go to state 6
    SEMICOLON  shift, and go to state 7
    PRINTF     shift, and go to state 8
    SCANF      shift, and go to state 9

    statement    go to state 39
    if_else      go to state 13
    while        go to state 14
    instruction  go to state 15
    printf       go to state 16
    scanf        go to state 17
    type         go to state 18


State 22

   11 while: WHILE bool_statment . statement

    ID         shift, and go to state 1
    IF         shift, and go to state 2
    WHILE      shift, and go to state 3
    INT        shift, and go to state 4
    VOID       shift, and go to state 5
    LBRACE     shift, and go to state 6
    SEMICOLON  shift, and go to state 7
    PRINTF     shift, and go to state 8
    SCANF      shift, and go to state 9

    statement    go to state 40
    if_else      go to state 13
    while        go to state 14
    instruction  go to state 15
    printf       go to state 16
    scanf        go to state 17
    type         go to state 18


State 23

    3 statements: statements . statement
    7 statement: LBRACE statements . RBRACE

    ID         shift, and go to state 1
    IF         shift, and go to state 2
    WHILE      shift, and go to state 3
    INT        shift, and go to state 4
    VOID       shift, and go to state 5
    LBRACE     shift, and go to state 6
    RBRACE     shift, and go to state 41
    SEMICOLON  shift, and go to state 7
    PRINTF     shift, and go to state 8
    SCANF      shift, and go to state 9

    statement    go to state 27
    if_else      go to state 13
    while        go to state 14
    instruction  go to state 15
    printf       go to state 16
    scanf        go to state 17
    type         go to state 18


State 24

   17 printf: PRINTF LPAREN . expr RPAREN
   18       | PRINTF LPAREN . RPAREN

    ID       shift, and go to state 31
    INTEGER  shift, and go to state 32
    RPAREN   shift, and go to state 42

    RPAREN    [reduce using rule 27 (expr)]
    $default  reduce using rule 27 (expr)

    expr  go to state 43


State 25

   19 scanf: SCANF LPAREN . expr RPAREN

    ID       shift, and go to state 31
    INTEGER  shift, and go to state 32

    $default  reduce using rule 27 (expr)

    expr  go to state 44


State 26

    0 $accept: program $end .

    $default  accept


State 27

    3 statements: statements statement .

    $default  reduce using rule 3 (statements)


State 28

   15 instruction: printf SEMICOLON .

    $default  reduce using rule 15 (instruction)


State 29

   16 instruction: scanf SEMICOLON .

    $default  reduce using rule 16 (instruction)


State 30

   13 instruction: type ID . ASSIGN expr SEMICOLON

    ASSIGN  shift, and go to state 45


State 31

   24 expr: ID .

    $default  reduce using rule 24 (expr)


State 32

   25 expr: INTEGER .

    $default  reduce using rule 25 (expr)


State 33

   14 instruction: ID ASSIGN expr . SEMICOLON
   26 expr: expr . ADD expr

    SEMICOLON  shift, and go to state 46
    ADD        shift, and go to state 47


State 34

   20 bool_expr: TRUE .

    $default  reduce using rule 20 (bool_expr)


State 35

   21 bool_expr: FALSE .

    $default  reduce using rule 21 (bool_expr)


State 36

   23 bool_expr: NOT . bool_expr

    ID       shift, and go to state 31
    INTEGER  shift, and go to state 32
    TRUE     shift, and go to state 34
    FALSE    shift, and go to state 35
    NOT      shift, and go to state 36

    $default  reduce using rule 27 (expr)

    bool_expr  go to state 48
    expr       go to state 38


State 37

   12 bool_statment: LPAREN bool_expr . RPAREN

    RPAREN  shift, and go to state 49


State 38

   22 bool_expr: expr . EQUAL expr
   26 expr: expr . ADD expr

    ADD    shift, and go to state 47
    EQUAL  shift, and go to state 50


State 39

    9 if_else: IF bool_statment statement .
   10        | IF bool_statment statement . ELSE statement

    ELSE  shift, and go to state 51

    $default  reduce using rule 9 (if_else)


State 40

   11 while: WHILE bool_statment statement .

    $default  reduce using rule 11 (while)


State 41

    7 statement: LBRACE statements RBRACE .

    $default  reduce using rule 7 (statement)


State 42

   18 printf: PRINTF LPAREN RPAREN .

    $default  reduce using rule 18 (printf)


State 43

   17 printf: PRINTF LPAREN expr . RPAREN
   26 expr: expr . ADD expr

    RPAREN  shift, and go to state 52
    ADD     shift, and go to state 47


State 44

   19 scanf: SCANF LPAREN expr . RPAREN
   26 expr: expr . ADD expr

    RPAREN  shift, and go to state 53
    ADD     shift, and go to state 47


State 45

   13 instruction: type ID ASSIGN . expr SEMICOLON

    ID       shift, and go to state 31
    INTEGER  shift, and go to state 32

    $default  reduce using rule 27 (expr)

    expr  go to state 54


State 46

   14 instruction: ID ASSIGN expr SEMICOLON .

    $default  reduce using rule 14 (instruction)


State 47

   26 expr: expr ADD . expr

    ID       shift, and go to state 31
    INTEGER  shift, and go to state 32

    $default  reduce using rule 27 (expr)

    expr  go to state 55


State 48

   23 bool_expr: NOT bool_expr .

    $default  reduce using rule 23 (bool_expr)


State 49

   12 bool_statment: LPAREN bool_expr RPAREN .

    $default  reduce using rule 12 (bool_statment)


State 50

   22 bool_expr: expr EQUAL . expr

    ID       shift, and go to state 31
    INTEGER  shift, and go to state 32

    $default  reduce using rule 27 (expr)

    expr  go to state 56


State 51

   10 if_else: IF bool_statment statement ELSE . statement

    ID         shift, and go to state 1
    IF         shift, and go to state 2
    WHILE      shift, and go to state 3
    INT        shift, and go to state 4
    VOID       shift, and go to state 5
    LBRACE     shift, and go to state 6
    SEMICOLON  shift, and go to state 7
    PRINTF     shift, and go to state 8
    SCANF      shift, and go to state 9

    statement    go to state 57
    if_else      go to state 13
    while        go to state 14
    instruction  go to state 15
    printf       go to state 16
    scanf        go to state 17
    type         go to state 18


State 52

   17 printf: PRINTF LPAREN expr RPAREN .

    $default  reduce using rule 17 (printf)


State 53

   19 scanf: SCANF LPAREN expr RPAREN .

    $default  reduce using rule 19 (scanf)


State 54

   13 instruction: type ID ASSIGN expr . SEMICOLON
   26 expr: expr . ADD expr

    SEMICOLON  shift, and go to state 58
    ADD        shift, and go to state 47


State 55

   26 expr: expr . ADD expr
   26     | expr ADD expr .

    $default  reduce using rule 26 (expr)


State 56

   22 bool_expr: expr EQUAL expr .
   26 expr: expr . ADD expr

    ADD  shift, and go to state 47

    $default  reduce using rule 22 (bool_expr)


State 57

   10 if_else: IF bool_statment statement ELSE statement .

    $default  reduce using rule 10 (if_else)


State 58

   13 instruction: type ID ASSIGN expr SEMICOLON .

    $default  reduce using rule 13 (instruction)

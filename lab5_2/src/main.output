Terminals unused in grammar

   FOR
   RETURN
   POINT
   LBRACK
   RBRACK
   BOOL


State 50 conflicts: 1 shift/reduce
State 58 conflicts: 11 reduce/reduce
State 70 conflicts: 10 shift/reduce
State 99 conflicts: 10 shift/reduce


Grammar

    0 $accept: program $end

    1 program: statements

    2 statements: statement
    3           | statements statement
    4           | LBRACE statements RBRACE
    5           | LBRACE RBRACE

    6 statement: SEMICOLON
    7          | declaration SEMICOLON
    8          | assign SEMICOLON
    9          | if_else
   10          | while
   11          | printf SEMICOLON
   12          | scanf SEMICOLON

   13 printf: PRINTF LPAREN STRING RPAREN
   14       | PRINTF LPAREN STRING COMMA exprs RPAREN

   15 scanf: SCANF LPAREN STRING COMMA idlist RPAREN

   16 while: WHILE bool_statements statements

   17 if_else: IF bool_statements statements ELSE statements
   18        | IF bool_statements statement

   19 bool_statements: LPAREN bool_statements RPAREN
   20                | bool_statements AND bool_statements
   21                | bool_statements OR bool_statements
   22                | NOT bool_statements
   23                | bool_statement

   24 bool_statement: expr
   25               | bool_statement GREAT bool_statement
   26               | bool_statement LESS bool_statement
   27               | bool_statement GREAT_EQ bool_statement
   28               | bool_statement LESS_EQ bool_statement
   29               | bool_statement LOP_EQ bool_statement
   30               | bool_statement NOT_EQ bool_statement

   31 declaration: T assigns
   32            | T idlist

   33 assigns: assigns COMMA assign
   34        | assign

   35 assign: IDENTIFIER LOP_ASSIGN expr

   36 idlist: idlist COMMA IDENTIFIER
   37       | IDENTIFIER

   38 exprs: exprs COMMA expr
   39      | expr

   40 expr: LPAREN expr RPAREN
   41     | expr ADD expr
   42     | expr SUB expr
   43     | SUB expr
   44     | ADD expr
   45     | expr MUL expr
   46     | expr DIV expr
   47     | expr MOD expr
   48     | IDENTIFIER
   49     | INTEGER
   50     | CHAR
   51     | STRING

   52 T: T_INT
   53  | T_CHAR
   54  | T_BOOL
   55  | T_STRING


Terminals, with rules where they appear

$end (0) 0
error (256)
IF (258) 17 18
ELSE (259) 17
WHILE (260) 16
FOR (261)
RETURN (262)
T_CHAR (263) 53
T_INT (264) 52
T_STRING (265) 55
T_BOOL (266) 54
PRINTF (267) 13 14
SCANF (268) 15
LOP_ASSIGN (269) 35
SEMICOLON (270) 6 7 8 11 12
COMMA (271) 14 15 33 36 38
POINT (272)
LPAREN (273) 13 14 15 19 40
RPAREN (274) 13 14 15 19 40
LBRACK (275)
RBRACK (276)
LBRACE (277) 4 5
RBRACE (278) 4 5
IDENTIFIER (279) 35 36 37 48
INTEGER (280) 49
CHAR (281) 50
BOOL (282)
STRING (283) 13 14 15 51
LOP_EQ (284) 29
GREAT (285) 25
LESS (286) 26
GREAT_EQ (287) 27
LESS_EQ (288) 28
NOT_EQ (289) 30
ADD (290) 41 44
SUB (291) 42 43
MUL (292) 45
DIV (293) 46
MOD (294) 47
OR (295) 21
AND (296) 20
NOT (297) 22
NEG (298)
POS (299)


Nonterminals, with rules where they appear

$accept (45)
    on left: 0
program (46)
    on left: 1, on right: 0
statements (47)
    on left: 2 3 4 5, on right: 1 3 4 16 17
statement (48)
    on left: 6 7 8 9 10 11 12, on right: 2 3 18
printf (49)
    on left: 13 14, on right: 11
scanf (50)
    on left: 15, on right: 12
while (51)
    on left: 16, on right: 10
if_else (52)
    on left: 17 18, on right: 9
bool_statements (53)
    on left: 19 20 21 22 23, on right: 16 17 18 19 20 21 22
bool_statement (54)
    on left: 24 25 26 27 28 29 30, on right: 23 25 26 27 28 29 30
declaration (55)
    on left: 31 32, on right: 7
assigns (56)
    on left: 33 34, on right: 31 33
assign (57)
    on left: 35, on right: 8 33 34
idlist (58)
    on left: 36 37, on right: 15 32 36
exprs (59)
    on left: 38 39, on right: 14 38
expr (60)
    on left: 40 41 42 43 44 45 46 47 48 49 50 51, on right: 24 35 38
    39 40 41 42 43 44 45 46 47
T (61)
    on left: 52 53 54 55, on right: 31 32


State 0

    0 $accept: . program $end

    IF          shift, and go to state 1
    WHILE       shift, and go to state 2
    T_CHAR      shift, and go to state 3
    T_INT       shift, and go to state 4
    T_STRING    shift, and go to state 5
    T_BOOL      shift, and go to state 6
    PRINTF      shift, and go to state 7
    SCANF       shift, and go to state 8
    SEMICOLON   shift, and go to state 9
    LBRACE      shift, and go to state 10
    IDENTIFIER  shift, and go to state 11

    program      go to state 12
    statements   go to state 13
    statement    go to state 14
    printf       go to state 15
    scanf        go to state 16
    while        go to state 17
    if_else      go to state 18
    declaration  go to state 19
    assign       go to state 20
    T            go to state 21


State 1

   17 if_else: IF . bool_statements statements ELSE statements
   18        | IF . bool_statements statement

    LPAREN      shift, and go to state 22
    IDENTIFIER  shift, and go to state 23
    INTEGER     shift, and go to state 24
    CHAR        shift, and go to state 25
    STRING      shift, and go to state 26
    ADD         shift, and go to state 27
    SUB         shift, and go to state 28
    NOT         shift, and go to state 29

    bool_statements  go to state 30
    bool_statement   go to state 31
    expr             go to state 32


State 2

   16 while: WHILE . bool_statements statements

    LPAREN      shift, and go to state 22
    IDENTIFIER  shift, and go to state 23
    INTEGER     shift, and go to state 24
    CHAR        shift, and go to state 25
    STRING      shift, and go to state 26
    ADD         shift, and go to state 27
    SUB         shift, and go to state 28
    NOT         shift, and go to state 29

    bool_statements  go to state 33
    bool_statement   go to state 31
    expr             go to state 32


State 3

   53 T: T_CHAR .

    $default  reduce using rule 53 (T)


State 4

   52 T: T_INT .

    $default  reduce using rule 52 (T)


State 5

   55 T: T_STRING .

    $default  reduce using rule 55 (T)


State 6

   54 T: T_BOOL .

    $default  reduce using rule 54 (T)


State 7

   13 printf: PRINTF . LPAREN STRING RPAREN
   14       | PRINTF . LPAREN STRING COMMA exprs RPAREN

    LPAREN  shift, and go to state 34


State 8

   15 scanf: SCANF . LPAREN STRING COMMA idlist RPAREN

    LPAREN  shift, and go to state 35


State 9

    6 statement: SEMICOLON .

    $default  reduce using rule 6 (statement)


State 10

    4 statements: LBRACE . statements RBRACE
    5           | LBRACE . RBRACE

    IF          shift, and go to state 1
    WHILE       shift, and go to state 2
    T_CHAR      shift, and go to state 3
    T_INT       shift, and go to state 4
    T_STRING    shift, and go to state 5
    T_BOOL      shift, and go to state 6
    PRINTF      shift, and go to state 7
    SCANF       shift, and go to state 8
    SEMICOLON   shift, and go to state 9
    LBRACE      shift, and go to state 10
    RBRACE      shift, and go to state 36
    IDENTIFIER  shift, and go to state 11

    statements   go to state 37
    statement    go to state 14
    printf       go to state 15
    scanf        go to state 16
    while        go to state 17
    if_else      go to state 18
    declaration  go to state 19
    assign       go to state 20
    T            go to state 21


State 11

   35 assign: IDENTIFIER . LOP_ASSIGN expr

    LOP_ASSIGN  shift, and go to state 38


State 12

    0 $accept: program . $end

    $end  shift, and go to state 39


State 13

    1 program: statements .
    3 statements: statements . statement

    IF          shift, and go to state 1
    WHILE       shift, and go to state 2
    T_CHAR      shift, and go to state 3
    T_INT       shift, and go to state 4
    T_STRING    shift, and go to state 5
    T_BOOL      shift, and go to state 6
    PRINTF      shift, and go to state 7
    SCANF       shift, and go to state 8
    SEMICOLON   shift, and go to state 9
    IDENTIFIER  shift, and go to state 11

    $default  reduce using rule 1 (program)

    statement    go to state 40
    printf       go to state 15
    scanf        go to state 16
    while        go to state 17
    if_else      go to state 18
    declaration  go to state 19
    assign       go to state 20
    T            go to state 21


State 14

    2 statements: statement .

    $default  reduce using rule 2 (statements)


State 15

   11 statement: printf . SEMICOLON

    SEMICOLON  shift, and go to state 41


State 16

   12 statement: scanf . SEMICOLON

    SEMICOLON  shift, and go to state 42


State 17

   10 statement: while .

    $default  reduce using rule 10 (statement)


State 18

    9 statement: if_else .

    $default  reduce using rule 9 (statement)


State 19

    7 statement: declaration . SEMICOLON

    SEMICOLON  shift, and go to state 43


State 20

    8 statement: assign . SEMICOLON

    SEMICOLON  shift, and go to state 44


State 21

   31 declaration: T . assigns
   32            | T . idlist

    IDENTIFIER  shift, and go to state 45

    assigns  go to state 46
    assign   go to state 47
    idlist   go to state 48


State 22

   19 bool_statements: LPAREN . bool_statements RPAREN
   40 expr: LPAREN . expr RPAREN

    LPAREN      shift, and go to state 22
    IDENTIFIER  shift, and go to state 23
    INTEGER     shift, and go to state 24
    CHAR        shift, and go to state 25
    STRING      shift, and go to state 26
    ADD         shift, and go to state 27
    SUB         shift, and go to state 28
    NOT         shift, and go to state 29

    bool_statements  go to state 49
    bool_statement   go to state 31
    expr             go to state 50


State 23

   48 expr: IDENTIFIER .

    $default  reduce using rule 48 (expr)


State 24

   49 expr: INTEGER .

    $default  reduce using rule 49 (expr)


State 25

   50 expr: CHAR .

    $default  reduce using rule 50 (expr)


State 26

   51 expr: STRING .

    $default  reduce using rule 51 (expr)


State 27

   44 expr: ADD . expr

    LPAREN      shift, and go to state 51
    IDENTIFIER  shift, and go to state 23
    INTEGER     shift, and go to state 24
    CHAR        shift, and go to state 25
    STRING      shift, and go to state 26
    ADD         shift, and go to state 27
    SUB         shift, and go to state 28

    expr  go to state 52


State 28

   43 expr: SUB . expr

    LPAREN      shift, and go to state 51
    IDENTIFIER  shift, and go to state 23
    INTEGER     shift, and go to state 24
    CHAR        shift, and go to state 25
    STRING      shift, and go to state 26
    ADD         shift, and go to state 27
    SUB         shift, and go to state 28

    expr  go to state 53


State 29

   22 bool_statements: NOT . bool_statements

    LPAREN      shift, and go to state 22
    IDENTIFIER  shift, and go to state 23
    INTEGER     shift, and go to state 24
    CHAR        shift, and go to state 25
    STRING      shift, and go to state 26
    ADD         shift, and go to state 27
    SUB         shift, and go to state 28
    NOT         shift, and go to state 29

    bool_statements  go to state 54
    bool_statement   go to state 31
    expr             go to state 32


State 30

   17 if_else: IF bool_statements . statements ELSE statements
   18        | IF bool_statements . statement
   20 bool_statements: bool_statements . AND bool_statements
   21                | bool_statements . OR bool_statements

    IF          shift, and go to state 1
    WHILE       shift, and go to state 2
    T_CHAR      shift, and go to state 3
    T_INT       shift, and go to state 4
    T_STRING    shift, and go to state 5
    T_BOOL      shift, and go to state 6
    PRINTF      shift, and go to state 7
    SCANF       shift, and go to state 8
    SEMICOLON   shift, and go to state 9
    LBRACE      shift, and go to state 10
    IDENTIFIER  shift, and go to state 11
    OR          shift, and go to state 55
    AND         shift, and go to state 56

    statements   go to state 57
    statement    go to state 58
    printf       go to state 15
    scanf        go to state 16
    while        go to state 17
    if_else      go to state 18
    declaration  go to state 19
    assign       go to state 20
    T            go to state 21


State 31

   23 bool_statements: bool_statement .
   25 bool_statement: bool_statement . GREAT bool_statement
   26               | bool_statement . LESS bool_statement
   27               | bool_statement . GREAT_EQ bool_statement
   28               | bool_statement . LESS_EQ bool_statement
   29               | bool_statement . LOP_EQ bool_statement
   30               | bool_statement . NOT_EQ bool_statement

    LOP_EQ    shift, and go to state 59
    GREAT     shift, and go to state 60
    LESS      shift, and go to state 61
    GREAT_EQ  shift, and go to state 62
    LESS_EQ   shift, and go to state 63
    NOT_EQ    shift, and go to state 64

    $default  reduce using rule 23 (bool_statements)


State 32

   24 bool_statement: expr .
   41 expr: expr . ADD expr
   42     | expr . SUB expr
   45     | expr . MUL expr
   46     | expr . DIV expr
   47     | expr . MOD expr

    ADD  shift, and go to state 65
    SUB  shift, and go to state 66
    MUL  shift, and go to state 67
    DIV  shift, and go to state 68
    MOD  shift, and go to state 69

    $default  reduce using rule 24 (bool_statement)


State 33

   16 while: WHILE bool_statements . statements
   20 bool_statements: bool_statements . AND bool_statements
   21                | bool_statements . OR bool_statements

    IF          shift, and go to state 1
    WHILE       shift, and go to state 2
    T_CHAR      shift, and go to state 3
    T_INT       shift, and go to state 4
    T_STRING    shift, and go to state 5
    T_BOOL      shift, and go to state 6
    PRINTF      shift, and go to state 7
    SCANF       shift, and go to state 8
    SEMICOLON   shift, and go to state 9
    LBRACE      shift, and go to state 10
    IDENTIFIER  shift, and go to state 11
    OR          shift, and go to state 55
    AND         shift, and go to state 56

    statements   go to state 70
    statement    go to state 14
    printf       go to state 15
    scanf        go to state 16
    while        go to state 17
    if_else      go to state 18
    declaration  go to state 19
    assign       go to state 20
    T            go to state 21


State 34

   13 printf: PRINTF LPAREN . STRING RPAREN
   14       | PRINTF LPAREN . STRING COMMA exprs RPAREN

    STRING  shift, and go to state 71


State 35

   15 scanf: SCANF LPAREN . STRING COMMA idlist RPAREN

    STRING  shift, and go to state 72


State 36

    5 statements: LBRACE RBRACE .

    $default  reduce using rule 5 (statements)


State 37

    3 statements: statements . statement
    4           | LBRACE statements . RBRACE

    IF          shift, and go to state 1
    WHILE       shift, and go to state 2
    T_CHAR      shift, and go to state 3
    T_INT       shift, and go to state 4
    T_STRING    shift, and go to state 5
    T_BOOL      shift, and go to state 6
    PRINTF      shift, and go to state 7
    SCANF       shift, and go to state 8
    SEMICOLON   shift, and go to state 9
    RBRACE      shift, and go to state 73
    IDENTIFIER  shift, and go to state 11

    statement    go to state 40
    printf       go to state 15
    scanf        go to state 16
    while        go to state 17
    if_else      go to state 18
    declaration  go to state 19
    assign       go to state 20
    T            go to state 21


State 38

   35 assign: IDENTIFIER LOP_ASSIGN . expr

    LPAREN      shift, and go to state 51
    IDENTIFIER  shift, and go to state 23
    INTEGER     shift, and go to state 24
    CHAR        shift, and go to state 25
    STRING      shift, and go to state 26
    ADD         shift, and go to state 27
    SUB         shift, and go to state 28

    expr  go to state 74


State 39

    0 $accept: program $end .

    $default  accept


State 40

    3 statements: statements statement .

    $default  reduce using rule 3 (statements)


State 41

   11 statement: printf SEMICOLON .

    $default  reduce using rule 11 (statement)


State 42

   12 statement: scanf SEMICOLON .

    $default  reduce using rule 12 (statement)


State 43

    7 statement: declaration SEMICOLON .

    $default  reduce using rule 7 (statement)


State 44

    8 statement: assign SEMICOLON .

    $default  reduce using rule 8 (statement)


State 45

   35 assign: IDENTIFIER . LOP_ASSIGN expr
   37 idlist: IDENTIFIER .

    LOP_ASSIGN  shift, and go to state 38

    $default  reduce using rule 37 (idlist)


State 46

   31 declaration: T assigns .
   33 assigns: assigns . COMMA assign

    COMMA  shift, and go to state 75

    $default  reduce using rule 31 (declaration)


State 47

   34 assigns: assign .

    $default  reduce using rule 34 (assigns)


State 48

   32 declaration: T idlist .
   36 idlist: idlist . COMMA IDENTIFIER

    COMMA  shift, and go to state 76

    $default  reduce using rule 32 (declaration)


State 49

   19 bool_statements: LPAREN bool_statements . RPAREN
   20                | bool_statements . AND bool_statements
   21                | bool_statements . OR bool_statements

    RPAREN  shift, and go to state 77
    OR      shift, and go to state 55
    AND     shift, and go to state 56


State 50

   24 bool_statement: expr .
   40 expr: LPAREN expr . RPAREN
   41     | expr . ADD expr
   42     | expr . SUB expr
   45     | expr . MUL expr
   46     | expr . DIV expr
   47     | expr . MOD expr

    RPAREN  shift, and go to state 78
    ADD     shift, and go to state 65
    SUB     shift, and go to state 66
    MUL     shift, and go to state 67
    DIV     shift, and go to state 68
    MOD     shift, and go to state 69

    RPAREN    [reduce using rule 24 (bool_statement)]
    $default  reduce using rule 24 (bool_statement)


State 51

   40 expr: LPAREN . expr RPAREN

    LPAREN      shift, and go to state 51
    IDENTIFIER  shift, and go to state 23
    INTEGER     shift, and go to state 24
    CHAR        shift, and go to state 25
    STRING      shift, and go to state 26
    ADD         shift, and go to state 27
    SUB         shift, and go to state 28

    expr  go to state 79


State 52

   41 expr: expr . ADD expr
   42     | expr . SUB expr
   44     | ADD expr .
   45     | expr . MUL expr
   46     | expr . DIV expr
   47     | expr . MOD expr

    $default  reduce using rule 44 (expr)


State 53

   41 expr: expr . ADD expr
   42     | expr . SUB expr
   43     | SUB expr .
   45     | expr . MUL expr
   46     | expr . DIV expr
   47     | expr . MOD expr

    $default  reduce using rule 43 (expr)


State 54

   20 bool_statements: bool_statements . AND bool_statements
   21                | bool_statements . OR bool_statements
   22                | NOT bool_statements .

    $default  reduce using rule 22 (bool_statements)


State 55

   21 bool_statements: bool_statements OR . bool_statements

    LPAREN      shift, and go to state 22
    IDENTIFIER  shift, and go to state 23
    INTEGER     shift, and go to state 24
    CHAR        shift, and go to state 25
    STRING      shift, and go to state 26
    ADD         shift, and go to state 27
    SUB         shift, and go to state 28
    NOT         shift, and go to state 29

    bool_statements  go to state 80
    bool_statement   go to state 31
    expr             go to state 32


State 56

   20 bool_statements: bool_statements AND . bool_statements

    LPAREN      shift, and go to state 22
    IDENTIFIER  shift, and go to state 23
    INTEGER     shift, and go to state 24
    CHAR        shift, and go to state 25
    STRING      shift, and go to state 26
    ADD         shift, and go to state 27
    SUB         shift, and go to state 28
    NOT         shift, and go to state 29

    bool_statements  go to state 81
    bool_statement   go to state 31
    expr             go to state 32


State 57

    3 statements: statements . statement
   17 if_else: IF bool_statements statements . ELSE statements

    IF          shift, and go to state 1
    ELSE        shift, and go to state 82
    WHILE       shift, and go to state 2
    T_CHAR      shift, and go to state 3
    T_INT       shift, and go to state 4
    T_STRING    shift, and go to state 5
    T_BOOL      shift, and go to state 6
    PRINTF      shift, and go to state 7
    SCANF       shift, and go to state 8
    SEMICOLON   shift, and go to state 9
    IDENTIFIER  shift, and go to state 11

    statement    go to state 40
    printf       go to state 15
    scanf        go to state 16
    while        go to state 17
    if_else      go to state 18
    declaration  go to state 19
    assign       go to state 20
    T            go to state 21


State 58

    2 statements: statement .
   18 if_else: IF bool_statements statement .

    $end        reduce using rule 18 (if_else)
    IF          reduce using rule 2 (statements)
    IF          [reduce using rule 18 (if_else)]
    ELSE        reduce using rule 2 (statements)
    ELSE        [reduce using rule 18 (if_else)]
    WHILE       reduce using rule 2 (statements)
    WHILE       [reduce using rule 18 (if_else)]
    T_CHAR      reduce using rule 2 (statements)
    T_CHAR      [reduce using rule 18 (if_else)]
    T_INT       reduce using rule 2 (statements)
    T_INT       [reduce using rule 18 (if_else)]
    T_STRING    reduce using rule 2 (statements)
    T_STRING    [reduce using rule 18 (if_else)]
    T_BOOL      reduce using rule 2 (statements)
    T_BOOL      [reduce using rule 18 (if_else)]
    PRINTF      reduce using rule 2 (statements)
    PRINTF      [reduce using rule 18 (if_else)]
    SCANF       reduce using rule 2 (statements)
    SCANF       [reduce using rule 18 (if_else)]
    SEMICOLON   reduce using rule 2 (statements)
    SEMICOLON   [reduce using rule 18 (if_else)]
    RBRACE      reduce using rule 18 (if_else)
    IDENTIFIER  reduce using rule 2 (statements)
    IDENTIFIER  [reduce using rule 18 (if_else)]
    $default    reduce using rule 2 (statements)


State 59

   29 bool_statement: bool_statement LOP_EQ . bool_statement

    LPAREN      shift, and go to state 51
    IDENTIFIER  shift, and go to state 23
    INTEGER     shift, and go to state 24
    CHAR        shift, and go to state 25
    STRING      shift, and go to state 26
    ADD         shift, and go to state 27
    SUB         shift, and go to state 28

    bool_statement  go to state 83
    expr            go to state 32


State 60

   25 bool_statement: bool_statement GREAT . bool_statement

    LPAREN      shift, and go to state 51
    IDENTIFIER  shift, and go to state 23
    INTEGER     shift, and go to state 24
    CHAR        shift, and go to state 25
    STRING      shift, and go to state 26
    ADD         shift, and go to state 27
    SUB         shift, and go to state 28

    bool_statement  go to state 84
    expr            go to state 32


State 61

   26 bool_statement: bool_statement LESS . bool_statement

    LPAREN      shift, and go to state 51
    IDENTIFIER  shift, and go to state 23
    INTEGER     shift, and go to state 24
    CHAR        shift, and go to state 25
    STRING      shift, and go to state 26
    ADD         shift, and go to state 27
    SUB         shift, and go to state 28

    bool_statement  go to state 85
    expr            go to state 32


State 62

   27 bool_statement: bool_statement GREAT_EQ . bool_statement

    LPAREN      shift, and go to state 51
    IDENTIFIER  shift, and go to state 23
    INTEGER     shift, and go to state 24
    CHAR        shift, and go to state 25
    STRING      shift, and go to state 26
    ADD         shift, and go to state 27
    SUB         shift, and go to state 28

    bool_statement  go to state 86
    expr            go to state 32


State 63

   28 bool_statement: bool_statement LESS_EQ . bool_statement

    LPAREN      shift, and go to state 51
    IDENTIFIER  shift, and go to state 23
    INTEGER     shift, and go to state 24
    CHAR        shift, and go to state 25
    STRING      shift, and go to state 26
    ADD         shift, and go to state 27
    SUB         shift, and go to state 28

    bool_statement  go to state 87
    expr            go to state 32


State 64

   30 bool_statement: bool_statement NOT_EQ . bool_statement

    LPAREN      shift, and go to state 51
    IDENTIFIER  shift, and go to state 23
    INTEGER     shift, and go to state 24
    CHAR        shift, and go to state 25
    STRING      shift, and go to state 26
    ADD         shift, and go to state 27
    SUB         shift, and go to state 28

    bool_statement  go to state 88
    expr            go to state 32


State 65

   41 expr: expr ADD . expr

    LPAREN      shift, and go to state 51
    IDENTIFIER  shift, and go to state 23
    INTEGER     shift, and go to state 24
    CHAR        shift, and go to state 25
    STRING      shift, and go to state 26
    ADD         shift, and go to state 27
    SUB         shift, and go to state 28

    expr  go to state 89


State 66

   42 expr: expr SUB . expr

    LPAREN      shift, and go to state 51
    IDENTIFIER  shift, and go to state 23
    INTEGER     shift, and go to state 24
    CHAR        shift, and go to state 25
    STRING      shift, and go to state 26
    ADD         shift, and go to state 27
    SUB         shift, and go to state 28

    expr  go to state 90


State 67

   45 expr: expr MUL . expr

    LPAREN      shift, and go to state 51
    IDENTIFIER  shift, and go to state 23
    INTEGER     shift, and go to state 24
    CHAR        shift, and go to state 25
    STRING      shift, and go to state 26
    ADD         shift, and go to state 27
    SUB         shift, and go to state 28

    expr  go to state 91


State 68

   46 expr: expr DIV . expr

    LPAREN      shift, and go to state 51
    IDENTIFIER  shift, and go to state 23
    INTEGER     shift, and go to state 24
    CHAR        shift, and go to state 25
    STRING      shift, and go to state 26
    ADD         shift, and go to state 27
    SUB         shift, and go to state 28

    expr  go to state 92


State 69

   47 expr: expr MOD . expr

    LPAREN      shift, and go to state 51
    IDENTIFIER  shift, and go to state 23
    INTEGER     shift, and go to state 24
    CHAR        shift, and go to state 25
    STRING      shift, and go to state 26
    ADD         shift, and go to state 27
    SUB         shift, and go to state 28

    expr  go to state 93


State 70

    3 statements: statements . statement
   16 while: WHILE bool_statements statements .

    IF          shift, and go to state 1
    WHILE       shift, and go to state 2
    T_CHAR      shift, and go to state 3
    T_INT       shift, and go to state 4
    T_STRING    shift, and go to state 5
    T_BOOL      shift, and go to state 6
    PRINTF      shift, and go to state 7
    SCANF       shift, and go to state 8
    SEMICOLON   shift, and go to state 9
    IDENTIFIER  shift, and go to state 11

    IF          [reduce using rule 16 (while)]
    WHILE       [reduce using rule 16 (while)]
    T_CHAR      [reduce using rule 16 (while)]
    T_INT       [reduce using rule 16 (while)]
    T_STRING    [reduce using rule 16 (while)]
    T_BOOL      [reduce using rule 16 (while)]
    PRINTF      [reduce using rule 16 (while)]
    SCANF       [reduce using rule 16 (while)]
    SEMICOLON   [reduce using rule 16 (while)]
    IDENTIFIER  [reduce using rule 16 (while)]
    $default    reduce using rule 16 (while)

    statement    go to state 40
    printf       go to state 15
    scanf        go to state 16
    while        go to state 17
    if_else      go to state 18
    declaration  go to state 19
    assign       go to state 20
    T            go to state 21


State 71

   13 printf: PRINTF LPAREN STRING . RPAREN
   14       | PRINTF LPAREN STRING . COMMA exprs RPAREN

    COMMA   shift, and go to state 94
    RPAREN  shift, and go to state 95


State 72

   15 scanf: SCANF LPAREN STRING . COMMA idlist RPAREN

    COMMA  shift, and go to state 96


State 73

    4 statements: LBRACE statements RBRACE .

    $default  reduce using rule 4 (statements)


State 74

   35 assign: IDENTIFIER LOP_ASSIGN expr .
   41 expr: expr . ADD expr
   42     | expr . SUB expr
   45     | expr . MUL expr
   46     | expr . DIV expr
   47     | expr . MOD expr

    ADD  shift, and go to state 65
    SUB  shift, and go to state 66
    MUL  shift, and go to state 67
    DIV  shift, and go to state 68
    MOD  shift, and go to state 69

    $default  reduce using rule 35 (assign)


State 75

   33 assigns: assigns COMMA . assign

    IDENTIFIER  shift, and go to state 11

    assign  go to state 97


State 76

   36 idlist: idlist COMMA . IDENTIFIER

    IDENTIFIER  shift, and go to state 98


State 77

   19 bool_statements: LPAREN bool_statements RPAREN .

    $default  reduce using rule 19 (bool_statements)


State 78

   40 expr: LPAREN expr RPAREN .

    $default  reduce using rule 40 (expr)


State 79

   40 expr: LPAREN expr . RPAREN
   41     | expr . ADD expr
   42     | expr . SUB expr
   45     | expr . MUL expr
   46     | expr . DIV expr
   47     | expr . MOD expr

    RPAREN  shift, and go to state 78
    ADD     shift, and go to state 65
    SUB     shift, and go to state 66
    MUL     shift, and go to state 67
    DIV     shift, and go to state 68
    MOD     shift, and go to state 69


State 80

   20 bool_statements: bool_statements . AND bool_statements
   21                | bool_statements . OR bool_statements
   21                | bool_statements OR bool_statements .

    AND  shift, and go to state 56

    $default  reduce using rule 21 (bool_statements)


State 81

   20 bool_statements: bool_statements . AND bool_statements
   20                | bool_statements AND bool_statements .
   21                | bool_statements . OR bool_statements

    $default  reduce using rule 20 (bool_statements)


State 82

   17 if_else: IF bool_statements statements ELSE . statements

    IF          shift, and go to state 1
    WHILE       shift, and go to state 2
    T_CHAR      shift, and go to state 3
    T_INT       shift, and go to state 4
    T_STRING    shift, and go to state 5
    T_BOOL      shift, and go to state 6
    PRINTF      shift, and go to state 7
    SCANF       shift, and go to state 8
    SEMICOLON   shift, and go to state 9
    LBRACE      shift, and go to state 10
    IDENTIFIER  shift, and go to state 11

    statements   go to state 99
    statement    go to state 14
    printf       go to state 15
    scanf        go to state 16
    while        go to state 17
    if_else      go to state 18
    declaration  go to state 19
    assign       go to state 20
    T            go to state 21


State 83

   25 bool_statement: bool_statement . GREAT bool_statement
   26               | bool_statement . LESS bool_statement
   27               | bool_statement . GREAT_EQ bool_statement
   28               | bool_statement . LESS_EQ bool_statement
   29               | bool_statement . LOP_EQ bool_statement
   29               | bool_statement LOP_EQ bool_statement .
   30               | bool_statement . NOT_EQ bool_statement

    $default  reduce using rule 29 (bool_statement)


State 84

   25 bool_statement: bool_statement . GREAT bool_statement
   25               | bool_statement GREAT bool_statement .
   26               | bool_statement . LESS bool_statement
   27               | bool_statement . GREAT_EQ bool_statement
   28               | bool_statement . LESS_EQ bool_statement
   29               | bool_statement . LOP_EQ bool_statement
   30               | bool_statement . NOT_EQ bool_statement

    $default  reduce using rule 25 (bool_statement)


State 85

   25 bool_statement: bool_statement . GREAT bool_statement
   26               | bool_statement . LESS bool_statement
   26               | bool_statement LESS bool_statement .
   27               | bool_statement . GREAT_EQ bool_statement
   28               | bool_statement . LESS_EQ bool_statement
   29               | bool_statement . LOP_EQ bool_statement
   30               | bool_statement . NOT_EQ bool_statement

    $default  reduce using rule 26 (bool_statement)


State 86

   25 bool_statement: bool_statement . GREAT bool_statement
   26               | bool_statement . LESS bool_statement
   27               | bool_statement . GREAT_EQ bool_statement
   27               | bool_statement GREAT_EQ bool_statement .
   28               | bool_statement . LESS_EQ bool_statement
   29               | bool_statement . LOP_EQ bool_statement
   30               | bool_statement . NOT_EQ bool_statement

    $default  reduce using rule 27 (bool_statement)


State 87

   25 bool_statement: bool_statement . GREAT bool_statement
   26               | bool_statement . LESS bool_statement
   27               | bool_statement . GREAT_EQ bool_statement
   28               | bool_statement . LESS_EQ bool_statement
   28               | bool_statement LESS_EQ bool_statement .
   29               | bool_statement . LOP_EQ bool_statement
   30               | bool_statement . NOT_EQ bool_statement

    $default  reduce using rule 28 (bool_statement)


State 88

   25 bool_statement: bool_statement . GREAT bool_statement
   26               | bool_statement . LESS bool_statement
   27               | bool_statement . GREAT_EQ bool_statement
   28               | bool_statement . LESS_EQ bool_statement
   29               | bool_statement . LOP_EQ bool_statement
   30               | bool_statement . NOT_EQ bool_statement
   30               | bool_statement NOT_EQ bool_statement .

    $default  reduce using rule 30 (bool_statement)


State 89

   41 expr: expr . ADD expr
   41     | expr ADD expr .
   42     | expr . SUB expr
   45     | expr . MUL expr
   46     | expr . DIV expr
   47     | expr . MOD expr

    MUL  shift, and go to state 67
    DIV  shift, and go to state 68
    MOD  shift, and go to state 69

    $default  reduce using rule 41 (expr)


State 90

   41 expr: expr . ADD expr
   42     | expr . SUB expr
   42     | expr SUB expr .
   45     | expr . MUL expr
   46     | expr . DIV expr
   47     | expr . MOD expr

    MUL  shift, and go to state 67
    DIV  shift, and go to state 68
    MOD  shift, and go to state 69

    $default  reduce using rule 42 (expr)


State 91

   41 expr: expr . ADD expr
   42     | expr . SUB expr
   45     | expr . MUL expr
   45     | expr MUL expr .
   46     | expr . DIV expr
   47     | expr . MOD expr

    $default  reduce using rule 45 (expr)


State 92

   41 expr: expr . ADD expr
   42     | expr . SUB expr
   45     | expr . MUL expr
   46     | expr . DIV expr
   46     | expr DIV expr .
   47     | expr . MOD expr

    $default  reduce using rule 46 (expr)


State 93

   41 expr: expr . ADD expr
   42     | expr . SUB expr
   45     | expr . MUL expr
   46     | expr . DIV expr
   47     | expr . MOD expr
   47     | expr MOD expr .

    $default  reduce using rule 47 (expr)


State 94

   14 printf: PRINTF LPAREN STRING COMMA . exprs RPAREN

    LPAREN      shift, and go to state 51
    IDENTIFIER  shift, and go to state 23
    INTEGER     shift, and go to state 24
    CHAR        shift, and go to state 25
    STRING      shift, and go to state 26
    ADD         shift, and go to state 27
    SUB         shift, and go to state 28

    exprs  go to state 100
    expr   go to state 101


State 95

   13 printf: PRINTF LPAREN STRING RPAREN .

    $default  reduce using rule 13 (printf)


State 96

   15 scanf: SCANF LPAREN STRING COMMA . idlist RPAREN

    IDENTIFIER  shift, and go to state 102

    idlist  go to state 103


State 97

   33 assigns: assigns COMMA assign .

    $default  reduce using rule 33 (assigns)


State 98

   36 idlist: idlist COMMA IDENTIFIER .

    $default  reduce using rule 36 (idlist)


State 99

    3 statements: statements . statement
   17 if_else: IF bool_statements statements ELSE statements .

    IF          shift, and go to state 1
    WHILE       shift, and go to state 2
    T_CHAR      shift, and go to state 3
    T_INT       shift, and go to state 4
    T_STRING    shift, and go to state 5
    T_BOOL      shift, and go to state 6
    PRINTF      shift, and go to state 7
    SCANF       shift, and go to state 8
    SEMICOLON   shift, and go to state 9
    IDENTIFIER  shift, and go to state 11

    IF          [reduce using rule 17 (if_else)]
    WHILE       [reduce using rule 17 (if_else)]
    T_CHAR      [reduce using rule 17 (if_else)]
    T_INT       [reduce using rule 17 (if_else)]
    T_STRING    [reduce using rule 17 (if_else)]
    T_BOOL      [reduce using rule 17 (if_else)]
    PRINTF      [reduce using rule 17 (if_else)]
    SCANF       [reduce using rule 17 (if_else)]
    SEMICOLON   [reduce using rule 17 (if_else)]
    IDENTIFIER  [reduce using rule 17 (if_else)]
    $default    reduce using rule 17 (if_else)

    statement    go to state 40
    printf       go to state 15
    scanf        go to state 16
    while        go to state 17
    if_else      go to state 18
    declaration  go to state 19
    assign       go to state 20
    T            go to state 21


State 100

   14 printf: PRINTF LPAREN STRING COMMA exprs . RPAREN
   38 exprs: exprs . COMMA expr

    COMMA   shift, and go to state 104
    RPAREN  shift, and go to state 105


State 101

   39 exprs: expr .
   41 expr: expr . ADD expr
   42     | expr . SUB expr
   45     | expr . MUL expr
   46     | expr . DIV expr
   47     | expr . MOD expr

    ADD  shift, and go to state 65
    SUB  shift, and go to state 66
    MUL  shift, and go to state 67
    DIV  shift, and go to state 68
    MOD  shift, and go to state 69

    $default  reduce using rule 39 (exprs)


State 102

   37 idlist: IDENTIFIER .

    $default  reduce using rule 37 (idlist)


State 103

   15 scanf: SCANF LPAREN STRING COMMA idlist . RPAREN
   36 idlist: idlist . COMMA IDENTIFIER

    COMMA   shift, and go to state 76
    RPAREN  shift, and go to state 106


State 104

   38 exprs: exprs COMMA . expr

    LPAREN      shift, and go to state 51
    IDENTIFIER  shift, and go to state 23
    INTEGER     shift, and go to state 24
    CHAR        shift, and go to state 25
    STRING      shift, and go to state 26
    ADD         shift, and go to state 27
    SUB         shift, and go to state 28

    expr  go to state 107


State 105

   14 printf: PRINTF LPAREN STRING COMMA exprs RPAREN .

    $default  reduce using rule 14 (printf)


State 106

   15 scanf: SCANF LPAREN STRING COMMA idlist RPAREN .

    $default  reduce using rule 15 (scanf)


State 107

   38 exprs: exprs COMMA expr .
   41 expr: expr . ADD expr
   42     | expr . SUB expr
   45     | expr . MUL expr
   46     | expr . DIV expr
   47     | expr . MOD expr

    ADD  shift, and go to state 65
    SUB  shift, and go to state 66
    MUL  shift, and go to state 67
    DIV  shift, and go to state 68
    MOD  shift, and go to state 69

    $default  reduce using rule 38 (exprs)

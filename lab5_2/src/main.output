Terminals unused in grammar

   POINT
   LBRACK
   RBRACK
   BOOL
   GET_VALUE


State 49 conflicts: 1 reduce/reduce
State 86 conflicts: 1 shift/reduce


Grammar

    0 $accept: program $end

    1 program: statements

    2 statements: statement
    3           | statements statement

    4 statement: SEMICOLON
    5          | declaration SEMICOLON
    6          | eq_assign SEMICOLON
    7          | if_else
    8          | while
    9          | printf SEMICOLON
   10          | scanf SEMICOLON
   11          | function_decl SEMICOLON
   12          | function_def
   13          | function_use SEMICOLON
   14          | for
   15          | opassign SEMICOLON
   16          | return SEMICOLON
   17          | block

   18 return: RETURN expr
   19       | RETURN bool_statements

   20 for: FOR LPAREN declaration SEMICOLON bool_statements SEMICOLON assigns RPAREN block
   21    | FOR LPAREN SEMICOLON bool_statements SEMICOLON assigns RPAREN block

   22 function_decl: T IDENTIFIER LPAREN RPAREN
   23              | T IDENTIFIER LPAREN params RPAREN

   24 function_def: T IDENTIFIER LPAREN params RPAREN block
   25             | T IDENTIFIER LPAREN RPAREN block

   26 function_use: IDENTIFIER LPAREN idlist RPAREN
   27             | IDENTIFIER LPAREN RPAREN

   28 params: params COMMA param
   29       | param

   30 param: T IDENTIFIER

   31 printf: PRINTF LPAREN STRING RPAREN
   32       | PRINTF LPAREN STRING COMMA exprs RPAREN
   33       | PRINTF LPAREN idlist RPAREN

   34 scanf: SCANF LPAREN STRING COMMA address_idlist RPAREN

   35 address_idlist: address_idlist COMMA get_address_id
   36               | get_address_id

   37 get_address_id: GET_ADDRESS IDENTIFIER

   38 while: WHILE LPAREN bool_statements RPAREN block

   39 block: LBRACE statements RBRACE
   40      | LBRACE RBRACE

   41 if_else: IF LPAREN bool_statements RPAREN block ELSE block
   42        | IF LPAREN bool_statements RPAREN block

   43 bool_statements: LPAREN bool_statements RPAREN
   44                | bool_statements AND bool_statements
   45                | bool_statements OR bool_statements
   46                | NOT bool_statements
   47                | bool_statement

   48 bool_statement: expr
   49               | bool_statement GREAT bool_statement
   50               | bool_statement LESS bool_statement
   51               | bool_statement GREAT_EQ bool_statement
   52               | bool_statement LESS_EQ bool_statement
   53               | bool_statement LOP_EQ bool_statement
   54               | bool_statement NOT_EQ bool_statement

   55 declaration: T eq_assigns
   56            | T idlist

   57 assigns: assigns COMMA assign
   58        | assign

   59 assign: opassign
   60       | eq_assign

   61 eq_assigns: eq_assigns COMMA eq_assign
   62           | eq_assign

   63 eq_assign: IDENTIFIER LOP_ASSIGN expr

   64 opassign: IDENTIFIER ADD_ASSIGN expr
   65         | IDENTIFIER SUB_ASSIGN expr
   66         | IDENTIFIER MUL_ASSIGN expr
   67         | IDENTIFIER DIV_ASSIGN expr
   68         | IDENTIFIER MOD_ASSIGN expr
   69         | SELF_DEC IDENTIFIER
   70         | SELF_INC IDENTIFIER
   71         | IDENTIFIER SELF_INC
   72         | IDENTIFIER SELF_DEC

   73 idlist: idlist COMMA IDENTIFIER
   74       | IDENTIFIER

   75 exprs: exprs COMMA expr
   76      | expr

   77 expr: LPAREN expr RPAREN
   78     | expr ADD expr
   79     | expr SUB expr
   80     | SUB expr
   81     | ADD expr
   82     | expr MUL expr
   83     | expr DIV expr
   84     | expr MOD expr
   85     | IDENTIFIER
   86     | INTEGER
   87     | CHAR
   88     | STRING

   89 T: T_INT
   90  | T_CHAR
   91  | T_BOOL
   92  | T_VOID
   93  | T_STRING
   94  | T_INT_POINTER
   95  | T_CHAR_POINTER


Terminals, with rules where they appear

$end (0) 0
error (256)
IF (258) 41 42
ELSE (259) 41
WHILE (260) 38
FOR (261) 20 21
RETURN (262) 18 19
T_CHAR (263) 90
T_INT (264) 89
T_STRING (265) 93
T_BOOL (266) 91
T_INT_POINTER (267) 94
T_CHAR_POINTER (268) 95
T_VOID (269) 92
PRINTF (270) 31 32 33
SCANF (271) 34
LOP_ASSIGN (272) 63
ADD_ASSIGN (273) 64
SUB_ASSIGN (274) 65
MOD_ASSIGN (275) 68
DIV_ASSIGN (276) 67
MUL_ASSIGN (277) 66
SEMICOLON (278) 4 5 6 9 10 11 13 15 16 20 21
COMMA (279) 28 32 34 35 57 61 73 75
POINT (280)
LPAREN (281) 20 21 22 23 24 25 26 27 31 32 33 34 38 41 42 43 77
RPAREN (282) 20 21 22 23 24 25 26 27 31 32 33 34 38 41 42 43 77
LBRACK (283)
RBRACK (284)
LBRACE (285) 39 40
RBRACE (286) 39 40
IDENTIFIER (287) 22 23 24 25 26 27 30 37 63 64 65 66 67 68 69 70 71
    72 73 74 85
INTEGER (288) 86
CHAR (289) 87
BOOL (290)
STRING (291) 31 32 34 88
LOP_EQ (292) 53
GREAT (293) 49
LESS (294) 50
GREAT_EQ (295) 51
LESS_EQ (296) 52
NOT_EQ (297) 54
ADD (298) 78 81
SUB (299) 79 80
MUL (300) 82
DIV (301) 83
MOD (302) 84
OR (303) 45
AND (304) 44
NOT (305) 46
NEG (306)
POS (307)
SELF_INC (308) 70 71
SELF_DEC (309) 69 72
SELF_INC_R (310)
SELF_DEC_R (311)
SELF_INC_L (312)
SELF_DEC_L (313)
GET_ADDRESS (314) 37
GET_VALUE (315)


Nonterminals, with rules where they appear

$accept (61)
    on left: 0
program (62)
    on left: 1, on right: 0
statements (63)
    on left: 2 3, on right: 1 3 39
statement (64)
    on left: 4 5 6 7 8 9 10 11 12 13 14 15 16 17, on right: 2 3
return (65)
    on left: 18 19, on right: 16
for (66)
    on left: 20 21, on right: 14
function_decl (67)
    on left: 22 23, on right: 11
function_def (68)
    on left: 24 25, on right: 12
function_use (69)
    on left: 26 27, on right: 13
params (70)
    on left: 28 29, on right: 23 24 28
param (71)
    on left: 30, on right: 28 29
printf (72)
    on left: 31 32 33, on right: 9
scanf (73)
    on left: 34, on right: 10
address_idlist (74)
    on left: 35 36, on right: 34 35
get_address_id (75)
    on left: 37, on right: 35 36
while (76)
    on left: 38, on right: 8
block (77)
    on left: 39 40, on right: 17 20 21 24 25 38 41 42
if_else (78)
    on left: 41 42, on right: 7
bool_statements (79)
    on left: 43 44 45 46 47, on right: 19 20 21 38 41 42 43 44 45 46
bool_statement (80)
    on left: 48 49 50 51 52 53 54, on right: 47 49 50 51 52 53 54
declaration (81)
    on left: 55 56, on right: 5 20
assigns (82)
    on left: 57 58, on right: 20 21 57
assign (83)
    on left: 59 60, on right: 57 58
eq_assigns (84)
    on left: 61 62, on right: 55 61
eq_assign (85)
    on left: 63, on right: 6 60 61 62
opassign (86)
    on left: 64 65 66 67 68 69 70 71 72, on right: 15 59
idlist (87)
    on left: 73 74, on right: 26 33 56 73
exprs (88)
    on left: 75 76, on right: 32 75
expr (89)
    on left: 77 78 79 80 81 82 83 84 85 86 87 88, on right: 18 48 63
    64 65 66 67 68 75 76 77 78 79 80 81 82 83 84
T (90)
    on left: 89 90 91 92 93 94 95, on right: 22 23 24 25 30 55 56


State 0

    0 $accept: . program $end

    IF              shift, and go to state 1
    WHILE           shift, and go to state 2
    FOR             shift, and go to state 3
    RETURN          shift, and go to state 4
    T_CHAR          shift, and go to state 5
    T_INT           shift, and go to state 6
    T_STRING        shift, and go to state 7
    T_BOOL          shift, and go to state 8
    T_INT_POINTER   shift, and go to state 9
    T_CHAR_POINTER  shift, and go to state 10
    T_VOID          shift, and go to state 11
    PRINTF          shift, and go to state 12
    SCANF           shift, and go to state 13
    SEMICOLON       shift, and go to state 14
    LBRACE          shift, and go to state 15
    IDENTIFIER      shift, and go to state 16
    SELF_INC        shift, and go to state 17
    SELF_DEC        shift, and go to state 18

    program        go to state 19
    statements     go to state 20
    statement      go to state 21
    return         go to state 22
    for            go to state 23
    function_decl  go to state 24
    function_def   go to state 25
    function_use   go to state 26
    printf         go to state 27
    scanf          go to state 28
    while          go to state 29
    block          go to state 30
    if_else        go to state 31
    declaration    go to state 32
    eq_assign      go to state 33
    opassign       go to state 34
    T              go to state 35


State 1

   41 if_else: IF . LPAREN bool_statements RPAREN block ELSE block
   42        | IF . LPAREN bool_statements RPAREN block

    LPAREN  shift, and go to state 36


State 2

   38 while: WHILE . LPAREN bool_statements RPAREN block

    LPAREN  shift, and go to state 37


State 3

   20 for: FOR . LPAREN declaration SEMICOLON bool_statements SEMICOLON assigns RPAREN block
   21    | FOR . LPAREN SEMICOLON bool_statements SEMICOLON assigns RPAREN block

    LPAREN  shift, and go to state 38


State 4

   18 return: RETURN . expr
   19       | RETURN . bool_statements

    LPAREN      shift, and go to state 39
    IDENTIFIER  shift, and go to state 40
    INTEGER     shift, and go to state 41
    CHAR        shift, and go to state 42
    STRING      shift, and go to state 43
    ADD         shift, and go to state 44
    SUB         shift, and go to state 45
    NOT         shift, and go to state 46

    bool_statements  go to state 47
    bool_statement   go to state 48
    expr             go to state 49


State 5

   90 T: T_CHAR .

    $default  reduce using rule 90 (T)


State 6

   89 T: T_INT .

    $default  reduce using rule 89 (T)


State 7

   93 T: T_STRING .

    $default  reduce using rule 93 (T)


State 8

   91 T: T_BOOL .

    $default  reduce using rule 91 (T)


State 9

   94 T: T_INT_POINTER .

    $default  reduce using rule 94 (T)


State 10

   95 T: T_CHAR_POINTER .

    $default  reduce using rule 95 (T)


State 11

   92 T: T_VOID .

    $default  reduce using rule 92 (T)


State 12

   31 printf: PRINTF . LPAREN STRING RPAREN
   32       | PRINTF . LPAREN STRING COMMA exprs RPAREN
   33       | PRINTF . LPAREN idlist RPAREN

    LPAREN  shift, and go to state 50


State 13

   34 scanf: SCANF . LPAREN STRING COMMA address_idlist RPAREN

    LPAREN  shift, and go to state 51


State 14

    4 statement: SEMICOLON .

    $default  reduce using rule 4 (statement)


State 15

   39 block: LBRACE . statements RBRACE
   40      | LBRACE . RBRACE

    IF              shift, and go to state 1
    WHILE           shift, and go to state 2
    FOR             shift, and go to state 3
    RETURN          shift, and go to state 4
    T_CHAR          shift, and go to state 5
    T_INT           shift, and go to state 6
    T_STRING        shift, and go to state 7
    T_BOOL          shift, and go to state 8
    T_INT_POINTER   shift, and go to state 9
    T_CHAR_POINTER  shift, and go to state 10
    T_VOID          shift, and go to state 11
    PRINTF          shift, and go to state 12
    SCANF           shift, and go to state 13
    SEMICOLON       shift, and go to state 14
    LBRACE          shift, and go to state 15
    RBRACE          shift, and go to state 52
    IDENTIFIER      shift, and go to state 16
    SELF_INC        shift, and go to state 17
    SELF_DEC        shift, and go to state 18

    statements     go to state 53
    statement      go to state 21
    return         go to state 22
    for            go to state 23
    function_decl  go to state 24
    function_def   go to state 25
    function_use   go to state 26
    printf         go to state 27
    scanf          go to state 28
    while          go to state 29
    block          go to state 30
    if_else        go to state 31
    declaration    go to state 32
    eq_assign      go to state 33
    opassign       go to state 34
    T              go to state 35


State 16

   26 function_use: IDENTIFIER . LPAREN idlist RPAREN
   27             | IDENTIFIER . LPAREN RPAREN
   63 eq_assign: IDENTIFIER . LOP_ASSIGN expr
   64 opassign: IDENTIFIER . ADD_ASSIGN expr
   65         | IDENTIFIER . SUB_ASSIGN expr
   66         | IDENTIFIER . MUL_ASSIGN expr
   67         | IDENTIFIER . DIV_ASSIGN expr
   68         | IDENTIFIER . MOD_ASSIGN expr
   71         | IDENTIFIER . SELF_INC
   72         | IDENTIFIER . SELF_DEC

    LOP_ASSIGN  shift, and go to state 54
    ADD_ASSIGN  shift, and go to state 55
    SUB_ASSIGN  shift, and go to state 56
    MOD_ASSIGN  shift, and go to state 57
    DIV_ASSIGN  shift, and go to state 58
    MUL_ASSIGN  shift, and go to state 59
    LPAREN      shift, and go to state 60
    SELF_INC    shift, and go to state 61
    SELF_DEC    shift, and go to state 62


State 17

   70 opassign: SELF_INC . IDENTIFIER

    IDENTIFIER  shift, and go to state 63


State 18

   69 opassign: SELF_DEC . IDENTIFIER

    IDENTIFIER  shift, and go to state 64


State 19

    0 $accept: program . $end

    $end  shift, and go to state 65


State 20

    1 program: statements .
    3 statements: statements . statement

    IF              shift, and go to state 1
    WHILE           shift, and go to state 2
    FOR             shift, and go to state 3
    RETURN          shift, and go to state 4
    T_CHAR          shift, and go to state 5
    T_INT           shift, and go to state 6
    T_STRING        shift, and go to state 7
    T_BOOL          shift, and go to state 8
    T_INT_POINTER   shift, and go to state 9
    T_CHAR_POINTER  shift, and go to state 10
    T_VOID          shift, and go to state 11
    PRINTF          shift, and go to state 12
    SCANF           shift, and go to state 13
    SEMICOLON       shift, and go to state 14
    LBRACE          shift, and go to state 15
    IDENTIFIER      shift, and go to state 16
    SELF_INC        shift, and go to state 17
    SELF_DEC        shift, and go to state 18

    $default  reduce using rule 1 (program)

    statement      go to state 66
    return         go to state 22
    for            go to state 23
    function_decl  go to state 24
    function_def   go to state 25
    function_use   go to state 26
    printf         go to state 27
    scanf          go to state 28
    while          go to state 29
    block          go to state 30
    if_else        go to state 31
    declaration    go to state 32
    eq_assign      go to state 33
    opassign       go to state 34
    T              go to state 35


State 21

    2 statements: statement .

    $default  reduce using rule 2 (statements)


State 22

   16 statement: return . SEMICOLON

    SEMICOLON  shift, and go to state 67


State 23

   14 statement: for .

    $default  reduce using rule 14 (statement)


State 24

   11 statement: function_decl . SEMICOLON

    SEMICOLON  shift, and go to state 68


State 25

   12 statement: function_def .

    $default  reduce using rule 12 (statement)


State 26

   13 statement: function_use . SEMICOLON

    SEMICOLON  shift, and go to state 69


State 27

    9 statement: printf . SEMICOLON

    SEMICOLON  shift, and go to state 70


State 28

   10 statement: scanf . SEMICOLON

    SEMICOLON  shift, and go to state 71


State 29

    8 statement: while .

    $default  reduce using rule 8 (statement)


State 30

   17 statement: block .

    $default  reduce using rule 17 (statement)


State 31

    7 statement: if_else .

    $default  reduce using rule 7 (statement)


State 32

    5 statement: declaration . SEMICOLON

    SEMICOLON  shift, and go to state 72


State 33

    6 statement: eq_assign . SEMICOLON

    SEMICOLON  shift, and go to state 73


State 34

   15 statement: opassign . SEMICOLON

    SEMICOLON  shift, and go to state 74


State 35

   22 function_decl: T . IDENTIFIER LPAREN RPAREN
   23              | T . IDENTIFIER LPAREN params RPAREN
   24 function_def: T . IDENTIFIER LPAREN params RPAREN block
   25             | T . IDENTIFIER LPAREN RPAREN block
   55 declaration: T . eq_assigns
   56            | T . idlist

    IDENTIFIER  shift, and go to state 75

    eq_assigns  go to state 76
    eq_assign   go to state 77
    idlist      go to state 78


State 36

   41 if_else: IF LPAREN . bool_statements RPAREN block ELSE block
   42        | IF LPAREN . bool_statements RPAREN block

    LPAREN      shift, and go to state 39
    IDENTIFIER  shift, and go to state 40
    INTEGER     shift, and go to state 41
    CHAR        shift, and go to state 42
    STRING      shift, and go to state 43
    ADD         shift, and go to state 44
    SUB         shift, and go to state 45
    NOT         shift, and go to state 46

    bool_statements  go to state 79
    bool_statement   go to state 48
    expr             go to state 80


State 37

   38 while: WHILE LPAREN . bool_statements RPAREN block

    LPAREN      shift, and go to state 39
    IDENTIFIER  shift, and go to state 40
    INTEGER     shift, and go to state 41
    CHAR        shift, and go to state 42
    STRING      shift, and go to state 43
    ADD         shift, and go to state 44
    SUB         shift, and go to state 45
    NOT         shift, and go to state 46

    bool_statements  go to state 81
    bool_statement   go to state 48
    expr             go to state 80


State 38

   20 for: FOR LPAREN . declaration SEMICOLON bool_statements SEMICOLON assigns RPAREN block
   21    | FOR LPAREN . SEMICOLON bool_statements SEMICOLON assigns RPAREN block

    T_CHAR          shift, and go to state 5
    T_INT           shift, and go to state 6
    T_STRING        shift, and go to state 7
    T_BOOL          shift, and go to state 8
    T_INT_POINTER   shift, and go to state 9
    T_CHAR_POINTER  shift, and go to state 10
    T_VOID          shift, and go to state 11
    SEMICOLON       shift, and go to state 82

    declaration  go to state 83
    T            go to state 84


State 39

   43 bool_statements: LPAREN . bool_statements RPAREN
   77 expr: LPAREN . expr RPAREN

    LPAREN      shift, and go to state 39
    IDENTIFIER  shift, and go to state 40
    INTEGER     shift, and go to state 41
    CHAR        shift, and go to state 42
    STRING      shift, and go to state 43
    ADD         shift, and go to state 44
    SUB         shift, and go to state 45
    NOT         shift, and go to state 46

    bool_statements  go to state 85
    bool_statement   go to state 48
    expr             go to state 86


State 40

   85 expr: IDENTIFIER .

    $default  reduce using rule 85 (expr)


State 41

   86 expr: INTEGER .

    $default  reduce using rule 86 (expr)


State 42

   87 expr: CHAR .

    $default  reduce using rule 87 (expr)


State 43

   88 expr: STRING .

    $default  reduce using rule 88 (expr)


State 44

   81 expr: ADD . expr

    LPAREN      shift, and go to state 87
    IDENTIFIER  shift, and go to state 40
    INTEGER     shift, and go to state 41
    CHAR        shift, and go to state 42
    STRING      shift, and go to state 43
    ADD         shift, and go to state 44
    SUB         shift, and go to state 45

    expr  go to state 88


State 45

   80 expr: SUB . expr

    LPAREN      shift, and go to state 87
    IDENTIFIER  shift, and go to state 40
    INTEGER     shift, and go to state 41
    CHAR        shift, and go to state 42
    STRING      shift, and go to state 43
    ADD         shift, and go to state 44
    SUB         shift, and go to state 45

    expr  go to state 89


State 46

   46 bool_statements: NOT . bool_statements

    LPAREN      shift, and go to state 39
    IDENTIFIER  shift, and go to state 40
    INTEGER     shift, and go to state 41
    CHAR        shift, and go to state 42
    STRING      shift, and go to state 43
    ADD         shift, and go to state 44
    SUB         shift, and go to state 45
    NOT         shift, and go to state 46

    bool_statements  go to state 90
    bool_statement   go to state 48
    expr             go to state 80


State 47

   19 return: RETURN bool_statements .
   44 bool_statements: bool_statements . AND bool_statements
   45                | bool_statements . OR bool_statements

    OR   shift, and go to state 91
    AND  shift, and go to state 92

    $default  reduce using rule 19 (return)


State 48

   47 bool_statements: bool_statement .
   49 bool_statement: bool_statement . GREAT bool_statement
   50               | bool_statement . LESS bool_statement
   51               | bool_statement . GREAT_EQ bool_statement
   52               | bool_statement . LESS_EQ bool_statement
   53               | bool_statement . LOP_EQ bool_statement
   54               | bool_statement . NOT_EQ bool_statement

    LOP_EQ    shift, and go to state 93
    GREAT     shift, and go to state 94
    LESS      shift, and go to state 95
    GREAT_EQ  shift, and go to state 96
    LESS_EQ   shift, and go to state 97
    NOT_EQ    shift, and go to state 98

    $default  reduce using rule 47 (bool_statements)


State 49

   18 return: RETURN expr .
   48 bool_statement: expr .
   78 expr: expr . ADD expr
   79     | expr . SUB expr
   82     | expr . MUL expr
   83     | expr . DIV expr
   84     | expr . MOD expr

    ADD  shift, and go to state 99
    SUB  shift, and go to state 100
    MUL  shift, and go to state 101
    DIV  shift, and go to state 102
    MOD  shift, and go to state 103

    SEMICOLON  reduce using rule 18 (return)
    SEMICOLON  [reduce using rule 48 (bool_statement)]
    $default   reduce using rule 48 (bool_statement)


State 50

   31 printf: PRINTF LPAREN . STRING RPAREN
   32       | PRINTF LPAREN . STRING COMMA exprs RPAREN
   33       | PRINTF LPAREN . idlist RPAREN

    IDENTIFIER  shift, and go to state 104
    STRING      shift, and go to state 105

    idlist  go to state 106


State 51

   34 scanf: SCANF LPAREN . STRING COMMA address_idlist RPAREN

    STRING  shift, and go to state 107


State 52

   40 block: LBRACE RBRACE .

    $default  reduce using rule 40 (block)


State 53

    3 statements: statements . statement
   39 block: LBRACE statements . RBRACE

    IF              shift, and go to state 1
    WHILE           shift, and go to state 2
    FOR             shift, and go to state 3
    RETURN          shift, and go to state 4
    T_CHAR          shift, and go to state 5
    T_INT           shift, and go to state 6
    T_STRING        shift, and go to state 7
    T_BOOL          shift, and go to state 8
    T_INT_POINTER   shift, and go to state 9
    T_CHAR_POINTER  shift, and go to state 10
    T_VOID          shift, and go to state 11
    PRINTF          shift, and go to state 12
    SCANF           shift, and go to state 13
    SEMICOLON       shift, and go to state 14
    LBRACE          shift, and go to state 15
    RBRACE          shift, and go to state 108
    IDENTIFIER      shift, and go to state 16
    SELF_INC        shift, and go to state 17
    SELF_DEC        shift, and go to state 18

    statement      go to state 66
    return         go to state 22
    for            go to state 23
    function_decl  go to state 24
    function_def   go to state 25
    function_use   go to state 26
    printf         go to state 27
    scanf          go to state 28
    while          go to state 29
    block          go to state 30
    if_else        go to state 31
    declaration    go to state 32
    eq_assign      go to state 33
    opassign       go to state 34
    T              go to state 35


State 54

   63 eq_assign: IDENTIFIER LOP_ASSIGN . expr

    LPAREN      shift, and go to state 87
    IDENTIFIER  shift, and go to state 40
    INTEGER     shift, and go to state 41
    CHAR        shift, and go to state 42
    STRING      shift, and go to state 43
    ADD         shift, and go to state 44
    SUB         shift, and go to state 45

    expr  go to state 109


State 55

   64 opassign: IDENTIFIER ADD_ASSIGN . expr

    LPAREN      shift, and go to state 87
    IDENTIFIER  shift, and go to state 40
    INTEGER     shift, and go to state 41
    CHAR        shift, and go to state 42
    STRING      shift, and go to state 43
    ADD         shift, and go to state 44
    SUB         shift, and go to state 45

    expr  go to state 110


State 56

   65 opassign: IDENTIFIER SUB_ASSIGN . expr

    LPAREN      shift, and go to state 87
    IDENTIFIER  shift, and go to state 40
    INTEGER     shift, and go to state 41
    CHAR        shift, and go to state 42
    STRING      shift, and go to state 43
    ADD         shift, and go to state 44
    SUB         shift, and go to state 45

    expr  go to state 111


State 57

   68 opassign: IDENTIFIER MOD_ASSIGN . expr

    LPAREN      shift, and go to state 87
    IDENTIFIER  shift, and go to state 40
    INTEGER     shift, and go to state 41
    CHAR        shift, and go to state 42
    STRING      shift, and go to state 43
    ADD         shift, and go to state 44
    SUB         shift, and go to state 45

    expr  go to state 112


State 58

   67 opassign: IDENTIFIER DIV_ASSIGN . expr

    LPAREN      shift, and go to state 87
    IDENTIFIER  shift, and go to state 40
    INTEGER     shift, and go to state 41
    CHAR        shift, and go to state 42
    STRING      shift, and go to state 43
    ADD         shift, and go to state 44
    SUB         shift, and go to state 45

    expr  go to state 113


State 59

   66 opassign: IDENTIFIER MUL_ASSIGN . expr

    LPAREN      shift, and go to state 87
    IDENTIFIER  shift, and go to state 40
    INTEGER     shift, and go to state 41
    CHAR        shift, and go to state 42
    STRING      shift, and go to state 43
    ADD         shift, and go to state 44
    SUB         shift, and go to state 45

    expr  go to state 114


State 60

   26 function_use: IDENTIFIER LPAREN . idlist RPAREN
   27             | IDENTIFIER LPAREN . RPAREN

    RPAREN      shift, and go to state 115
    IDENTIFIER  shift, and go to state 104

    idlist  go to state 116


State 61

   71 opassign: IDENTIFIER SELF_INC .

    $default  reduce using rule 71 (opassign)


State 62

   72 opassign: IDENTIFIER SELF_DEC .

    $default  reduce using rule 72 (opassign)


State 63

   70 opassign: SELF_INC IDENTIFIER .

    $default  reduce using rule 70 (opassign)


State 64

   69 opassign: SELF_DEC IDENTIFIER .

    $default  reduce using rule 69 (opassign)


State 65

    0 $accept: program $end .

    $default  accept


State 66

    3 statements: statements statement .

    $default  reduce using rule 3 (statements)


State 67

   16 statement: return SEMICOLON .

    $default  reduce using rule 16 (statement)


State 68

   11 statement: function_decl SEMICOLON .

    $default  reduce using rule 11 (statement)


State 69

   13 statement: function_use SEMICOLON .

    $default  reduce using rule 13 (statement)


State 70

    9 statement: printf SEMICOLON .

    $default  reduce using rule 9 (statement)


State 71

   10 statement: scanf SEMICOLON .

    $default  reduce using rule 10 (statement)


State 72

    5 statement: declaration SEMICOLON .

    $default  reduce using rule 5 (statement)


State 73

    6 statement: eq_assign SEMICOLON .

    $default  reduce using rule 6 (statement)


State 74

   15 statement: opassign SEMICOLON .

    $default  reduce using rule 15 (statement)


State 75

   22 function_decl: T IDENTIFIER . LPAREN RPAREN
   23              | T IDENTIFIER . LPAREN params RPAREN
   24 function_def: T IDENTIFIER . LPAREN params RPAREN block
   25             | T IDENTIFIER . LPAREN RPAREN block
   63 eq_assign: IDENTIFIER . LOP_ASSIGN expr
   74 idlist: IDENTIFIER .

    LOP_ASSIGN  shift, and go to state 54
    LPAREN      shift, and go to state 117

    $default  reduce using rule 74 (idlist)


State 76

   55 declaration: T eq_assigns .
   61 eq_assigns: eq_assigns . COMMA eq_assign

    COMMA  shift, and go to state 118

    $default  reduce using rule 55 (declaration)


State 77

   62 eq_assigns: eq_assign .

    $default  reduce using rule 62 (eq_assigns)


State 78

   56 declaration: T idlist .
   73 idlist: idlist . COMMA IDENTIFIER

    COMMA  shift, and go to state 119

    $default  reduce using rule 56 (declaration)


State 79

   41 if_else: IF LPAREN bool_statements . RPAREN block ELSE block
   42        | IF LPAREN bool_statements . RPAREN block
   44 bool_statements: bool_statements . AND bool_statements
   45                | bool_statements . OR bool_statements

    RPAREN  shift, and go to state 120
    OR      shift, and go to state 91
    AND     shift, and go to state 92


State 80

   48 bool_statement: expr .
   78 expr: expr . ADD expr
   79     | expr . SUB expr
   82     | expr . MUL expr
   83     | expr . DIV expr
   84     | expr . MOD expr

    ADD  shift, and go to state 99
    SUB  shift, and go to state 100
    MUL  shift, and go to state 101
    DIV  shift, and go to state 102
    MOD  shift, and go to state 103

    $default  reduce using rule 48 (bool_statement)


State 81

   38 while: WHILE LPAREN bool_statements . RPAREN block
   44 bool_statements: bool_statements . AND bool_statements
   45                | bool_statements . OR bool_statements

    RPAREN  shift, and go to state 121
    OR      shift, and go to state 91
    AND     shift, and go to state 92


State 82

   21 for: FOR LPAREN SEMICOLON . bool_statements SEMICOLON assigns RPAREN block

    LPAREN      shift, and go to state 39
    IDENTIFIER  shift, and go to state 40
    INTEGER     shift, and go to state 41
    CHAR        shift, and go to state 42
    STRING      shift, and go to state 43
    ADD         shift, and go to state 44
    SUB         shift, and go to state 45
    NOT         shift, and go to state 46

    bool_statements  go to state 122
    bool_statement   go to state 48
    expr             go to state 80


State 83

   20 for: FOR LPAREN declaration . SEMICOLON bool_statements SEMICOLON assigns RPAREN block

    SEMICOLON  shift, and go to state 123


State 84

   55 declaration: T . eq_assigns
   56            | T . idlist

    IDENTIFIER  shift, and go to state 124

    eq_assigns  go to state 76
    eq_assign   go to state 77
    idlist      go to state 78


State 85

   43 bool_statements: LPAREN bool_statements . RPAREN
   44                | bool_statements . AND bool_statements
   45                | bool_statements . OR bool_statements

    RPAREN  shift, and go to state 125
    OR      shift, and go to state 91
    AND     shift, and go to state 92


State 86

   48 bool_statement: expr .
   77 expr: LPAREN expr . RPAREN
   78     | expr . ADD expr
   79     | expr . SUB expr
   82     | expr . MUL expr
   83     | expr . DIV expr
   84     | expr . MOD expr

    RPAREN  shift, and go to state 126
    ADD     shift, and go to state 99
    SUB     shift, and go to state 100
    MUL     shift, and go to state 101
    DIV     shift, and go to state 102
    MOD     shift, and go to state 103

    RPAREN    [reduce using rule 48 (bool_statement)]
    $default  reduce using rule 48 (bool_statement)


State 87

   77 expr: LPAREN . expr RPAREN

    LPAREN      shift, and go to state 87
    IDENTIFIER  shift, and go to state 40
    INTEGER     shift, and go to state 41
    CHAR        shift, and go to state 42
    STRING      shift, and go to state 43
    ADD         shift, and go to state 44
    SUB         shift, and go to state 45

    expr  go to state 127


State 88

   78 expr: expr . ADD expr
   79     | expr . SUB expr
   81     | ADD expr .
   82     | expr . MUL expr
   83     | expr . DIV expr
   84     | expr . MOD expr

    $default  reduce using rule 81 (expr)


State 89

   78 expr: expr . ADD expr
   79     | expr . SUB expr
   80     | SUB expr .
   82     | expr . MUL expr
   83     | expr . DIV expr
   84     | expr . MOD expr

    $default  reduce using rule 80 (expr)


State 90

   44 bool_statements: bool_statements . AND bool_statements
   45                | bool_statements . OR bool_statements
   46                | NOT bool_statements .

    $default  reduce using rule 46 (bool_statements)


State 91

   45 bool_statements: bool_statements OR . bool_statements

    LPAREN      shift, and go to state 39
    IDENTIFIER  shift, and go to state 40
    INTEGER     shift, and go to state 41
    CHAR        shift, and go to state 42
    STRING      shift, and go to state 43
    ADD         shift, and go to state 44
    SUB         shift, and go to state 45
    NOT         shift, and go to state 46

    bool_statements  go to state 128
    bool_statement   go to state 48
    expr             go to state 80


State 92

   44 bool_statements: bool_statements AND . bool_statements

    LPAREN      shift, and go to state 39
    IDENTIFIER  shift, and go to state 40
    INTEGER     shift, and go to state 41
    CHAR        shift, and go to state 42
    STRING      shift, and go to state 43
    ADD         shift, and go to state 44
    SUB         shift, and go to state 45
    NOT         shift, and go to state 46

    bool_statements  go to state 129
    bool_statement   go to state 48
    expr             go to state 80


State 93

   53 bool_statement: bool_statement LOP_EQ . bool_statement

    LPAREN      shift, and go to state 87
    IDENTIFIER  shift, and go to state 40
    INTEGER     shift, and go to state 41
    CHAR        shift, and go to state 42
    STRING      shift, and go to state 43
    ADD         shift, and go to state 44
    SUB         shift, and go to state 45

    bool_statement  go to state 130
    expr            go to state 80


State 94

   49 bool_statement: bool_statement GREAT . bool_statement

    LPAREN      shift, and go to state 87
    IDENTIFIER  shift, and go to state 40
    INTEGER     shift, and go to state 41
    CHAR        shift, and go to state 42
    STRING      shift, and go to state 43
    ADD         shift, and go to state 44
    SUB         shift, and go to state 45

    bool_statement  go to state 131
    expr            go to state 80


State 95

   50 bool_statement: bool_statement LESS . bool_statement

    LPAREN      shift, and go to state 87
    IDENTIFIER  shift, and go to state 40
    INTEGER     shift, and go to state 41
    CHAR        shift, and go to state 42
    STRING      shift, and go to state 43
    ADD         shift, and go to state 44
    SUB         shift, and go to state 45

    bool_statement  go to state 132
    expr            go to state 80


State 96

   51 bool_statement: bool_statement GREAT_EQ . bool_statement

    LPAREN      shift, and go to state 87
    IDENTIFIER  shift, and go to state 40
    INTEGER     shift, and go to state 41
    CHAR        shift, and go to state 42
    STRING      shift, and go to state 43
    ADD         shift, and go to state 44
    SUB         shift, and go to state 45

    bool_statement  go to state 133
    expr            go to state 80


State 97

   52 bool_statement: bool_statement LESS_EQ . bool_statement

    LPAREN      shift, and go to state 87
    IDENTIFIER  shift, and go to state 40
    INTEGER     shift, and go to state 41
    CHAR        shift, and go to state 42
    STRING      shift, and go to state 43
    ADD         shift, and go to state 44
    SUB         shift, and go to state 45

    bool_statement  go to state 134
    expr            go to state 80


State 98

   54 bool_statement: bool_statement NOT_EQ . bool_statement

    LPAREN      shift, and go to state 87
    IDENTIFIER  shift, and go to state 40
    INTEGER     shift, and go to state 41
    CHAR        shift, and go to state 42
    STRING      shift, and go to state 43
    ADD         shift, and go to state 44
    SUB         shift, and go to state 45

    bool_statement  go to state 135
    expr            go to state 80


State 99

   78 expr: expr ADD . expr

    LPAREN      shift, and go to state 87
    IDENTIFIER  shift, and go to state 40
    INTEGER     shift, and go to state 41
    CHAR        shift, and go to state 42
    STRING      shift, and go to state 43
    ADD         shift, and go to state 44
    SUB         shift, and go to state 45

    expr  go to state 136


State 100

   79 expr: expr SUB . expr

    LPAREN      shift, and go to state 87
    IDENTIFIER  shift, and go to state 40
    INTEGER     shift, and go to state 41
    CHAR        shift, and go to state 42
    STRING      shift, and go to state 43
    ADD         shift, and go to state 44
    SUB         shift, and go to state 45

    expr  go to state 137


State 101

   82 expr: expr MUL . expr

    LPAREN      shift, and go to state 87
    IDENTIFIER  shift, and go to state 40
    INTEGER     shift, and go to state 41
    CHAR        shift, and go to state 42
    STRING      shift, and go to state 43
    ADD         shift, and go to state 44
    SUB         shift, and go to state 45

    expr  go to state 138


State 102

   83 expr: expr DIV . expr

    LPAREN      shift, and go to state 87
    IDENTIFIER  shift, and go to state 40
    INTEGER     shift, and go to state 41
    CHAR        shift, and go to state 42
    STRING      shift, and go to state 43
    ADD         shift, and go to state 44
    SUB         shift, and go to state 45

    expr  go to state 139


State 103

   84 expr: expr MOD . expr

    LPAREN      shift, and go to state 87
    IDENTIFIER  shift, and go to state 40
    INTEGER     shift, and go to state 41
    CHAR        shift, and go to state 42
    STRING      shift, and go to state 43
    ADD         shift, and go to state 44
    SUB         shift, and go to state 45

    expr  go to state 140


State 104

   74 idlist: IDENTIFIER .

    $default  reduce using rule 74 (idlist)


State 105

   31 printf: PRINTF LPAREN STRING . RPAREN
   32       | PRINTF LPAREN STRING . COMMA exprs RPAREN

    COMMA   shift, and go to state 141
    RPAREN  shift, and go to state 142


State 106

   33 printf: PRINTF LPAREN idlist . RPAREN
   73 idlist: idlist . COMMA IDENTIFIER

    COMMA   shift, and go to state 119
    RPAREN  shift, and go to state 143


State 107

   34 scanf: SCANF LPAREN STRING . COMMA address_idlist RPAREN

    COMMA  shift, and go to state 144


State 108

   39 block: LBRACE statements RBRACE .

    $default  reduce using rule 39 (block)


State 109

   63 eq_assign: IDENTIFIER LOP_ASSIGN expr .
   78 expr: expr . ADD expr
   79     | expr . SUB expr
   82     | expr . MUL expr
   83     | expr . DIV expr
   84     | expr . MOD expr

    ADD  shift, and go to state 99
    SUB  shift, and go to state 100
    MUL  shift, and go to state 101
    DIV  shift, and go to state 102
    MOD  shift, and go to state 103

    $default  reduce using rule 63 (eq_assign)


State 110

   64 opassign: IDENTIFIER ADD_ASSIGN expr .
   78 expr: expr . ADD expr
   79     | expr . SUB expr
   82     | expr . MUL expr
   83     | expr . DIV expr
   84     | expr . MOD expr

    ADD  shift, and go to state 99
    SUB  shift, and go to state 100
    MUL  shift, and go to state 101
    DIV  shift, and go to state 102
    MOD  shift, and go to state 103

    $default  reduce using rule 64 (opassign)


State 111

   65 opassign: IDENTIFIER SUB_ASSIGN expr .
   78 expr: expr . ADD expr
   79     | expr . SUB expr
   82     | expr . MUL expr
   83     | expr . DIV expr
   84     | expr . MOD expr

    ADD  shift, and go to state 99
    SUB  shift, and go to state 100
    MUL  shift, and go to state 101
    DIV  shift, and go to state 102
    MOD  shift, and go to state 103

    $default  reduce using rule 65 (opassign)


State 112

   68 opassign: IDENTIFIER MOD_ASSIGN expr .
   78 expr: expr . ADD expr
   79     | expr . SUB expr
   82     | expr . MUL expr
   83     | expr . DIV expr
   84     | expr . MOD expr

    ADD  shift, and go to state 99
    SUB  shift, and go to state 100
    MUL  shift, and go to state 101
    DIV  shift, and go to state 102
    MOD  shift, and go to state 103

    $default  reduce using rule 68 (opassign)


State 113

   67 opassign: IDENTIFIER DIV_ASSIGN expr .
   78 expr: expr . ADD expr
   79     | expr . SUB expr
   82     | expr . MUL expr
   83     | expr . DIV expr
   84     | expr . MOD expr

    ADD  shift, and go to state 99
    SUB  shift, and go to state 100
    MUL  shift, and go to state 101
    DIV  shift, and go to state 102
    MOD  shift, and go to state 103

    $default  reduce using rule 67 (opassign)


State 114

   66 opassign: IDENTIFIER MUL_ASSIGN expr .
   78 expr: expr . ADD expr
   79     | expr . SUB expr
   82     | expr . MUL expr
   83     | expr . DIV expr
   84     | expr . MOD expr

    ADD  shift, and go to state 99
    SUB  shift, and go to state 100
    MUL  shift, and go to state 101
    DIV  shift, and go to state 102
    MOD  shift, and go to state 103

    $default  reduce using rule 66 (opassign)


State 115

   27 function_use: IDENTIFIER LPAREN RPAREN .

    $default  reduce using rule 27 (function_use)


State 116

   26 function_use: IDENTIFIER LPAREN idlist . RPAREN
   73 idlist: idlist . COMMA IDENTIFIER

    COMMA   shift, and go to state 119
    RPAREN  shift, and go to state 145


State 117

   22 function_decl: T IDENTIFIER LPAREN . RPAREN
   23              | T IDENTIFIER LPAREN . params RPAREN
   24 function_def: T IDENTIFIER LPAREN . params RPAREN block
   25             | T IDENTIFIER LPAREN . RPAREN block

    T_CHAR          shift, and go to state 5
    T_INT           shift, and go to state 6
    T_STRING        shift, and go to state 7
    T_BOOL          shift, and go to state 8
    T_INT_POINTER   shift, and go to state 9
    T_CHAR_POINTER  shift, and go to state 10
    T_VOID          shift, and go to state 11
    RPAREN          shift, and go to state 146

    params  go to state 147
    param   go to state 148
    T       go to state 149


State 118

   61 eq_assigns: eq_assigns COMMA . eq_assign

    IDENTIFIER  shift, and go to state 150

    eq_assign  go to state 151


State 119

   73 idlist: idlist COMMA . IDENTIFIER

    IDENTIFIER  shift, and go to state 152


State 120

   41 if_else: IF LPAREN bool_statements RPAREN . block ELSE block
   42        | IF LPAREN bool_statements RPAREN . block

    LBRACE  shift, and go to state 15

    block  go to state 153


State 121

   38 while: WHILE LPAREN bool_statements RPAREN . block

    LBRACE  shift, and go to state 15

    block  go to state 154


State 122

   21 for: FOR LPAREN SEMICOLON bool_statements . SEMICOLON assigns RPAREN block
   44 bool_statements: bool_statements . AND bool_statements
   45                | bool_statements . OR bool_statements

    SEMICOLON  shift, and go to state 155
    OR         shift, and go to state 91
    AND        shift, and go to state 92


State 123

   20 for: FOR LPAREN declaration SEMICOLON . bool_statements SEMICOLON assigns RPAREN block

    LPAREN      shift, and go to state 39
    IDENTIFIER  shift, and go to state 40
    INTEGER     shift, and go to state 41
    CHAR        shift, and go to state 42
    STRING      shift, and go to state 43
    ADD         shift, and go to state 44
    SUB         shift, and go to state 45
    NOT         shift, and go to state 46

    bool_statements  go to state 156
    bool_statement   go to state 48
    expr             go to state 80


State 124

   63 eq_assign: IDENTIFIER . LOP_ASSIGN expr
   74 idlist: IDENTIFIER .

    LOP_ASSIGN  shift, and go to state 54

    $default  reduce using rule 74 (idlist)


State 125

   43 bool_statements: LPAREN bool_statements RPAREN .

    $default  reduce using rule 43 (bool_statements)


State 126

   77 expr: LPAREN expr RPAREN .

    $default  reduce using rule 77 (expr)


State 127

   77 expr: LPAREN expr . RPAREN
   78     | expr . ADD expr
   79     | expr . SUB expr
   82     | expr . MUL expr
   83     | expr . DIV expr
   84     | expr . MOD expr

    RPAREN  shift, and go to state 126
    ADD     shift, and go to state 99
    SUB     shift, and go to state 100
    MUL     shift, and go to state 101
    DIV     shift, and go to state 102
    MOD     shift, and go to state 103


State 128

   44 bool_statements: bool_statements . AND bool_statements
   45                | bool_statements . OR bool_statements
   45                | bool_statements OR bool_statements .

    AND  shift, and go to state 92

    $default  reduce using rule 45 (bool_statements)


State 129

   44 bool_statements: bool_statements . AND bool_statements
   44                | bool_statements AND bool_statements .
   45                | bool_statements . OR bool_statements

    $default  reduce using rule 44 (bool_statements)


State 130

   49 bool_statement: bool_statement . GREAT bool_statement
   50               | bool_statement . LESS bool_statement
   51               | bool_statement . GREAT_EQ bool_statement
   52               | bool_statement . LESS_EQ bool_statement
   53               | bool_statement . LOP_EQ bool_statement
   53               | bool_statement LOP_EQ bool_statement .
   54               | bool_statement . NOT_EQ bool_statement

    $default  reduce using rule 53 (bool_statement)


State 131

   49 bool_statement: bool_statement . GREAT bool_statement
   49               | bool_statement GREAT bool_statement .
   50               | bool_statement . LESS bool_statement
   51               | bool_statement . GREAT_EQ bool_statement
   52               | bool_statement . LESS_EQ bool_statement
   53               | bool_statement . LOP_EQ bool_statement
   54               | bool_statement . NOT_EQ bool_statement

    $default  reduce using rule 49 (bool_statement)


State 132

   49 bool_statement: bool_statement . GREAT bool_statement
   50               | bool_statement . LESS bool_statement
   50               | bool_statement LESS bool_statement .
   51               | bool_statement . GREAT_EQ bool_statement
   52               | bool_statement . LESS_EQ bool_statement
   53               | bool_statement . LOP_EQ bool_statement
   54               | bool_statement . NOT_EQ bool_statement

    $default  reduce using rule 50 (bool_statement)


State 133

   49 bool_statement: bool_statement . GREAT bool_statement
   50               | bool_statement . LESS bool_statement
   51               | bool_statement . GREAT_EQ bool_statement
   51               | bool_statement GREAT_EQ bool_statement .
   52               | bool_statement . LESS_EQ bool_statement
   53               | bool_statement . LOP_EQ bool_statement
   54               | bool_statement . NOT_EQ bool_statement

    $default  reduce using rule 51 (bool_statement)


State 134

   49 bool_statement: bool_statement . GREAT bool_statement
   50               | bool_statement . LESS bool_statement
   51               | bool_statement . GREAT_EQ bool_statement
   52               | bool_statement . LESS_EQ bool_statement
   52               | bool_statement LESS_EQ bool_statement .
   53               | bool_statement . LOP_EQ bool_statement
   54               | bool_statement . NOT_EQ bool_statement

    $default  reduce using rule 52 (bool_statement)


State 135

   49 bool_statement: bool_statement . GREAT bool_statement
   50               | bool_statement . LESS bool_statement
   51               | bool_statement . GREAT_EQ bool_statement
   52               | bool_statement . LESS_EQ bool_statement
   53               | bool_statement . LOP_EQ bool_statement
   54               | bool_statement . NOT_EQ bool_statement
   54               | bool_statement NOT_EQ bool_statement .

    $default  reduce using rule 54 (bool_statement)


State 136

   78 expr: expr . ADD expr
   78     | expr ADD expr .
   79     | expr . SUB expr
   82     | expr . MUL expr
   83     | expr . DIV expr
   84     | expr . MOD expr

    MUL  shift, and go to state 101
    DIV  shift, and go to state 102
    MOD  shift, and go to state 103

    $default  reduce using rule 78 (expr)


State 137

   78 expr: expr . ADD expr
   79     | expr . SUB expr
   79     | expr SUB expr .
   82     | expr . MUL expr
   83     | expr . DIV expr
   84     | expr . MOD expr

    MUL  shift, and go to state 101
    DIV  shift, and go to state 102
    MOD  shift, and go to state 103

    $default  reduce using rule 79 (expr)


State 138

   78 expr: expr . ADD expr
   79     | expr . SUB expr
   82     | expr . MUL expr
   82     | expr MUL expr .
   83     | expr . DIV expr
   84     | expr . MOD expr

    $default  reduce using rule 82 (expr)


State 139

   78 expr: expr . ADD expr
   79     | expr . SUB expr
   82     | expr . MUL expr
   83     | expr . DIV expr
   83     | expr DIV expr .
   84     | expr . MOD expr

    $default  reduce using rule 83 (expr)


State 140

   78 expr: expr . ADD expr
   79     | expr . SUB expr
   82     | expr . MUL expr
   83     | expr . DIV expr
   84     | expr . MOD expr
   84     | expr MOD expr .

    $default  reduce using rule 84 (expr)


State 141

   32 printf: PRINTF LPAREN STRING COMMA . exprs RPAREN

    LPAREN      shift, and go to state 87
    IDENTIFIER  shift, and go to state 40
    INTEGER     shift, and go to state 41
    CHAR        shift, and go to state 42
    STRING      shift, and go to state 43
    ADD         shift, and go to state 44
    SUB         shift, and go to state 45

    exprs  go to state 157
    expr   go to state 158


State 142

   31 printf: PRINTF LPAREN STRING RPAREN .

    $default  reduce using rule 31 (printf)


State 143

   33 printf: PRINTF LPAREN idlist RPAREN .

    $default  reduce using rule 33 (printf)


State 144

   34 scanf: SCANF LPAREN STRING COMMA . address_idlist RPAREN

    GET_ADDRESS  shift, and go to state 159

    address_idlist  go to state 160
    get_address_id  go to state 161


State 145

   26 function_use: IDENTIFIER LPAREN idlist RPAREN .

    $default  reduce using rule 26 (function_use)


State 146

   22 function_decl: T IDENTIFIER LPAREN RPAREN .
   25 function_def: T IDENTIFIER LPAREN RPAREN . block

    LBRACE  shift, and go to state 15

    $default  reduce using rule 22 (function_decl)

    block  go to state 162


State 147

   23 function_decl: T IDENTIFIER LPAREN params . RPAREN
   24 function_def: T IDENTIFIER LPAREN params . RPAREN block
   28 params: params . COMMA param

    COMMA   shift, and go to state 163
    RPAREN  shift, and go to state 164


State 148

   29 params: param .

    $default  reduce using rule 29 (params)


State 149

   30 param: T . IDENTIFIER

    IDENTIFIER  shift, and go to state 165


State 150

   63 eq_assign: IDENTIFIER . LOP_ASSIGN expr

    LOP_ASSIGN  shift, and go to state 54


State 151

   61 eq_assigns: eq_assigns COMMA eq_assign .

    $default  reduce using rule 61 (eq_assigns)


State 152

   73 idlist: idlist COMMA IDENTIFIER .

    $default  reduce using rule 73 (idlist)


State 153

   41 if_else: IF LPAREN bool_statements RPAREN block . ELSE block
   42        | IF LPAREN bool_statements RPAREN block .

    ELSE  shift, and go to state 166

    $default  reduce using rule 42 (if_else)


State 154

   38 while: WHILE LPAREN bool_statements RPAREN block .

    $default  reduce using rule 38 (while)


State 155

   21 for: FOR LPAREN SEMICOLON bool_statements SEMICOLON . assigns RPAREN block

    IDENTIFIER  shift, and go to state 167
    SELF_INC    shift, and go to state 17
    SELF_DEC    shift, and go to state 18

    assigns    go to state 168
    assign     go to state 169
    eq_assign  go to state 170
    opassign   go to state 171


State 156

   20 for: FOR LPAREN declaration SEMICOLON bool_statements . SEMICOLON assigns RPAREN block
   44 bool_statements: bool_statements . AND bool_statements
   45                | bool_statements . OR bool_statements

    SEMICOLON  shift, and go to state 172
    OR         shift, and go to state 91
    AND        shift, and go to state 92


State 157

   32 printf: PRINTF LPAREN STRING COMMA exprs . RPAREN
   75 exprs: exprs . COMMA expr

    COMMA   shift, and go to state 173
    RPAREN  shift, and go to state 174


State 158

   76 exprs: expr .
   78 expr: expr . ADD expr
   79     | expr . SUB expr
   82     | expr . MUL expr
   83     | expr . DIV expr
   84     | expr . MOD expr

    ADD  shift, and go to state 99
    SUB  shift, and go to state 100
    MUL  shift, and go to state 101
    DIV  shift, and go to state 102
    MOD  shift, and go to state 103

    $default  reduce using rule 76 (exprs)


State 159

   37 get_address_id: GET_ADDRESS . IDENTIFIER

    IDENTIFIER  shift, and go to state 175


State 160

   34 scanf: SCANF LPAREN STRING COMMA address_idlist . RPAREN
   35 address_idlist: address_idlist . COMMA get_address_id

    COMMA   shift, and go to state 176
    RPAREN  shift, and go to state 177


State 161

   36 address_idlist: get_address_id .

    $default  reduce using rule 36 (address_idlist)


State 162

   25 function_def: T IDENTIFIER LPAREN RPAREN block .

    $default  reduce using rule 25 (function_def)


State 163

   28 params: params COMMA . param

    T_CHAR          shift, and go to state 5
    T_INT           shift, and go to state 6
    T_STRING        shift, and go to state 7
    T_BOOL          shift, and go to state 8
    T_INT_POINTER   shift, and go to state 9
    T_CHAR_POINTER  shift, and go to state 10
    T_VOID          shift, and go to state 11

    param  go to state 178
    T      go to state 149


State 164

   23 function_decl: T IDENTIFIER LPAREN params RPAREN .
   24 function_def: T IDENTIFIER LPAREN params RPAREN . block

    LBRACE  shift, and go to state 15

    $default  reduce using rule 23 (function_decl)

    block  go to state 179


State 165

   30 param: T IDENTIFIER .

    $default  reduce using rule 30 (param)


State 166

   41 if_else: IF LPAREN bool_statements RPAREN block ELSE . block

    LBRACE  shift, and go to state 15

    block  go to state 180


State 167

   63 eq_assign: IDENTIFIER . LOP_ASSIGN expr
   64 opassign: IDENTIFIER . ADD_ASSIGN expr
   65         | IDENTIFIER . SUB_ASSIGN expr
   66         | IDENTIFIER . MUL_ASSIGN expr
   67         | IDENTIFIER . DIV_ASSIGN expr
   68         | IDENTIFIER . MOD_ASSIGN expr
   71         | IDENTIFIER . SELF_INC
   72         | IDENTIFIER . SELF_DEC

    LOP_ASSIGN  shift, and go to state 54
    ADD_ASSIGN  shift, and go to state 55
    SUB_ASSIGN  shift, and go to state 56
    MOD_ASSIGN  shift, and go to state 57
    DIV_ASSIGN  shift, and go to state 58
    MUL_ASSIGN  shift, and go to state 59
    SELF_INC    shift, and go to state 61
    SELF_DEC    shift, and go to state 62


State 168

   21 for: FOR LPAREN SEMICOLON bool_statements SEMICOLON assigns . RPAREN block
   57 assigns: assigns . COMMA assign

    COMMA   shift, and go to state 181
    RPAREN  shift, and go to state 182


State 169

   58 assigns: assign .

    $default  reduce using rule 58 (assigns)


State 170

   60 assign: eq_assign .

    $default  reduce using rule 60 (assign)


State 171

   59 assign: opassign .

    $default  reduce using rule 59 (assign)


State 172

   20 for: FOR LPAREN declaration SEMICOLON bool_statements SEMICOLON . assigns RPAREN block

    IDENTIFIER  shift, and go to state 167
    SELF_INC    shift, and go to state 17
    SELF_DEC    shift, and go to state 18

    assigns    go to state 183
    assign     go to state 169
    eq_assign  go to state 170
    opassign   go to state 171


State 173

   75 exprs: exprs COMMA . expr

    LPAREN      shift, and go to state 87
    IDENTIFIER  shift, and go to state 40
    INTEGER     shift, and go to state 41
    CHAR        shift, and go to state 42
    STRING      shift, and go to state 43
    ADD         shift, and go to state 44
    SUB         shift, and go to state 45

    expr  go to state 184


State 174

   32 printf: PRINTF LPAREN STRING COMMA exprs RPAREN .

    $default  reduce using rule 32 (printf)


State 175

   37 get_address_id: GET_ADDRESS IDENTIFIER .

    $default  reduce using rule 37 (get_address_id)


State 176

   35 address_idlist: address_idlist COMMA . get_address_id

    GET_ADDRESS  shift, and go to state 159

    get_address_id  go to state 185


State 177

   34 scanf: SCANF LPAREN STRING COMMA address_idlist RPAREN .

    $default  reduce using rule 34 (scanf)


State 178

   28 params: params COMMA param .

    $default  reduce using rule 28 (params)


State 179

   24 function_def: T IDENTIFIER LPAREN params RPAREN block .

    $default  reduce using rule 24 (function_def)


State 180

   41 if_else: IF LPAREN bool_statements RPAREN block ELSE block .

    $default  reduce using rule 41 (if_else)


State 181

   57 assigns: assigns COMMA . assign

    IDENTIFIER  shift, and go to state 167
    SELF_INC    shift, and go to state 17
    SELF_DEC    shift, and go to state 18

    assign     go to state 186
    eq_assign  go to state 170
    opassign   go to state 171


State 182

   21 for: FOR LPAREN SEMICOLON bool_statements SEMICOLON assigns RPAREN . block

    LBRACE  shift, and go to state 15

    block  go to state 187


State 183

   20 for: FOR LPAREN declaration SEMICOLON bool_statements SEMICOLON assigns . RPAREN block
   57 assigns: assigns . COMMA assign

    COMMA   shift, and go to state 181
    RPAREN  shift, and go to state 188


State 184

   75 exprs: exprs COMMA expr .
   78 expr: expr . ADD expr
   79     | expr . SUB expr
   82     | expr . MUL expr
   83     | expr . DIV expr
   84     | expr . MOD expr

    ADD  shift, and go to state 99
    SUB  shift, and go to state 100
    MUL  shift, and go to state 101
    DIV  shift, and go to state 102
    MOD  shift, and go to state 103

    $default  reduce using rule 75 (exprs)


State 185

   35 address_idlist: address_idlist COMMA get_address_id .

    $default  reduce using rule 35 (address_idlist)


State 186

   57 assigns: assigns COMMA assign .

    $default  reduce using rule 57 (assigns)


State 187

   21 for: FOR LPAREN SEMICOLON bool_statements SEMICOLON assigns RPAREN block .

    $default  reduce using rule 21 (for)


State 188

   20 for: FOR LPAREN declaration SEMICOLON bool_statements SEMICOLON assigns RPAREN . block

    LBRACE  shift, and go to state 15

    block  go to state 189


State 189

   20 for: FOR LPAREN declaration SEMICOLON bool_statements SEMICOLON assigns RPAREN block .

    $default  reduce using rule 20 (for)

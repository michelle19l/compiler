Terminals unused in grammar

   FOR
   RETURN
   POINT
   LBRACK
   RBRACK
   BOOL
   GET_VALUE


State 58 conflicts: 1 shift/reduce
State 66 conflicts: 13 reduce/reduce
State 78 conflicts: 12 shift/reduce
State 116 conflicts: 12 shift/reduce


Grammar

    0 $accept: program $end

    1 program: statements

    2 statements: statement
    3           | statements statement
    4           | LBRACE statements RBRACE
    5           | LBRACE RBRACE

    6 statement: SEMICOLON
    7          | declaration SEMICOLON
    8          | assign SEMICOLON
    9          | if_else
   10          | while
   11          | printf SEMICOLON
   12          | scanf SEMICOLON
   13          | function_decl SEMICOLON
   14          | function_def
   15          | function_use SEMICOLON

   16 function_decl: T IDENTIFIER LPAREN RPAREN
   17              | T IDENTIFIER LPAREN params RPAREN

   18 function_def: T IDENTIFIER LPAREN params RPAREN LBRACE statements RBRACE

   19 function_use: IDENTIFIER LPAREN idlist RPAREN

   20 params: params COMMA param
   21       | param

   22 param: T IDENTIFIER

   23 printf: PRINTF LPAREN STRING RPAREN
   24       | PRINTF LPAREN STRING COMMA exprs RPAREN

   25 scanf: SCANF LPAREN STRING COMMA address_idlist RPAREN

   26 address_idlist: address_idlist COMMA get_address_id
   27               | get_address_id

   28 get_address_id: GET_ADDRESS IDENTIFIER

   29 while: WHILE bool_statements statements

   30 if_else: IF bool_statements statements ELSE statements
   31        | IF bool_statements statement

   32 bool_statements: LPAREN bool_statements RPAREN
   33                | bool_statements AND bool_statements
   34                | bool_statements OR bool_statements
   35                | NOT bool_statements
   36                | bool_statement

   37 bool_statement: expr
   38               | bool_statement GREAT bool_statement
   39               | bool_statement LESS bool_statement
   40               | bool_statement GREAT_EQ bool_statement
   41               | bool_statement LESS_EQ bool_statement
   42               | bool_statement LOP_EQ bool_statement
   43               | bool_statement NOT_EQ bool_statement

   44 declaration: T assigns
   45            | T idlist

   46 assigns: assigns COMMA assign
   47        | assign

   48 assign: IDENTIFIER LOP_ASSIGN expr

   49 idlist: idlist COMMA IDENTIFIER
   50       | IDENTIFIER

   51 exprs: exprs COMMA expr
   52      | expr

   53 expr: LPAREN expr RPAREN
   54     | expr ADD expr
   55     | expr SUB expr
   56     | SUB expr
   57     | ADD expr
   58     | expr MUL expr
   59     | expr DIV expr
   60     | expr MOD expr
   61     | IDENTIFIER
   62     | INTEGER
   63     | CHAR
   64     | STRING

   65 T: T_INT
   66  | T_CHAR
   67  | T_BOOL
   68  | T_STRING
   69  | T_INT_POINTER
   70  | T_CHAR_POINTER


Terminals, with rules where they appear

$end (0) 0
error (256)
IF (258) 30 31
ELSE (259) 30
WHILE (260) 29
FOR (261)
RETURN (262)
T_CHAR (263) 66
T_INT (264) 65
T_STRING (265) 68
T_BOOL (266) 67
T_INT_POINTER (267) 69
T_CHAR_POINTER (268) 70
PRINTF (269) 23 24
SCANF (270) 25
LOP_ASSIGN (271) 48
SEMICOLON (272) 6 7 8 11 12 13 15
COMMA (273) 20 24 25 26 46 49 51
POINT (274)
LPAREN (275) 16 17 18 19 23 24 25 32 53
RPAREN (276) 16 17 18 19 23 24 25 32 53
LBRACK (277)
RBRACK (278)
LBRACE (279) 4 5 18
RBRACE (280) 4 5 18
IDENTIFIER (281) 16 17 18 19 22 28 48 49 50 61
INTEGER (282) 62
CHAR (283) 63
BOOL (284)
STRING (285) 23 24 25 64
LOP_EQ (286) 42
GREAT (287) 38
LESS (288) 39
GREAT_EQ (289) 40
LESS_EQ (290) 41
NOT_EQ (291) 43
ADD (292) 54 57
SUB (293) 55 56
MUL (294) 58
DIV (295) 59
MOD (296) 60
OR (297) 34
AND (298) 33
NOT (299) 35
NEG (300)
POS (301)
GET_ADDRESS (302) 28
GET_VALUE (303)


Nonterminals, with rules where they appear

$accept (49)
    on left: 0
program (50)
    on left: 1, on right: 0
statements (51)
    on left: 2 3 4 5, on right: 1 3 4 18 29 30
statement (52)
    on left: 6 7 8 9 10 11 12 13 14 15, on right: 2 3 31
function_decl (53)
    on left: 16 17, on right: 13
function_def (54)
    on left: 18, on right: 14
function_use (55)
    on left: 19, on right: 15
params (56)
    on left: 20 21, on right: 17 18 20
param (57)
    on left: 22, on right: 20 21
printf (58)
    on left: 23 24, on right: 11
scanf (59)
    on left: 25, on right: 12
address_idlist (60)
    on left: 26 27, on right: 25 26
get_address_id (61)
    on left: 28, on right: 26 27
while (62)
    on left: 29, on right: 10
if_else (63)
    on left: 30 31, on right: 9
bool_statements (64)
    on left: 32 33 34 35 36, on right: 29 30 31 32 33 34 35
bool_statement (65)
    on left: 37 38 39 40 41 42 43, on right: 36 38 39 40 41 42 43
declaration (66)
    on left: 44 45, on right: 7
assigns (67)
    on left: 46 47, on right: 44 46
assign (68)
    on left: 48, on right: 8 46 47
idlist (69)
    on left: 49 50, on right: 19 45 49
exprs (70)
    on left: 51 52, on right: 24 51
expr (71)
    on left: 53 54 55 56 57 58 59 60 61 62 63 64, on right: 37 48 51
    52 53 54 55 56 57 58 59 60
T (72)
    on left: 65 66 67 68 69 70, on right: 16 17 18 22 44 45


State 0

    0 $accept: . program $end

    IF              shift, and go to state 1
    WHILE           shift, and go to state 2
    T_CHAR          shift, and go to state 3
    T_INT           shift, and go to state 4
    T_STRING        shift, and go to state 5
    T_BOOL          shift, and go to state 6
    T_INT_POINTER   shift, and go to state 7
    T_CHAR_POINTER  shift, and go to state 8
    PRINTF          shift, and go to state 9
    SCANF           shift, and go to state 10
    SEMICOLON       shift, and go to state 11
    LBRACE          shift, and go to state 12
    IDENTIFIER      shift, and go to state 13

    program        go to state 14
    statements     go to state 15
    statement      go to state 16
    function_decl  go to state 17
    function_def   go to state 18
    function_use   go to state 19
    printf         go to state 20
    scanf          go to state 21
    while          go to state 22
    if_else        go to state 23
    declaration    go to state 24
    assign         go to state 25
    T              go to state 26


State 1

   30 if_else: IF . bool_statements statements ELSE statements
   31        | IF . bool_statements statement

    LPAREN      shift, and go to state 27
    IDENTIFIER  shift, and go to state 28
    INTEGER     shift, and go to state 29
    CHAR        shift, and go to state 30
    STRING      shift, and go to state 31
    ADD         shift, and go to state 32
    SUB         shift, and go to state 33
    NOT         shift, and go to state 34

    bool_statements  go to state 35
    bool_statement   go to state 36
    expr             go to state 37


State 2

   29 while: WHILE . bool_statements statements

    LPAREN      shift, and go to state 27
    IDENTIFIER  shift, and go to state 28
    INTEGER     shift, and go to state 29
    CHAR        shift, and go to state 30
    STRING      shift, and go to state 31
    ADD         shift, and go to state 32
    SUB         shift, and go to state 33
    NOT         shift, and go to state 34

    bool_statements  go to state 38
    bool_statement   go to state 36
    expr             go to state 37


State 3

   66 T: T_CHAR .

    $default  reduce using rule 66 (T)


State 4

   65 T: T_INT .

    $default  reduce using rule 65 (T)


State 5

   68 T: T_STRING .

    $default  reduce using rule 68 (T)


State 6

   67 T: T_BOOL .

    $default  reduce using rule 67 (T)


State 7

   69 T: T_INT_POINTER .

    $default  reduce using rule 69 (T)


State 8

   70 T: T_CHAR_POINTER .

    $default  reduce using rule 70 (T)


State 9

   23 printf: PRINTF . LPAREN STRING RPAREN
   24       | PRINTF . LPAREN STRING COMMA exprs RPAREN

    LPAREN  shift, and go to state 39


State 10

   25 scanf: SCANF . LPAREN STRING COMMA address_idlist RPAREN

    LPAREN  shift, and go to state 40


State 11

    6 statement: SEMICOLON .

    $default  reduce using rule 6 (statement)


State 12

    4 statements: LBRACE . statements RBRACE
    5           | LBRACE . RBRACE

    IF              shift, and go to state 1
    WHILE           shift, and go to state 2
    T_CHAR          shift, and go to state 3
    T_INT           shift, and go to state 4
    T_STRING        shift, and go to state 5
    T_BOOL          shift, and go to state 6
    T_INT_POINTER   shift, and go to state 7
    T_CHAR_POINTER  shift, and go to state 8
    PRINTF          shift, and go to state 9
    SCANF           shift, and go to state 10
    SEMICOLON       shift, and go to state 11
    LBRACE          shift, and go to state 12
    RBRACE          shift, and go to state 41
    IDENTIFIER      shift, and go to state 13

    statements     go to state 42
    statement      go to state 16
    function_decl  go to state 17
    function_def   go to state 18
    function_use   go to state 19
    printf         go to state 20
    scanf          go to state 21
    while          go to state 22
    if_else        go to state 23
    declaration    go to state 24
    assign         go to state 25
    T              go to state 26


State 13

   19 function_use: IDENTIFIER . LPAREN idlist RPAREN
   48 assign: IDENTIFIER . LOP_ASSIGN expr

    LOP_ASSIGN  shift, and go to state 43
    LPAREN      shift, and go to state 44


State 14

    0 $accept: program . $end

    $end  shift, and go to state 45


State 15

    1 program: statements .
    3 statements: statements . statement

    IF              shift, and go to state 1
    WHILE           shift, and go to state 2
    T_CHAR          shift, and go to state 3
    T_INT           shift, and go to state 4
    T_STRING        shift, and go to state 5
    T_BOOL          shift, and go to state 6
    T_INT_POINTER   shift, and go to state 7
    T_CHAR_POINTER  shift, and go to state 8
    PRINTF          shift, and go to state 9
    SCANF           shift, and go to state 10
    SEMICOLON       shift, and go to state 11
    IDENTIFIER      shift, and go to state 13

    $default  reduce using rule 1 (program)

    statement      go to state 46
    function_decl  go to state 17
    function_def   go to state 18
    function_use   go to state 19
    printf         go to state 20
    scanf          go to state 21
    while          go to state 22
    if_else        go to state 23
    declaration    go to state 24
    assign         go to state 25
    T              go to state 26


State 16

    2 statements: statement .

    $default  reduce using rule 2 (statements)


State 17

   13 statement: function_decl . SEMICOLON

    SEMICOLON  shift, and go to state 47


State 18

   14 statement: function_def .

    $default  reduce using rule 14 (statement)


State 19

   15 statement: function_use . SEMICOLON

    SEMICOLON  shift, and go to state 48


State 20

   11 statement: printf . SEMICOLON

    SEMICOLON  shift, and go to state 49


State 21

   12 statement: scanf . SEMICOLON

    SEMICOLON  shift, and go to state 50


State 22

   10 statement: while .

    $default  reduce using rule 10 (statement)


State 23

    9 statement: if_else .

    $default  reduce using rule 9 (statement)


State 24

    7 statement: declaration . SEMICOLON

    SEMICOLON  shift, and go to state 51


State 25

    8 statement: assign . SEMICOLON

    SEMICOLON  shift, and go to state 52


State 26

   16 function_decl: T . IDENTIFIER LPAREN RPAREN
   17              | T . IDENTIFIER LPAREN params RPAREN
   18 function_def: T . IDENTIFIER LPAREN params RPAREN LBRACE statements RBRACE
   44 declaration: T . assigns
   45            | T . idlist

    IDENTIFIER  shift, and go to state 53

    assigns  go to state 54
    assign   go to state 55
    idlist   go to state 56


State 27

   32 bool_statements: LPAREN . bool_statements RPAREN
   53 expr: LPAREN . expr RPAREN

    LPAREN      shift, and go to state 27
    IDENTIFIER  shift, and go to state 28
    INTEGER     shift, and go to state 29
    CHAR        shift, and go to state 30
    STRING      shift, and go to state 31
    ADD         shift, and go to state 32
    SUB         shift, and go to state 33
    NOT         shift, and go to state 34

    bool_statements  go to state 57
    bool_statement   go to state 36
    expr             go to state 58


State 28

   61 expr: IDENTIFIER .

    $default  reduce using rule 61 (expr)


State 29

   62 expr: INTEGER .

    $default  reduce using rule 62 (expr)


State 30

   63 expr: CHAR .

    $default  reduce using rule 63 (expr)


State 31

   64 expr: STRING .

    $default  reduce using rule 64 (expr)


State 32

   57 expr: ADD . expr

    LPAREN      shift, and go to state 59
    IDENTIFIER  shift, and go to state 28
    INTEGER     shift, and go to state 29
    CHAR        shift, and go to state 30
    STRING      shift, and go to state 31
    ADD         shift, and go to state 32
    SUB         shift, and go to state 33

    expr  go to state 60


State 33

   56 expr: SUB . expr

    LPAREN      shift, and go to state 59
    IDENTIFIER  shift, and go to state 28
    INTEGER     shift, and go to state 29
    CHAR        shift, and go to state 30
    STRING      shift, and go to state 31
    ADD         shift, and go to state 32
    SUB         shift, and go to state 33

    expr  go to state 61


State 34

   35 bool_statements: NOT . bool_statements

    LPAREN      shift, and go to state 27
    IDENTIFIER  shift, and go to state 28
    INTEGER     shift, and go to state 29
    CHAR        shift, and go to state 30
    STRING      shift, and go to state 31
    ADD         shift, and go to state 32
    SUB         shift, and go to state 33
    NOT         shift, and go to state 34

    bool_statements  go to state 62
    bool_statement   go to state 36
    expr             go to state 37


State 35

   30 if_else: IF bool_statements . statements ELSE statements
   31        | IF bool_statements . statement
   33 bool_statements: bool_statements . AND bool_statements
   34                | bool_statements . OR bool_statements

    IF              shift, and go to state 1
    WHILE           shift, and go to state 2
    T_CHAR          shift, and go to state 3
    T_INT           shift, and go to state 4
    T_STRING        shift, and go to state 5
    T_BOOL          shift, and go to state 6
    T_INT_POINTER   shift, and go to state 7
    T_CHAR_POINTER  shift, and go to state 8
    PRINTF          shift, and go to state 9
    SCANF           shift, and go to state 10
    SEMICOLON       shift, and go to state 11
    LBRACE          shift, and go to state 12
    IDENTIFIER      shift, and go to state 13
    OR              shift, and go to state 63
    AND             shift, and go to state 64

    statements     go to state 65
    statement      go to state 66
    function_decl  go to state 17
    function_def   go to state 18
    function_use   go to state 19
    printf         go to state 20
    scanf          go to state 21
    while          go to state 22
    if_else        go to state 23
    declaration    go to state 24
    assign         go to state 25
    T              go to state 26


State 36

   36 bool_statements: bool_statement .
   38 bool_statement: bool_statement . GREAT bool_statement
   39               | bool_statement . LESS bool_statement
   40               | bool_statement . GREAT_EQ bool_statement
   41               | bool_statement . LESS_EQ bool_statement
   42               | bool_statement . LOP_EQ bool_statement
   43               | bool_statement . NOT_EQ bool_statement

    LOP_EQ    shift, and go to state 67
    GREAT     shift, and go to state 68
    LESS      shift, and go to state 69
    GREAT_EQ  shift, and go to state 70
    LESS_EQ   shift, and go to state 71
    NOT_EQ    shift, and go to state 72

    $default  reduce using rule 36 (bool_statements)


State 37

   37 bool_statement: expr .
   54 expr: expr . ADD expr
   55     | expr . SUB expr
   58     | expr . MUL expr
   59     | expr . DIV expr
   60     | expr . MOD expr

    ADD  shift, and go to state 73
    SUB  shift, and go to state 74
    MUL  shift, and go to state 75
    DIV  shift, and go to state 76
    MOD  shift, and go to state 77

    $default  reduce using rule 37 (bool_statement)


State 38

   29 while: WHILE bool_statements . statements
   33 bool_statements: bool_statements . AND bool_statements
   34                | bool_statements . OR bool_statements

    IF              shift, and go to state 1
    WHILE           shift, and go to state 2
    T_CHAR          shift, and go to state 3
    T_INT           shift, and go to state 4
    T_STRING        shift, and go to state 5
    T_BOOL          shift, and go to state 6
    T_INT_POINTER   shift, and go to state 7
    T_CHAR_POINTER  shift, and go to state 8
    PRINTF          shift, and go to state 9
    SCANF           shift, and go to state 10
    SEMICOLON       shift, and go to state 11
    LBRACE          shift, and go to state 12
    IDENTIFIER      shift, and go to state 13
    OR              shift, and go to state 63
    AND             shift, and go to state 64

    statements     go to state 78
    statement      go to state 16
    function_decl  go to state 17
    function_def   go to state 18
    function_use   go to state 19
    printf         go to state 20
    scanf          go to state 21
    while          go to state 22
    if_else        go to state 23
    declaration    go to state 24
    assign         go to state 25
    T              go to state 26


State 39

   23 printf: PRINTF LPAREN . STRING RPAREN
   24       | PRINTF LPAREN . STRING COMMA exprs RPAREN

    STRING  shift, and go to state 79


State 40

   25 scanf: SCANF LPAREN . STRING COMMA address_idlist RPAREN

    STRING  shift, and go to state 80


State 41

    5 statements: LBRACE RBRACE .

    $default  reduce using rule 5 (statements)


State 42

    3 statements: statements . statement
    4           | LBRACE statements . RBRACE

    IF              shift, and go to state 1
    WHILE           shift, and go to state 2
    T_CHAR          shift, and go to state 3
    T_INT           shift, and go to state 4
    T_STRING        shift, and go to state 5
    T_BOOL          shift, and go to state 6
    T_INT_POINTER   shift, and go to state 7
    T_CHAR_POINTER  shift, and go to state 8
    PRINTF          shift, and go to state 9
    SCANF           shift, and go to state 10
    SEMICOLON       shift, and go to state 11
    RBRACE          shift, and go to state 81
    IDENTIFIER      shift, and go to state 13

    statement      go to state 46
    function_decl  go to state 17
    function_def   go to state 18
    function_use   go to state 19
    printf         go to state 20
    scanf          go to state 21
    while          go to state 22
    if_else        go to state 23
    declaration    go to state 24
    assign         go to state 25
    T              go to state 26


State 43

   48 assign: IDENTIFIER LOP_ASSIGN . expr

    LPAREN      shift, and go to state 59
    IDENTIFIER  shift, and go to state 28
    INTEGER     shift, and go to state 29
    CHAR        shift, and go to state 30
    STRING      shift, and go to state 31
    ADD         shift, and go to state 32
    SUB         shift, and go to state 33

    expr  go to state 82


State 44

   19 function_use: IDENTIFIER LPAREN . idlist RPAREN

    IDENTIFIER  shift, and go to state 83

    idlist  go to state 84


State 45

    0 $accept: program $end .

    $default  accept


State 46

    3 statements: statements statement .

    $default  reduce using rule 3 (statements)


State 47

   13 statement: function_decl SEMICOLON .

    $default  reduce using rule 13 (statement)


State 48

   15 statement: function_use SEMICOLON .

    $default  reduce using rule 15 (statement)


State 49

   11 statement: printf SEMICOLON .

    $default  reduce using rule 11 (statement)


State 50

   12 statement: scanf SEMICOLON .

    $default  reduce using rule 12 (statement)


State 51

    7 statement: declaration SEMICOLON .

    $default  reduce using rule 7 (statement)


State 52

    8 statement: assign SEMICOLON .

    $default  reduce using rule 8 (statement)


State 53

   16 function_decl: T IDENTIFIER . LPAREN RPAREN
   17              | T IDENTIFIER . LPAREN params RPAREN
   18 function_def: T IDENTIFIER . LPAREN params RPAREN LBRACE statements RBRACE
   48 assign: IDENTIFIER . LOP_ASSIGN expr
   50 idlist: IDENTIFIER .

    LOP_ASSIGN  shift, and go to state 43
    LPAREN      shift, and go to state 85

    $default  reduce using rule 50 (idlist)


State 54

   44 declaration: T assigns .
   46 assigns: assigns . COMMA assign

    COMMA  shift, and go to state 86

    $default  reduce using rule 44 (declaration)


State 55

   47 assigns: assign .

    $default  reduce using rule 47 (assigns)


State 56

   45 declaration: T idlist .
   49 idlist: idlist . COMMA IDENTIFIER

    COMMA  shift, and go to state 87

    $default  reduce using rule 45 (declaration)


State 57

   32 bool_statements: LPAREN bool_statements . RPAREN
   33                | bool_statements . AND bool_statements
   34                | bool_statements . OR bool_statements

    RPAREN  shift, and go to state 88
    OR      shift, and go to state 63
    AND     shift, and go to state 64


State 58

   37 bool_statement: expr .
   53 expr: LPAREN expr . RPAREN
   54     | expr . ADD expr
   55     | expr . SUB expr
   58     | expr . MUL expr
   59     | expr . DIV expr
   60     | expr . MOD expr

    RPAREN  shift, and go to state 89
    ADD     shift, and go to state 73
    SUB     shift, and go to state 74
    MUL     shift, and go to state 75
    DIV     shift, and go to state 76
    MOD     shift, and go to state 77

    RPAREN    [reduce using rule 37 (bool_statement)]
    $default  reduce using rule 37 (bool_statement)


State 59

   53 expr: LPAREN . expr RPAREN

    LPAREN      shift, and go to state 59
    IDENTIFIER  shift, and go to state 28
    INTEGER     shift, and go to state 29
    CHAR        shift, and go to state 30
    STRING      shift, and go to state 31
    ADD         shift, and go to state 32
    SUB         shift, and go to state 33

    expr  go to state 90


State 60

   54 expr: expr . ADD expr
   55     | expr . SUB expr
   57     | ADD expr .
   58     | expr . MUL expr
   59     | expr . DIV expr
   60     | expr . MOD expr

    $default  reduce using rule 57 (expr)


State 61

   54 expr: expr . ADD expr
   55     | expr . SUB expr
   56     | SUB expr .
   58     | expr . MUL expr
   59     | expr . DIV expr
   60     | expr . MOD expr

    $default  reduce using rule 56 (expr)


State 62

   33 bool_statements: bool_statements . AND bool_statements
   34                | bool_statements . OR bool_statements
   35                | NOT bool_statements .

    $default  reduce using rule 35 (bool_statements)


State 63

   34 bool_statements: bool_statements OR . bool_statements

    LPAREN      shift, and go to state 27
    IDENTIFIER  shift, and go to state 28
    INTEGER     shift, and go to state 29
    CHAR        shift, and go to state 30
    STRING      shift, and go to state 31
    ADD         shift, and go to state 32
    SUB         shift, and go to state 33
    NOT         shift, and go to state 34

    bool_statements  go to state 91
    bool_statement   go to state 36
    expr             go to state 37


State 64

   33 bool_statements: bool_statements AND . bool_statements

    LPAREN      shift, and go to state 27
    IDENTIFIER  shift, and go to state 28
    INTEGER     shift, and go to state 29
    CHAR        shift, and go to state 30
    STRING      shift, and go to state 31
    ADD         shift, and go to state 32
    SUB         shift, and go to state 33
    NOT         shift, and go to state 34

    bool_statements  go to state 92
    bool_statement   go to state 36
    expr             go to state 37


State 65

    3 statements: statements . statement
   30 if_else: IF bool_statements statements . ELSE statements

    IF              shift, and go to state 1
    ELSE            shift, and go to state 93
    WHILE           shift, and go to state 2
    T_CHAR          shift, and go to state 3
    T_INT           shift, and go to state 4
    T_STRING        shift, and go to state 5
    T_BOOL          shift, and go to state 6
    T_INT_POINTER   shift, and go to state 7
    T_CHAR_POINTER  shift, and go to state 8
    PRINTF          shift, and go to state 9
    SCANF           shift, and go to state 10
    SEMICOLON       shift, and go to state 11
    IDENTIFIER      shift, and go to state 13

    statement      go to state 46
    function_decl  go to state 17
    function_def   go to state 18
    function_use   go to state 19
    printf         go to state 20
    scanf          go to state 21
    while          go to state 22
    if_else        go to state 23
    declaration    go to state 24
    assign         go to state 25
    T              go to state 26


State 66

    2 statements: statement .
   31 if_else: IF bool_statements statement .

    $end            reduce using rule 31 (if_else)
    IF              reduce using rule 2 (statements)
    IF              [reduce using rule 31 (if_else)]
    ELSE            reduce using rule 2 (statements)
    ELSE            [reduce using rule 31 (if_else)]
    WHILE           reduce using rule 2 (statements)
    WHILE           [reduce using rule 31 (if_else)]
    T_CHAR          reduce using rule 2 (statements)
    T_CHAR          [reduce using rule 31 (if_else)]
    T_INT           reduce using rule 2 (statements)
    T_INT           [reduce using rule 31 (if_else)]
    T_STRING        reduce using rule 2 (statements)
    T_STRING        [reduce using rule 31 (if_else)]
    T_BOOL          reduce using rule 2 (statements)
    T_BOOL          [reduce using rule 31 (if_else)]
    T_INT_POINTER   reduce using rule 2 (statements)
    T_INT_POINTER   [reduce using rule 31 (if_else)]
    T_CHAR_POINTER  reduce using rule 2 (statements)
    T_CHAR_POINTER  [reduce using rule 31 (if_else)]
    PRINTF          reduce using rule 2 (statements)
    PRINTF          [reduce using rule 31 (if_else)]
    SCANF           reduce using rule 2 (statements)
    SCANF           [reduce using rule 31 (if_else)]
    SEMICOLON       reduce using rule 2 (statements)
    SEMICOLON       [reduce using rule 31 (if_else)]
    RBRACE          reduce using rule 31 (if_else)
    IDENTIFIER      reduce using rule 2 (statements)
    IDENTIFIER      [reduce using rule 31 (if_else)]
    $default        reduce using rule 2 (statements)


State 67

   42 bool_statement: bool_statement LOP_EQ . bool_statement

    LPAREN      shift, and go to state 59
    IDENTIFIER  shift, and go to state 28
    INTEGER     shift, and go to state 29
    CHAR        shift, and go to state 30
    STRING      shift, and go to state 31
    ADD         shift, and go to state 32
    SUB         shift, and go to state 33

    bool_statement  go to state 94
    expr            go to state 37


State 68

   38 bool_statement: bool_statement GREAT . bool_statement

    LPAREN      shift, and go to state 59
    IDENTIFIER  shift, and go to state 28
    INTEGER     shift, and go to state 29
    CHAR        shift, and go to state 30
    STRING      shift, and go to state 31
    ADD         shift, and go to state 32
    SUB         shift, and go to state 33

    bool_statement  go to state 95
    expr            go to state 37


State 69

   39 bool_statement: bool_statement LESS . bool_statement

    LPAREN      shift, and go to state 59
    IDENTIFIER  shift, and go to state 28
    INTEGER     shift, and go to state 29
    CHAR        shift, and go to state 30
    STRING      shift, and go to state 31
    ADD         shift, and go to state 32
    SUB         shift, and go to state 33

    bool_statement  go to state 96
    expr            go to state 37


State 70

   40 bool_statement: bool_statement GREAT_EQ . bool_statement

    LPAREN      shift, and go to state 59
    IDENTIFIER  shift, and go to state 28
    INTEGER     shift, and go to state 29
    CHAR        shift, and go to state 30
    STRING      shift, and go to state 31
    ADD         shift, and go to state 32
    SUB         shift, and go to state 33

    bool_statement  go to state 97
    expr            go to state 37


State 71

   41 bool_statement: bool_statement LESS_EQ . bool_statement

    LPAREN      shift, and go to state 59
    IDENTIFIER  shift, and go to state 28
    INTEGER     shift, and go to state 29
    CHAR        shift, and go to state 30
    STRING      shift, and go to state 31
    ADD         shift, and go to state 32
    SUB         shift, and go to state 33

    bool_statement  go to state 98
    expr            go to state 37


State 72

   43 bool_statement: bool_statement NOT_EQ . bool_statement

    LPAREN      shift, and go to state 59
    IDENTIFIER  shift, and go to state 28
    INTEGER     shift, and go to state 29
    CHAR        shift, and go to state 30
    STRING      shift, and go to state 31
    ADD         shift, and go to state 32
    SUB         shift, and go to state 33

    bool_statement  go to state 99
    expr            go to state 37


State 73

   54 expr: expr ADD . expr

    LPAREN      shift, and go to state 59
    IDENTIFIER  shift, and go to state 28
    INTEGER     shift, and go to state 29
    CHAR        shift, and go to state 30
    STRING      shift, and go to state 31
    ADD         shift, and go to state 32
    SUB         shift, and go to state 33

    expr  go to state 100


State 74

   55 expr: expr SUB . expr

    LPAREN      shift, and go to state 59
    IDENTIFIER  shift, and go to state 28
    INTEGER     shift, and go to state 29
    CHAR        shift, and go to state 30
    STRING      shift, and go to state 31
    ADD         shift, and go to state 32
    SUB         shift, and go to state 33

    expr  go to state 101


State 75

   58 expr: expr MUL . expr

    LPAREN      shift, and go to state 59
    IDENTIFIER  shift, and go to state 28
    INTEGER     shift, and go to state 29
    CHAR        shift, and go to state 30
    STRING      shift, and go to state 31
    ADD         shift, and go to state 32
    SUB         shift, and go to state 33

    expr  go to state 102


State 76

   59 expr: expr DIV . expr

    LPAREN      shift, and go to state 59
    IDENTIFIER  shift, and go to state 28
    INTEGER     shift, and go to state 29
    CHAR        shift, and go to state 30
    STRING      shift, and go to state 31
    ADD         shift, and go to state 32
    SUB         shift, and go to state 33

    expr  go to state 103


State 77

   60 expr: expr MOD . expr

    LPAREN      shift, and go to state 59
    IDENTIFIER  shift, and go to state 28
    INTEGER     shift, and go to state 29
    CHAR        shift, and go to state 30
    STRING      shift, and go to state 31
    ADD         shift, and go to state 32
    SUB         shift, and go to state 33

    expr  go to state 104


State 78

    3 statements: statements . statement
   29 while: WHILE bool_statements statements .

    IF              shift, and go to state 1
    WHILE           shift, and go to state 2
    T_CHAR          shift, and go to state 3
    T_INT           shift, and go to state 4
    T_STRING        shift, and go to state 5
    T_BOOL          shift, and go to state 6
    T_INT_POINTER   shift, and go to state 7
    T_CHAR_POINTER  shift, and go to state 8
    PRINTF          shift, and go to state 9
    SCANF           shift, and go to state 10
    SEMICOLON       shift, and go to state 11
    IDENTIFIER      shift, and go to state 13

    IF              [reduce using rule 29 (while)]
    WHILE           [reduce using rule 29 (while)]
    T_CHAR          [reduce using rule 29 (while)]
    T_INT           [reduce using rule 29 (while)]
    T_STRING        [reduce using rule 29 (while)]
    T_BOOL          [reduce using rule 29 (while)]
    T_INT_POINTER   [reduce using rule 29 (while)]
    T_CHAR_POINTER  [reduce using rule 29 (while)]
    PRINTF          [reduce using rule 29 (while)]
    SCANF           [reduce using rule 29 (while)]
    SEMICOLON       [reduce using rule 29 (while)]
    IDENTIFIER      [reduce using rule 29 (while)]
    $default        reduce using rule 29 (while)

    statement      go to state 46
    function_decl  go to state 17
    function_def   go to state 18
    function_use   go to state 19
    printf         go to state 20
    scanf          go to state 21
    while          go to state 22
    if_else        go to state 23
    declaration    go to state 24
    assign         go to state 25
    T              go to state 26


State 79

   23 printf: PRINTF LPAREN STRING . RPAREN
   24       | PRINTF LPAREN STRING . COMMA exprs RPAREN

    COMMA   shift, and go to state 105
    RPAREN  shift, and go to state 106


State 80

   25 scanf: SCANF LPAREN STRING . COMMA address_idlist RPAREN

    COMMA  shift, and go to state 107


State 81

    4 statements: LBRACE statements RBRACE .

    $default  reduce using rule 4 (statements)


State 82

   48 assign: IDENTIFIER LOP_ASSIGN expr .
   54 expr: expr . ADD expr
   55     | expr . SUB expr
   58     | expr . MUL expr
   59     | expr . DIV expr
   60     | expr . MOD expr

    ADD  shift, and go to state 73
    SUB  shift, and go to state 74
    MUL  shift, and go to state 75
    DIV  shift, and go to state 76
    MOD  shift, and go to state 77

    $default  reduce using rule 48 (assign)


State 83

   50 idlist: IDENTIFIER .

    $default  reduce using rule 50 (idlist)


State 84

   19 function_use: IDENTIFIER LPAREN idlist . RPAREN
   49 idlist: idlist . COMMA IDENTIFIER

    COMMA   shift, and go to state 87
    RPAREN  shift, and go to state 108


State 85

   16 function_decl: T IDENTIFIER LPAREN . RPAREN
   17              | T IDENTIFIER LPAREN . params RPAREN
   18 function_def: T IDENTIFIER LPAREN . params RPAREN LBRACE statements RBRACE

    T_CHAR          shift, and go to state 3
    T_INT           shift, and go to state 4
    T_STRING        shift, and go to state 5
    T_BOOL          shift, and go to state 6
    T_INT_POINTER   shift, and go to state 7
    T_CHAR_POINTER  shift, and go to state 8
    RPAREN          shift, and go to state 109

    params  go to state 110
    param   go to state 111
    T       go to state 112


State 86

   46 assigns: assigns COMMA . assign

    IDENTIFIER  shift, and go to state 113

    assign  go to state 114


State 87

   49 idlist: idlist COMMA . IDENTIFIER

    IDENTIFIER  shift, and go to state 115


State 88

   32 bool_statements: LPAREN bool_statements RPAREN .

    $default  reduce using rule 32 (bool_statements)


State 89

   53 expr: LPAREN expr RPAREN .

    $default  reduce using rule 53 (expr)


State 90

   53 expr: LPAREN expr . RPAREN
   54     | expr . ADD expr
   55     | expr . SUB expr
   58     | expr . MUL expr
   59     | expr . DIV expr
   60     | expr . MOD expr

    RPAREN  shift, and go to state 89
    ADD     shift, and go to state 73
    SUB     shift, and go to state 74
    MUL     shift, and go to state 75
    DIV     shift, and go to state 76
    MOD     shift, and go to state 77


State 91

   33 bool_statements: bool_statements . AND bool_statements
   34                | bool_statements . OR bool_statements
   34                | bool_statements OR bool_statements .

    AND  shift, and go to state 64

    $default  reduce using rule 34 (bool_statements)


State 92

   33 bool_statements: bool_statements . AND bool_statements
   33                | bool_statements AND bool_statements .
   34                | bool_statements . OR bool_statements

    $default  reduce using rule 33 (bool_statements)


State 93

   30 if_else: IF bool_statements statements ELSE . statements

    IF              shift, and go to state 1
    WHILE           shift, and go to state 2
    T_CHAR          shift, and go to state 3
    T_INT           shift, and go to state 4
    T_STRING        shift, and go to state 5
    T_BOOL          shift, and go to state 6
    T_INT_POINTER   shift, and go to state 7
    T_CHAR_POINTER  shift, and go to state 8
    PRINTF          shift, and go to state 9
    SCANF           shift, and go to state 10
    SEMICOLON       shift, and go to state 11
    LBRACE          shift, and go to state 12
    IDENTIFIER      shift, and go to state 13

    statements     go to state 116
    statement      go to state 16
    function_decl  go to state 17
    function_def   go to state 18
    function_use   go to state 19
    printf         go to state 20
    scanf          go to state 21
    while          go to state 22
    if_else        go to state 23
    declaration    go to state 24
    assign         go to state 25
    T              go to state 26


State 94

   38 bool_statement: bool_statement . GREAT bool_statement
   39               | bool_statement . LESS bool_statement
   40               | bool_statement . GREAT_EQ bool_statement
   41               | bool_statement . LESS_EQ bool_statement
   42               | bool_statement . LOP_EQ bool_statement
   42               | bool_statement LOP_EQ bool_statement .
   43               | bool_statement . NOT_EQ bool_statement

    $default  reduce using rule 42 (bool_statement)


State 95

   38 bool_statement: bool_statement . GREAT bool_statement
   38               | bool_statement GREAT bool_statement .
   39               | bool_statement . LESS bool_statement
   40               | bool_statement . GREAT_EQ bool_statement
   41               | bool_statement . LESS_EQ bool_statement
   42               | bool_statement . LOP_EQ bool_statement
   43               | bool_statement . NOT_EQ bool_statement

    $default  reduce using rule 38 (bool_statement)


State 96

   38 bool_statement: bool_statement . GREAT bool_statement
   39               | bool_statement . LESS bool_statement
   39               | bool_statement LESS bool_statement .
   40               | bool_statement . GREAT_EQ bool_statement
   41               | bool_statement . LESS_EQ bool_statement
   42               | bool_statement . LOP_EQ bool_statement
   43               | bool_statement . NOT_EQ bool_statement

    $default  reduce using rule 39 (bool_statement)


State 97

   38 bool_statement: bool_statement . GREAT bool_statement
   39               | bool_statement . LESS bool_statement
   40               | bool_statement . GREAT_EQ bool_statement
   40               | bool_statement GREAT_EQ bool_statement .
   41               | bool_statement . LESS_EQ bool_statement
   42               | bool_statement . LOP_EQ bool_statement
   43               | bool_statement . NOT_EQ bool_statement

    $default  reduce using rule 40 (bool_statement)


State 98

   38 bool_statement: bool_statement . GREAT bool_statement
   39               | bool_statement . LESS bool_statement
   40               | bool_statement . GREAT_EQ bool_statement
   41               | bool_statement . LESS_EQ bool_statement
   41               | bool_statement LESS_EQ bool_statement .
   42               | bool_statement . LOP_EQ bool_statement
   43               | bool_statement . NOT_EQ bool_statement

    $default  reduce using rule 41 (bool_statement)


State 99

   38 bool_statement: bool_statement . GREAT bool_statement
   39               | bool_statement . LESS bool_statement
   40               | bool_statement . GREAT_EQ bool_statement
   41               | bool_statement . LESS_EQ bool_statement
   42               | bool_statement . LOP_EQ bool_statement
   43               | bool_statement . NOT_EQ bool_statement
   43               | bool_statement NOT_EQ bool_statement .

    $default  reduce using rule 43 (bool_statement)


State 100

   54 expr: expr . ADD expr
   54     | expr ADD expr .
   55     | expr . SUB expr
   58     | expr . MUL expr
   59     | expr . DIV expr
   60     | expr . MOD expr

    MUL  shift, and go to state 75
    DIV  shift, and go to state 76
    MOD  shift, and go to state 77

    $default  reduce using rule 54 (expr)


State 101

   54 expr: expr . ADD expr
   55     | expr . SUB expr
   55     | expr SUB expr .
   58     | expr . MUL expr
   59     | expr . DIV expr
   60     | expr . MOD expr

    MUL  shift, and go to state 75
    DIV  shift, and go to state 76
    MOD  shift, and go to state 77

    $default  reduce using rule 55 (expr)


State 102

   54 expr: expr . ADD expr
   55     | expr . SUB expr
   58     | expr . MUL expr
   58     | expr MUL expr .
   59     | expr . DIV expr
   60     | expr . MOD expr

    $default  reduce using rule 58 (expr)


State 103

   54 expr: expr . ADD expr
   55     | expr . SUB expr
   58     | expr . MUL expr
   59     | expr . DIV expr
   59     | expr DIV expr .
   60     | expr . MOD expr

    $default  reduce using rule 59 (expr)


State 104

   54 expr: expr . ADD expr
   55     | expr . SUB expr
   58     | expr . MUL expr
   59     | expr . DIV expr
   60     | expr . MOD expr
   60     | expr MOD expr .

    $default  reduce using rule 60 (expr)


State 105

   24 printf: PRINTF LPAREN STRING COMMA . exprs RPAREN

    LPAREN      shift, and go to state 59
    IDENTIFIER  shift, and go to state 28
    INTEGER     shift, and go to state 29
    CHAR        shift, and go to state 30
    STRING      shift, and go to state 31
    ADD         shift, and go to state 32
    SUB         shift, and go to state 33

    exprs  go to state 117
    expr   go to state 118


State 106

   23 printf: PRINTF LPAREN STRING RPAREN .

    $default  reduce using rule 23 (printf)


State 107

   25 scanf: SCANF LPAREN STRING COMMA . address_idlist RPAREN

    GET_ADDRESS  shift, and go to state 119

    address_idlist  go to state 120
    get_address_id  go to state 121


State 108

   19 function_use: IDENTIFIER LPAREN idlist RPAREN .

    $default  reduce using rule 19 (function_use)


State 109

   16 function_decl: T IDENTIFIER LPAREN RPAREN .

    $default  reduce using rule 16 (function_decl)


State 110

   17 function_decl: T IDENTIFIER LPAREN params . RPAREN
   18 function_def: T IDENTIFIER LPAREN params . RPAREN LBRACE statements RBRACE
   20 params: params . COMMA param

    COMMA   shift, and go to state 122
    RPAREN  shift, and go to state 123


State 111

   21 params: param .

    $default  reduce using rule 21 (params)


State 112

   22 param: T . IDENTIFIER

    IDENTIFIER  shift, and go to state 124


State 113

   48 assign: IDENTIFIER . LOP_ASSIGN expr

    LOP_ASSIGN  shift, and go to state 43


State 114

   46 assigns: assigns COMMA assign .

    $default  reduce using rule 46 (assigns)


State 115

   49 idlist: idlist COMMA IDENTIFIER .

    $default  reduce using rule 49 (idlist)


State 116

    3 statements: statements . statement
   30 if_else: IF bool_statements statements ELSE statements .

    IF              shift, and go to state 1
    WHILE           shift, and go to state 2
    T_CHAR          shift, and go to state 3
    T_INT           shift, and go to state 4
    T_STRING        shift, and go to state 5
    T_BOOL          shift, and go to state 6
    T_INT_POINTER   shift, and go to state 7
    T_CHAR_POINTER  shift, and go to state 8
    PRINTF          shift, and go to state 9
    SCANF           shift, and go to state 10
    SEMICOLON       shift, and go to state 11
    IDENTIFIER      shift, and go to state 13

    IF              [reduce using rule 30 (if_else)]
    WHILE           [reduce using rule 30 (if_else)]
    T_CHAR          [reduce using rule 30 (if_else)]
    T_INT           [reduce using rule 30 (if_else)]
    T_STRING        [reduce using rule 30 (if_else)]
    T_BOOL          [reduce using rule 30 (if_else)]
    T_INT_POINTER   [reduce using rule 30 (if_else)]
    T_CHAR_POINTER  [reduce using rule 30 (if_else)]
    PRINTF          [reduce using rule 30 (if_else)]
    SCANF           [reduce using rule 30 (if_else)]
    SEMICOLON       [reduce using rule 30 (if_else)]
    IDENTIFIER      [reduce using rule 30 (if_else)]
    $default        reduce using rule 30 (if_else)

    statement      go to state 46
    function_decl  go to state 17
    function_def   go to state 18
    function_use   go to state 19
    printf         go to state 20
    scanf          go to state 21
    while          go to state 22
    if_else        go to state 23
    declaration    go to state 24
    assign         go to state 25
    T              go to state 26


State 117

   24 printf: PRINTF LPAREN STRING COMMA exprs . RPAREN
   51 exprs: exprs . COMMA expr

    COMMA   shift, and go to state 125
    RPAREN  shift, and go to state 126


State 118

   52 exprs: expr .
   54 expr: expr . ADD expr
   55     | expr . SUB expr
   58     | expr . MUL expr
   59     | expr . DIV expr
   60     | expr . MOD expr

    ADD  shift, and go to state 73
    SUB  shift, and go to state 74
    MUL  shift, and go to state 75
    DIV  shift, and go to state 76
    MOD  shift, and go to state 77

    $default  reduce using rule 52 (exprs)


State 119

   28 get_address_id: GET_ADDRESS . IDENTIFIER

    IDENTIFIER  shift, and go to state 127


State 120

   25 scanf: SCANF LPAREN STRING COMMA address_idlist . RPAREN
   26 address_idlist: address_idlist . COMMA get_address_id

    COMMA   shift, and go to state 128
    RPAREN  shift, and go to state 129


State 121

   27 address_idlist: get_address_id .

    $default  reduce using rule 27 (address_idlist)


State 122

   20 params: params COMMA . param

    T_CHAR          shift, and go to state 3
    T_INT           shift, and go to state 4
    T_STRING        shift, and go to state 5
    T_BOOL          shift, and go to state 6
    T_INT_POINTER   shift, and go to state 7
    T_CHAR_POINTER  shift, and go to state 8

    param  go to state 130
    T      go to state 112


State 123

   17 function_decl: T IDENTIFIER LPAREN params RPAREN .
   18 function_def: T IDENTIFIER LPAREN params RPAREN . LBRACE statements RBRACE

    LBRACE  shift, and go to state 131

    $default  reduce using rule 17 (function_decl)


State 124

   22 param: T IDENTIFIER .

    $default  reduce using rule 22 (param)


State 125

   51 exprs: exprs COMMA . expr

    LPAREN      shift, and go to state 59
    IDENTIFIER  shift, and go to state 28
    INTEGER     shift, and go to state 29
    CHAR        shift, and go to state 30
    STRING      shift, and go to state 31
    ADD         shift, and go to state 32
    SUB         shift, and go to state 33

    expr  go to state 132


State 126

   24 printf: PRINTF LPAREN STRING COMMA exprs RPAREN .

    $default  reduce using rule 24 (printf)


State 127

   28 get_address_id: GET_ADDRESS IDENTIFIER .

    $default  reduce using rule 28 (get_address_id)


State 128

   26 address_idlist: address_idlist COMMA . get_address_id

    GET_ADDRESS  shift, and go to state 119

    get_address_id  go to state 133


State 129

   25 scanf: SCANF LPAREN STRING COMMA address_idlist RPAREN .

    $default  reduce using rule 25 (scanf)


State 130

   20 params: params COMMA param .

    $default  reduce using rule 20 (params)


State 131

   18 function_def: T IDENTIFIER LPAREN params RPAREN LBRACE . statements RBRACE

    IF              shift, and go to state 1
    WHILE           shift, and go to state 2
    T_CHAR          shift, and go to state 3
    T_INT           shift, and go to state 4
    T_STRING        shift, and go to state 5
    T_BOOL          shift, and go to state 6
    T_INT_POINTER   shift, and go to state 7
    T_CHAR_POINTER  shift, and go to state 8
    PRINTF          shift, and go to state 9
    SCANF           shift, and go to state 10
    SEMICOLON       shift, and go to state 11
    LBRACE          shift, and go to state 12
    IDENTIFIER      shift, and go to state 13

    statements     go to state 134
    statement      go to state 16
    function_decl  go to state 17
    function_def   go to state 18
    function_use   go to state 19
    printf         go to state 20
    scanf          go to state 21
    while          go to state 22
    if_else        go to state 23
    declaration    go to state 24
    assign         go to state 25
    T              go to state 26


State 132

   51 exprs: exprs COMMA expr .
   54 expr: expr . ADD expr
   55     | expr . SUB expr
   58     | expr . MUL expr
   59     | expr . DIV expr
   60     | expr . MOD expr

    ADD  shift, and go to state 73
    SUB  shift, and go to state 74
    MUL  shift, and go to state 75
    DIV  shift, and go to state 76
    MOD  shift, and go to state 77

    $default  reduce using rule 51 (exprs)


State 133

   26 address_idlist: address_idlist COMMA get_address_id .

    $default  reduce using rule 26 (address_idlist)


State 134

    3 statements: statements . statement
   18 function_def: T IDENTIFIER LPAREN params RPAREN LBRACE statements . RBRACE

    IF              shift, and go to state 1
    WHILE           shift, and go to state 2
    T_CHAR          shift, and go to state 3
    T_INT           shift, and go to state 4
    T_STRING        shift, and go to state 5
    T_BOOL          shift, and go to state 6
    T_INT_POINTER   shift, and go to state 7
    T_CHAR_POINTER  shift, and go to state 8
    PRINTF          shift, and go to state 9
    SCANF           shift, and go to state 10
    SEMICOLON       shift, and go to state 11
    RBRACE          shift, and go to state 135
    IDENTIFIER      shift, and go to state 13

    statement      go to state 46
    function_decl  go to state 17
    function_def   go to state 18
    function_use   go to state 19
    printf         go to state 20
    scanf          go to state 21
    while          go to state 22
    if_else        go to state 23
    declaration    go to state 24
    assign         go to state 25
    T              go to state 26


State 135

   18 function_def: T IDENTIFIER LPAREN params RPAREN LBRACE statements RBRACE .

    $default  reduce using rule 18 (function_def)

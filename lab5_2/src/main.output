Terminals unused in grammar

   POINT
   LBRACK
   RBRACK
   BOOL
   GET_VALUE


State 48 conflicts: 1 reduce/reduce
State 85 conflicts: 1 shift/reduce


Grammar

    0 $accept: program $end

    1 program: statements

    2 statements: statement
    3           | statements statement

    4 statement: SEMICOLON
    5          | declaration SEMICOLON
    6          | eq_assign SEMICOLON
    7          | if_else
    8          | while
    9          | printf SEMICOLON
   10          | scanf SEMICOLON
   11          | function_decl SEMICOLON
   12          | function_def
   13          | function_use SEMICOLON
   14          | for
   15          | opassign SEMICOLON
   16          | return SEMICOLON
   17          | block

   18 return: RETURN expr
   19       | RETURN bool_statements

   20 for: FOR LPAREN declaration SEMICOLON bool_statements SEMICOLON assigns RPAREN block
   21    | FOR LPAREN SEMICOLON bool_statements SEMICOLON assigns RPAREN block

   22 function_decl: T IDENTIFIER LPAREN RPAREN
   23              | T IDENTIFIER LPAREN params RPAREN

   24 function_def: T IDENTIFIER LPAREN params RPAREN block

   25 function_use: IDENTIFIER LPAREN idlist RPAREN
   26             | IDENTIFIER LPAREN RPAREN

   27 params: params COMMA param
   28       | param

   29 param: T IDENTIFIER

   30 printf: PRINTF LPAREN STRING RPAREN
   31       | PRINTF LPAREN STRING COMMA exprs RPAREN
   32       | PRINTF LPAREN idlist RPAREN

   33 scanf: SCANF LPAREN STRING COMMA address_idlist RPAREN

   34 address_idlist: address_idlist COMMA get_address_id
   35               | get_address_id

   36 get_address_id: GET_ADDRESS IDENTIFIER

   37 while: WHILE LPAREN bool_statements RPAREN block

   38 block: LBRACE statements RBRACE
   39      | LBRACE RBRACE

   40 if_else: IF LPAREN bool_statements RPAREN block ELSE block
   41        | IF LPAREN bool_statements RPAREN block

   42 bool_statements: LPAREN bool_statements RPAREN
   43                | bool_statements AND bool_statements
   44                | bool_statements OR bool_statements
   45                | NOT bool_statements
   46                | bool_statement

   47 bool_statement: expr
   48               | bool_statement GREAT bool_statement
   49               | bool_statement LESS bool_statement
   50               | bool_statement GREAT_EQ bool_statement
   51               | bool_statement LESS_EQ bool_statement
   52               | bool_statement LOP_EQ bool_statement
   53               | bool_statement NOT_EQ bool_statement

   54 declaration: T eq_assigns
   55            | T idlist

   56 assigns: assigns COMMA assign
   57        | assign

   58 assign: opassign
   59       | eq_assign

   60 eq_assigns: eq_assigns COMMA eq_assign
   61           | eq_assign

   62 eq_assign: IDENTIFIER LOP_ASSIGN expr

   63 opassign: IDENTIFIER ADD_ASSIGN expr
   64         | IDENTIFIER SUB_ASSIGN expr
   65         | IDENTIFIER MUL_ASSIGN expr
   66         | IDENTIFIER DIV_ASSIGN expr
   67         | IDENTIFIER MOD_ASSIGN expr
   68         | SELF_DEC IDENTIFIER
   69         | SELF_INC IDENTIFIER
   70         | IDENTIFIER SELF_INC
   71         | IDENTIFIER SELF_DEC

   72 idlist: idlist COMMA IDENTIFIER
   73       | IDENTIFIER

   74 exprs: exprs COMMA expr
   75      | expr

   76 expr: LPAREN expr RPAREN
   77     | expr ADD expr
   78     | expr SUB expr
   79     | SUB expr
   80     | ADD expr
   81     | expr MUL expr
   82     | expr DIV expr
   83     | expr MOD expr
   84     | IDENTIFIER
   85     | INTEGER
   86     | CHAR
   87     | STRING

   88 T: T_INT
   89  | T_CHAR
   90  | T_BOOL
   91  | T_STRING
   92  | T_INT_POINTER
   93  | T_CHAR_POINTER


Terminals, with rules where they appear

$end (0) 0
error (256)
IF (258) 40 41
ELSE (259) 40
WHILE (260) 37
FOR (261) 20 21
RETURN (262) 18 19
T_CHAR (263) 89
T_INT (264) 88
T_STRING (265) 91
T_BOOL (266) 90
T_INT_POINTER (267) 92
T_CHAR_POINTER (268) 93
PRINTF (269) 30 31 32
SCANF (270) 33
LOP_ASSIGN (271) 62
ADD_ASSIGN (272) 63
SUB_ASSIGN (273) 64
MOD_ASSIGN (274) 67
DIV_ASSIGN (275) 66
MUL_ASSIGN (276) 65
SEMICOLON (277) 4 5 6 9 10 11 13 15 16 20 21
COMMA (278) 27 31 33 34 56 60 72 74
POINT (279)
LPAREN (280) 20 21 22 23 24 25 26 30 31 32 33 37 40 41 42 76
RPAREN (281) 20 21 22 23 24 25 26 30 31 32 33 37 40 41 42 76
LBRACK (282)
RBRACK (283)
LBRACE (284) 38 39
RBRACE (285) 38 39
IDENTIFIER (286) 22 23 24 25 26 29 36 62 63 64 65 66 67 68 69 70 71
    72 73 84
INTEGER (287) 85
CHAR (288) 86
BOOL (289)
STRING (290) 30 31 33 87
LOP_EQ (291) 52
GREAT (292) 48
LESS (293) 49
GREAT_EQ (294) 50
LESS_EQ (295) 51
NOT_EQ (296) 53
ADD (297) 77 80
SUB (298) 78 79
MUL (299) 81
DIV (300) 82
MOD (301) 83
OR (302) 44
AND (303) 43
NOT (304) 45
NEG (305)
POS (306)
SELF_INC (307) 69 70
SELF_DEC (308) 68 71
SELF_INC_R (309)
SELF_DEC_R (310)
SELF_INC_L (311)
SELF_DEC_L (312)
GET_ADDRESS (313) 36
GET_VALUE (314)


Nonterminals, with rules where they appear

$accept (60)
    on left: 0
program (61)
    on left: 1, on right: 0
statements (62)
    on left: 2 3, on right: 1 3 38
statement (63)
    on left: 4 5 6 7 8 9 10 11 12 13 14 15 16 17, on right: 2 3
return (64)
    on left: 18 19, on right: 16
for (65)
    on left: 20 21, on right: 14
function_decl (66)
    on left: 22 23, on right: 11
function_def (67)
    on left: 24, on right: 12
function_use (68)
    on left: 25 26, on right: 13
params (69)
    on left: 27 28, on right: 23 24 27
param (70)
    on left: 29, on right: 27 28
printf (71)
    on left: 30 31 32, on right: 9
scanf (72)
    on left: 33, on right: 10
address_idlist (73)
    on left: 34 35, on right: 33 34
get_address_id (74)
    on left: 36, on right: 34 35
while (75)
    on left: 37, on right: 8
block (76)
    on left: 38 39, on right: 17 20 21 24 37 40 41
if_else (77)
    on left: 40 41, on right: 7
bool_statements (78)
    on left: 42 43 44 45 46, on right: 19 20 21 37 40 41 42 43 44 45
bool_statement (79)
    on left: 47 48 49 50 51 52 53, on right: 46 48 49 50 51 52 53
declaration (80)
    on left: 54 55, on right: 5 20
assigns (81)
    on left: 56 57, on right: 20 21 56
assign (82)
    on left: 58 59, on right: 56 57
eq_assigns (83)
    on left: 60 61, on right: 54 60
eq_assign (84)
    on left: 62, on right: 6 59 60 61
opassign (85)
    on left: 63 64 65 66 67 68 69 70 71, on right: 15 58
idlist (86)
    on left: 72 73, on right: 25 32 55 72
exprs (87)
    on left: 74 75, on right: 31 74
expr (88)
    on left: 76 77 78 79 80 81 82 83 84 85 86 87, on right: 18 47 62
    63 64 65 66 67 74 75 76 77 78 79 80 81 82 83
T (89)
    on left: 88 89 90 91 92 93, on right: 22 23 24 29 54 55


State 0

    0 $accept: . program $end

    IF              shift, and go to state 1
    WHILE           shift, and go to state 2
    FOR             shift, and go to state 3
    RETURN          shift, and go to state 4
    T_CHAR          shift, and go to state 5
    T_INT           shift, and go to state 6
    T_STRING        shift, and go to state 7
    T_BOOL          shift, and go to state 8
    T_INT_POINTER   shift, and go to state 9
    T_CHAR_POINTER  shift, and go to state 10
    PRINTF          shift, and go to state 11
    SCANF           shift, and go to state 12
    SEMICOLON       shift, and go to state 13
    LBRACE          shift, and go to state 14
    IDENTIFIER      shift, and go to state 15
    SELF_INC        shift, and go to state 16
    SELF_DEC        shift, and go to state 17

    program        go to state 18
    statements     go to state 19
    statement      go to state 20
    return         go to state 21
    for            go to state 22
    function_decl  go to state 23
    function_def   go to state 24
    function_use   go to state 25
    printf         go to state 26
    scanf          go to state 27
    while          go to state 28
    block          go to state 29
    if_else        go to state 30
    declaration    go to state 31
    eq_assign      go to state 32
    opassign       go to state 33
    T              go to state 34


State 1

   40 if_else: IF . LPAREN bool_statements RPAREN block ELSE block
   41        | IF . LPAREN bool_statements RPAREN block

    LPAREN  shift, and go to state 35


State 2

   37 while: WHILE . LPAREN bool_statements RPAREN block

    LPAREN  shift, and go to state 36


State 3

   20 for: FOR . LPAREN declaration SEMICOLON bool_statements SEMICOLON assigns RPAREN block
   21    | FOR . LPAREN SEMICOLON bool_statements SEMICOLON assigns RPAREN block

    LPAREN  shift, and go to state 37


State 4

   18 return: RETURN . expr
   19       | RETURN . bool_statements

    LPAREN      shift, and go to state 38
    IDENTIFIER  shift, and go to state 39
    INTEGER     shift, and go to state 40
    CHAR        shift, and go to state 41
    STRING      shift, and go to state 42
    ADD         shift, and go to state 43
    SUB         shift, and go to state 44
    NOT         shift, and go to state 45

    bool_statements  go to state 46
    bool_statement   go to state 47
    expr             go to state 48


State 5

   89 T: T_CHAR .

    $default  reduce using rule 89 (T)


State 6

   88 T: T_INT .

    $default  reduce using rule 88 (T)


State 7

   91 T: T_STRING .

    $default  reduce using rule 91 (T)


State 8

   90 T: T_BOOL .

    $default  reduce using rule 90 (T)


State 9

   92 T: T_INT_POINTER .

    $default  reduce using rule 92 (T)


State 10

   93 T: T_CHAR_POINTER .

    $default  reduce using rule 93 (T)


State 11

   30 printf: PRINTF . LPAREN STRING RPAREN
   31       | PRINTF . LPAREN STRING COMMA exprs RPAREN
   32       | PRINTF . LPAREN idlist RPAREN

    LPAREN  shift, and go to state 49


State 12

   33 scanf: SCANF . LPAREN STRING COMMA address_idlist RPAREN

    LPAREN  shift, and go to state 50


State 13

    4 statement: SEMICOLON .

    $default  reduce using rule 4 (statement)


State 14

   38 block: LBRACE . statements RBRACE
   39      | LBRACE . RBRACE

    IF              shift, and go to state 1
    WHILE           shift, and go to state 2
    FOR             shift, and go to state 3
    RETURN          shift, and go to state 4
    T_CHAR          shift, and go to state 5
    T_INT           shift, and go to state 6
    T_STRING        shift, and go to state 7
    T_BOOL          shift, and go to state 8
    T_INT_POINTER   shift, and go to state 9
    T_CHAR_POINTER  shift, and go to state 10
    PRINTF          shift, and go to state 11
    SCANF           shift, and go to state 12
    SEMICOLON       shift, and go to state 13
    LBRACE          shift, and go to state 14
    RBRACE          shift, and go to state 51
    IDENTIFIER      shift, and go to state 15
    SELF_INC        shift, and go to state 16
    SELF_DEC        shift, and go to state 17

    statements     go to state 52
    statement      go to state 20
    return         go to state 21
    for            go to state 22
    function_decl  go to state 23
    function_def   go to state 24
    function_use   go to state 25
    printf         go to state 26
    scanf          go to state 27
    while          go to state 28
    block          go to state 29
    if_else        go to state 30
    declaration    go to state 31
    eq_assign      go to state 32
    opassign       go to state 33
    T              go to state 34


State 15

   25 function_use: IDENTIFIER . LPAREN idlist RPAREN
   26             | IDENTIFIER . LPAREN RPAREN
   62 eq_assign: IDENTIFIER . LOP_ASSIGN expr
   63 opassign: IDENTIFIER . ADD_ASSIGN expr
   64         | IDENTIFIER . SUB_ASSIGN expr
   65         | IDENTIFIER . MUL_ASSIGN expr
   66         | IDENTIFIER . DIV_ASSIGN expr
   67         | IDENTIFIER . MOD_ASSIGN expr
   70         | IDENTIFIER . SELF_INC
   71         | IDENTIFIER . SELF_DEC

    LOP_ASSIGN  shift, and go to state 53
    ADD_ASSIGN  shift, and go to state 54
    SUB_ASSIGN  shift, and go to state 55
    MOD_ASSIGN  shift, and go to state 56
    DIV_ASSIGN  shift, and go to state 57
    MUL_ASSIGN  shift, and go to state 58
    LPAREN      shift, and go to state 59
    SELF_INC    shift, and go to state 60
    SELF_DEC    shift, and go to state 61


State 16

   69 opassign: SELF_INC . IDENTIFIER

    IDENTIFIER  shift, and go to state 62


State 17

   68 opassign: SELF_DEC . IDENTIFIER

    IDENTIFIER  shift, and go to state 63


State 18

    0 $accept: program . $end

    $end  shift, and go to state 64


State 19

    1 program: statements .
    3 statements: statements . statement

    IF              shift, and go to state 1
    WHILE           shift, and go to state 2
    FOR             shift, and go to state 3
    RETURN          shift, and go to state 4
    T_CHAR          shift, and go to state 5
    T_INT           shift, and go to state 6
    T_STRING        shift, and go to state 7
    T_BOOL          shift, and go to state 8
    T_INT_POINTER   shift, and go to state 9
    T_CHAR_POINTER  shift, and go to state 10
    PRINTF          shift, and go to state 11
    SCANF           shift, and go to state 12
    SEMICOLON       shift, and go to state 13
    LBRACE          shift, and go to state 14
    IDENTIFIER      shift, and go to state 15
    SELF_INC        shift, and go to state 16
    SELF_DEC        shift, and go to state 17

    $default  reduce using rule 1 (program)

    statement      go to state 65
    return         go to state 21
    for            go to state 22
    function_decl  go to state 23
    function_def   go to state 24
    function_use   go to state 25
    printf         go to state 26
    scanf          go to state 27
    while          go to state 28
    block          go to state 29
    if_else        go to state 30
    declaration    go to state 31
    eq_assign      go to state 32
    opassign       go to state 33
    T              go to state 34


State 20

    2 statements: statement .

    $default  reduce using rule 2 (statements)


State 21

   16 statement: return . SEMICOLON

    SEMICOLON  shift, and go to state 66


State 22

   14 statement: for .

    $default  reduce using rule 14 (statement)


State 23

   11 statement: function_decl . SEMICOLON

    SEMICOLON  shift, and go to state 67


State 24

   12 statement: function_def .

    $default  reduce using rule 12 (statement)


State 25

   13 statement: function_use . SEMICOLON

    SEMICOLON  shift, and go to state 68


State 26

    9 statement: printf . SEMICOLON

    SEMICOLON  shift, and go to state 69


State 27

   10 statement: scanf . SEMICOLON

    SEMICOLON  shift, and go to state 70


State 28

    8 statement: while .

    $default  reduce using rule 8 (statement)


State 29

   17 statement: block .

    $default  reduce using rule 17 (statement)


State 30

    7 statement: if_else .

    $default  reduce using rule 7 (statement)


State 31

    5 statement: declaration . SEMICOLON

    SEMICOLON  shift, and go to state 71


State 32

    6 statement: eq_assign . SEMICOLON

    SEMICOLON  shift, and go to state 72


State 33

   15 statement: opassign . SEMICOLON

    SEMICOLON  shift, and go to state 73


State 34

   22 function_decl: T . IDENTIFIER LPAREN RPAREN
   23              | T . IDENTIFIER LPAREN params RPAREN
   24 function_def: T . IDENTIFIER LPAREN params RPAREN block
   54 declaration: T . eq_assigns
   55            | T . idlist

    IDENTIFIER  shift, and go to state 74

    eq_assigns  go to state 75
    eq_assign   go to state 76
    idlist      go to state 77


State 35

   40 if_else: IF LPAREN . bool_statements RPAREN block ELSE block
   41        | IF LPAREN . bool_statements RPAREN block

    LPAREN      shift, and go to state 38
    IDENTIFIER  shift, and go to state 39
    INTEGER     shift, and go to state 40
    CHAR        shift, and go to state 41
    STRING      shift, and go to state 42
    ADD         shift, and go to state 43
    SUB         shift, and go to state 44
    NOT         shift, and go to state 45

    bool_statements  go to state 78
    bool_statement   go to state 47
    expr             go to state 79


State 36

   37 while: WHILE LPAREN . bool_statements RPAREN block

    LPAREN      shift, and go to state 38
    IDENTIFIER  shift, and go to state 39
    INTEGER     shift, and go to state 40
    CHAR        shift, and go to state 41
    STRING      shift, and go to state 42
    ADD         shift, and go to state 43
    SUB         shift, and go to state 44
    NOT         shift, and go to state 45

    bool_statements  go to state 80
    bool_statement   go to state 47
    expr             go to state 79


State 37

   20 for: FOR LPAREN . declaration SEMICOLON bool_statements SEMICOLON assigns RPAREN block
   21    | FOR LPAREN . SEMICOLON bool_statements SEMICOLON assigns RPAREN block

    T_CHAR          shift, and go to state 5
    T_INT           shift, and go to state 6
    T_STRING        shift, and go to state 7
    T_BOOL          shift, and go to state 8
    T_INT_POINTER   shift, and go to state 9
    T_CHAR_POINTER  shift, and go to state 10
    SEMICOLON       shift, and go to state 81

    declaration  go to state 82
    T            go to state 83


State 38

   42 bool_statements: LPAREN . bool_statements RPAREN
   76 expr: LPAREN . expr RPAREN

    LPAREN      shift, and go to state 38
    IDENTIFIER  shift, and go to state 39
    INTEGER     shift, and go to state 40
    CHAR        shift, and go to state 41
    STRING      shift, and go to state 42
    ADD         shift, and go to state 43
    SUB         shift, and go to state 44
    NOT         shift, and go to state 45

    bool_statements  go to state 84
    bool_statement   go to state 47
    expr             go to state 85


State 39

   84 expr: IDENTIFIER .

    $default  reduce using rule 84 (expr)


State 40

   85 expr: INTEGER .

    $default  reduce using rule 85 (expr)


State 41

   86 expr: CHAR .

    $default  reduce using rule 86 (expr)


State 42

   87 expr: STRING .

    $default  reduce using rule 87 (expr)


State 43

   80 expr: ADD . expr

    LPAREN      shift, and go to state 86
    IDENTIFIER  shift, and go to state 39
    INTEGER     shift, and go to state 40
    CHAR        shift, and go to state 41
    STRING      shift, and go to state 42
    ADD         shift, and go to state 43
    SUB         shift, and go to state 44

    expr  go to state 87


State 44

   79 expr: SUB . expr

    LPAREN      shift, and go to state 86
    IDENTIFIER  shift, and go to state 39
    INTEGER     shift, and go to state 40
    CHAR        shift, and go to state 41
    STRING      shift, and go to state 42
    ADD         shift, and go to state 43
    SUB         shift, and go to state 44

    expr  go to state 88


State 45

   45 bool_statements: NOT . bool_statements

    LPAREN      shift, and go to state 38
    IDENTIFIER  shift, and go to state 39
    INTEGER     shift, and go to state 40
    CHAR        shift, and go to state 41
    STRING      shift, and go to state 42
    ADD         shift, and go to state 43
    SUB         shift, and go to state 44
    NOT         shift, and go to state 45

    bool_statements  go to state 89
    bool_statement   go to state 47
    expr             go to state 79


State 46

   19 return: RETURN bool_statements .
   43 bool_statements: bool_statements . AND bool_statements
   44                | bool_statements . OR bool_statements

    OR   shift, and go to state 90
    AND  shift, and go to state 91

    $default  reduce using rule 19 (return)


State 47

   46 bool_statements: bool_statement .
   48 bool_statement: bool_statement . GREAT bool_statement
   49               | bool_statement . LESS bool_statement
   50               | bool_statement . GREAT_EQ bool_statement
   51               | bool_statement . LESS_EQ bool_statement
   52               | bool_statement . LOP_EQ bool_statement
   53               | bool_statement . NOT_EQ bool_statement

    LOP_EQ    shift, and go to state 92
    GREAT     shift, and go to state 93
    LESS      shift, and go to state 94
    GREAT_EQ  shift, and go to state 95
    LESS_EQ   shift, and go to state 96
    NOT_EQ    shift, and go to state 97

    $default  reduce using rule 46 (bool_statements)


State 48

   18 return: RETURN expr .
   47 bool_statement: expr .
   77 expr: expr . ADD expr
   78     | expr . SUB expr
   81     | expr . MUL expr
   82     | expr . DIV expr
   83     | expr . MOD expr

    ADD  shift, and go to state 98
    SUB  shift, and go to state 99
    MUL  shift, and go to state 100
    DIV  shift, and go to state 101
    MOD  shift, and go to state 102

    SEMICOLON  reduce using rule 18 (return)
    SEMICOLON  [reduce using rule 47 (bool_statement)]
    $default   reduce using rule 47 (bool_statement)


State 49

   30 printf: PRINTF LPAREN . STRING RPAREN
   31       | PRINTF LPAREN . STRING COMMA exprs RPAREN
   32       | PRINTF LPAREN . idlist RPAREN

    IDENTIFIER  shift, and go to state 103
    STRING      shift, and go to state 104

    idlist  go to state 105


State 50

   33 scanf: SCANF LPAREN . STRING COMMA address_idlist RPAREN

    STRING  shift, and go to state 106


State 51

   39 block: LBRACE RBRACE .

    $default  reduce using rule 39 (block)


State 52

    3 statements: statements . statement
   38 block: LBRACE statements . RBRACE

    IF              shift, and go to state 1
    WHILE           shift, and go to state 2
    FOR             shift, and go to state 3
    RETURN          shift, and go to state 4
    T_CHAR          shift, and go to state 5
    T_INT           shift, and go to state 6
    T_STRING        shift, and go to state 7
    T_BOOL          shift, and go to state 8
    T_INT_POINTER   shift, and go to state 9
    T_CHAR_POINTER  shift, and go to state 10
    PRINTF          shift, and go to state 11
    SCANF           shift, and go to state 12
    SEMICOLON       shift, and go to state 13
    LBRACE          shift, and go to state 14
    RBRACE          shift, and go to state 107
    IDENTIFIER      shift, and go to state 15
    SELF_INC        shift, and go to state 16
    SELF_DEC        shift, and go to state 17

    statement      go to state 65
    return         go to state 21
    for            go to state 22
    function_decl  go to state 23
    function_def   go to state 24
    function_use   go to state 25
    printf         go to state 26
    scanf          go to state 27
    while          go to state 28
    block          go to state 29
    if_else        go to state 30
    declaration    go to state 31
    eq_assign      go to state 32
    opassign       go to state 33
    T              go to state 34


State 53

   62 eq_assign: IDENTIFIER LOP_ASSIGN . expr

    LPAREN      shift, and go to state 86
    IDENTIFIER  shift, and go to state 39
    INTEGER     shift, and go to state 40
    CHAR        shift, and go to state 41
    STRING      shift, and go to state 42
    ADD         shift, and go to state 43
    SUB         shift, and go to state 44

    expr  go to state 108


State 54

   63 opassign: IDENTIFIER ADD_ASSIGN . expr

    LPAREN      shift, and go to state 86
    IDENTIFIER  shift, and go to state 39
    INTEGER     shift, and go to state 40
    CHAR        shift, and go to state 41
    STRING      shift, and go to state 42
    ADD         shift, and go to state 43
    SUB         shift, and go to state 44

    expr  go to state 109


State 55

   64 opassign: IDENTIFIER SUB_ASSIGN . expr

    LPAREN      shift, and go to state 86
    IDENTIFIER  shift, and go to state 39
    INTEGER     shift, and go to state 40
    CHAR        shift, and go to state 41
    STRING      shift, and go to state 42
    ADD         shift, and go to state 43
    SUB         shift, and go to state 44

    expr  go to state 110


State 56

   67 opassign: IDENTIFIER MOD_ASSIGN . expr

    LPAREN      shift, and go to state 86
    IDENTIFIER  shift, and go to state 39
    INTEGER     shift, and go to state 40
    CHAR        shift, and go to state 41
    STRING      shift, and go to state 42
    ADD         shift, and go to state 43
    SUB         shift, and go to state 44

    expr  go to state 111


State 57

   66 opassign: IDENTIFIER DIV_ASSIGN . expr

    LPAREN      shift, and go to state 86
    IDENTIFIER  shift, and go to state 39
    INTEGER     shift, and go to state 40
    CHAR        shift, and go to state 41
    STRING      shift, and go to state 42
    ADD         shift, and go to state 43
    SUB         shift, and go to state 44

    expr  go to state 112


State 58

   65 opassign: IDENTIFIER MUL_ASSIGN . expr

    LPAREN      shift, and go to state 86
    IDENTIFIER  shift, and go to state 39
    INTEGER     shift, and go to state 40
    CHAR        shift, and go to state 41
    STRING      shift, and go to state 42
    ADD         shift, and go to state 43
    SUB         shift, and go to state 44

    expr  go to state 113


State 59

   25 function_use: IDENTIFIER LPAREN . idlist RPAREN
   26             | IDENTIFIER LPAREN . RPAREN

    RPAREN      shift, and go to state 114
    IDENTIFIER  shift, and go to state 103

    idlist  go to state 115


State 60

   70 opassign: IDENTIFIER SELF_INC .

    $default  reduce using rule 70 (opassign)


State 61

   71 opassign: IDENTIFIER SELF_DEC .

    $default  reduce using rule 71 (opassign)


State 62

   69 opassign: SELF_INC IDENTIFIER .

    $default  reduce using rule 69 (opassign)


State 63

   68 opassign: SELF_DEC IDENTIFIER .

    $default  reduce using rule 68 (opassign)


State 64

    0 $accept: program $end .

    $default  accept


State 65

    3 statements: statements statement .

    $default  reduce using rule 3 (statements)


State 66

   16 statement: return SEMICOLON .

    $default  reduce using rule 16 (statement)


State 67

   11 statement: function_decl SEMICOLON .

    $default  reduce using rule 11 (statement)


State 68

   13 statement: function_use SEMICOLON .

    $default  reduce using rule 13 (statement)


State 69

    9 statement: printf SEMICOLON .

    $default  reduce using rule 9 (statement)


State 70

   10 statement: scanf SEMICOLON .

    $default  reduce using rule 10 (statement)


State 71

    5 statement: declaration SEMICOLON .

    $default  reduce using rule 5 (statement)


State 72

    6 statement: eq_assign SEMICOLON .

    $default  reduce using rule 6 (statement)


State 73

   15 statement: opassign SEMICOLON .

    $default  reduce using rule 15 (statement)


State 74

   22 function_decl: T IDENTIFIER . LPAREN RPAREN
   23              | T IDENTIFIER . LPAREN params RPAREN
   24 function_def: T IDENTIFIER . LPAREN params RPAREN block
   62 eq_assign: IDENTIFIER . LOP_ASSIGN expr
   73 idlist: IDENTIFIER .

    LOP_ASSIGN  shift, and go to state 53
    LPAREN      shift, and go to state 116

    $default  reduce using rule 73 (idlist)


State 75

   54 declaration: T eq_assigns .
   60 eq_assigns: eq_assigns . COMMA eq_assign

    COMMA  shift, and go to state 117

    $default  reduce using rule 54 (declaration)


State 76

   61 eq_assigns: eq_assign .

    $default  reduce using rule 61 (eq_assigns)


State 77

   55 declaration: T idlist .
   72 idlist: idlist . COMMA IDENTIFIER

    COMMA  shift, and go to state 118

    $default  reduce using rule 55 (declaration)


State 78

   40 if_else: IF LPAREN bool_statements . RPAREN block ELSE block
   41        | IF LPAREN bool_statements . RPAREN block
   43 bool_statements: bool_statements . AND bool_statements
   44                | bool_statements . OR bool_statements

    RPAREN  shift, and go to state 119
    OR      shift, and go to state 90
    AND     shift, and go to state 91


State 79

   47 bool_statement: expr .
   77 expr: expr . ADD expr
   78     | expr . SUB expr
   81     | expr . MUL expr
   82     | expr . DIV expr
   83     | expr . MOD expr

    ADD  shift, and go to state 98
    SUB  shift, and go to state 99
    MUL  shift, and go to state 100
    DIV  shift, and go to state 101
    MOD  shift, and go to state 102

    $default  reduce using rule 47 (bool_statement)


State 80

   37 while: WHILE LPAREN bool_statements . RPAREN block
   43 bool_statements: bool_statements . AND bool_statements
   44                | bool_statements . OR bool_statements

    RPAREN  shift, and go to state 120
    OR      shift, and go to state 90
    AND     shift, and go to state 91


State 81

   21 for: FOR LPAREN SEMICOLON . bool_statements SEMICOLON assigns RPAREN block

    LPAREN      shift, and go to state 38
    IDENTIFIER  shift, and go to state 39
    INTEGER     shift, and go to state 40
    CHAR        shift, and go to state 41
    STRING      shift, and go to state 42
    ADD         shift, and go to state 43
    SUB         shift, and go to state 44
    NOT         shift, and go to state 45

    bool_statements  go to state 121
    bool_statement   go to state 47
    expr             go to state 79


State 82

   20 for: FOR LPAREN declaration . SEMICOLON bool_statements SEMICOLON assigns RPAREN block

    SEMICOLON  shift, and go to state 122


State 83

   54 declaration: T . eq_assigns
   55            | T . idlist

    IDENTIFIER  shift, and go to state 123

    eq_assigns  go to state 75
    eq_assign   go to state 76
    idlist      go to state 77


State 84

   42 bool_statements: LPAREN bool_statements . RPAREN
   43                | bool_statements . AND bool_statements
   44                | bool_statements . OR bool_statements

    RPAREN  shift, and go to state 124
    OR      shift, and go to state 90
    AND     shift, and go to state 91


State 85

   47 bool_statement: expr .
   76 expr: LPAREN expr . RPAREN
   77     | expr . ADD expr
   78     | expr . SUB expr
   81     | expr . MUL expr
   82     | expr . DIV expr
   83     | expr . MOD expr

    RPAREN  shift, and go to state 125
    ADD     shift, and go to state 98
    SUB     shift, and go to state 99
    MUL     shift, and go to state 100
    DIV     shift, and go to state 101
    MOD     shift, and go to state 102

    RPAREN    [reduce using rule 47 (bool_statement)]
    $default  reduce using rule 47 (bool_statement)


State 86

   76 expr: LPAREN . expr RPAREN

    LPAREN      shift, and go to state 86
    IDENTIFIER  shift, and go to state 39
    INTEGER     shift, and go to state 40
    CHAR        shift, and go to state 41
    STRING      shift, and go to state 42
    ADD         shift, and go to state 43
    SUB         shift, and go to state 44

    expr  go to state 126


State 87

   77 expr: expr . ADD expr
   78     | expr . SUB expr
   80     | ADD expr .
   81     | expr . MUL expr
   82     | expr . DIV expr
   83     | expr . MOD expr

    $default  reduce using rule 80 (expr)


State 88

   77 expr: expr . ADD expr
   78     | expr . SUB expr
   79     | SUB expr .
   81     | expr . MUL expr
   82     | expr . DIV expr
   83     | expr . MOD expr

    $default  reduce using rule 79 (expr)


State 89

   43 bool_statements: bool_statements . AND bool_statements
   44                | bool_statements . OR bool_statements
   45                | NOT bool_statements .

    $default  reduce using rule 45 (bool_statements)


State 90

   44 bool_statements: bool_statements OR . bool_statements

    LPAREN      shift, and go to state 38
    IDENTIFIER  shift, and go to state 39
    INTEGER     shift, and go to state 40
    CHAR        shift, and go to state 41
    STRING      shift, and go to state 42
    ADD         shift, and go to state 43
    SUB         shift, and go to state 44
    NOT         shift, and go to state 45

    bool_statements  go to state 127
    bool_statement   go to state 47
    expr             go to state 79


State 91

   43 bool_statements: bool_statements AND . bool_statements

    LPAREN      shift, and go to state 38
    IDENTIFIER  shift, and go to state 39
    INTEGER     shift, and go to state 40
    CHAR        shift, and go to state 41
    STRING      shift, and go to state 42
    ADD         shift, and go to state 43
    SUB         shift, and go to state 44
    NOT         shift, and go to state 45

    bool_statements  go to state 128
    bool_statement   go to state 47
    expr             go to state 79


State 92

   52 bool_statement: bool_statement LOP_EQ . bool_statement

    LPAREN      shift, and go to state 86
    IDENTIFIER  shift, and go to state 39
    INTEGER     shift, and go to state 40
    CHAR        shift, and go to state 41
    STRING      shift, and go to state 42
    ADD         shift, and go to state 43
    SUB         shift, and go to state 44

    bool_statement  go to state 129
    expr            go to state 79


State 93

   48 bool_statement: bool_statement GREAT . bool_statement

    LPAREN      shift, and go to state 86
    IDENTIFIER  shift, and go to state 39
    INTEGER     shift, and go to state 40
    CHAR        shift, and go to state 41
    STRING      shift, and go to state 42
    ADD         shift, and go to state 43
    SUB         shift, and go to state 44

    bool_statement  go to state 130
    expr            go to state 79


State 94

   49 bool_statement: bool_statement LESS . bool_statement

    LPAREN      shift, and go to state 86
    IDENTIFIER  shift, and go to state 39
    INTEGER     shift, and go to state 40
    CHAR        shift, and go to state 41
    STRING      shift, and go to state 42
    ADD         shift, and go to state 43
    SUB         shift, and go to state 44

    bool_statement  go to state 131
    expr            go to state 79


State 95

   50 bool_statement: bool_statement GREAT_EQ . bool_statement

    LPAREN      shift, and go to state 86
    IDENTIFIER  shift, and go to state 39
    INTEGER     shift, and go to state 40
    CHAR        shift, and go to state 41
    STRING      shift, and go to state 42
    ADD         shift, and go to state 43
    SUB         shift, and go to state 44

    bool_statement  go to state 132
    expr            go to state 79


State 96

   51 bool_statement: bool_statement LESS_EQ . bool_statement

    LPAREN      shift, and go to state 86
    IDENTIFIER  shift, and go to state 39
    INTEGER     shift, and go to state 40
    CHAR        shift, and go to state 41
    STRING      shift, and go to state 42
    ADD         shift, and go to state 43
    SUB         shift, and go to state 44

    bool_statement  go to state 133
    expr            go to state 79


State 97

   53 bool_statement: bool_statement NOT_EQ . bool_statement

    LPAREN      shift, and go to state 86
    IDENTIFIER  shift, and go to state 39
    INTEGER     shift, and go to state 40
    CHAR        shift, and go to state 41
    STRING      shift, and go to state 42
    ADD         shift, and go to state 43
    SUB         shift, and go to state 44

    bool_statement  go to state 134
    expr            go to state 79


State 98

   77 expr: expr ADD . expr

    LPAREN      shift, and go to state 86
    IDENTIFIER  shift, and go to state 39
    INTEGER     shift, and go to state 40
    CHAR        shift, and go to state 41
    STRING      shift, and go to state 42
    ADD         shift, and go to state 43
    SUB         shift, and go to state 44

    expr  go to state 135


State 99

   78 expr: expr SUB . expr

    LPAREN      shift, and go to state 86
    IDENTIFIER  shift, and go to state 39
    INTEGER     shift, and go to state 40
    CHAR        shift, and go to state 41
    STRING      shift, and go to state 42
    ADD         shift, and go to state 43
    SUB         shift, and go to state 44

    expr  go to state 136


State 100

   81 expr: expr MUL . expr

    LPAREN      shift, and go to state 86
    IDENTIFIER  shift, and go to state 39
    INTEGER     shift, and go to state 40
    CHAR        shift, and go to state 41
    STRING      shift, and go to state 42
    ADD         shift, and go to state 43
    SUB         shift, and go to state 44

    expr  go to state 137


State 101

   82 expr: expr DIV . expr

    LPAREN      shift, and go to state 86
    IDENTIFIER  shift, and go to state 39
    INTEGER     shift, and go to state 40
    CHAR        shift, and go to state 41
    STRING      shift, and go to state 42
    ADD         shift, and go to state 43
    SUB         shift, and go to state 44

    expr  go to state 138


State 102

   83 expr: expr MOD . expr

    LPAREN      shift, and go to state 86
    IDENTIFIER  shift, and go to state 39
    INTEGER     shift, and go to state 40
    CHAR        shift, and go to state 41
    STRING      shift, and go to state 42
    ADD         shift, and go to state 43
    SUB         shift, and go to state 44

    expr  go to state 139


State 103

   73 idlist: IDENTIFIER .

    $default  reduce using rule 73 (idlist)


State 104

   30 printf: PRINTF LPAREN STRING . RPAREN
   31       | PRINTF LPAREN STRING . COMMA exprs RPAREN

    COMMA   shift, and go to state 140
    RPAREN  shift, and go to state 141


State 105

   32 printf: PRINTF LPAREN idlist . RPAREN
   72 idlist: idlist . COMMA IDENTIFIER

    COMMA   shift, and go to state 118
    RPAREN  shift, and go to state 142


State 106

   33 scanf: SCANF LPAREN STRING . COMMA address_idlist RPAREN

    COMMA  shift, and go to state 143


State 107

   38 block: LBRACE statements RBRACE .

    $default  reduce using rule 38 (block)


State 108

   62 eq_assign: IDENTIFIER LOP_ASSIGN expr .
   77 expr: expr . ADD expr
   78     | expr . SUB expr
   81     | expr . MUL expr
   82     | expr . DIV expr
   83     | expr . MOD expr

    ADD  shift, and go to state 98
    SUB  shift, and go to state 99
    MUL  shift, and go to state 100
    DIV  shift, and go to state 101
    MOD  shift, and go to state 102

    $default  reduce using rule 62 (eq_assign)


State 109

   63 opassign: IDENTIFIER ADD_ASSIGN expr .
   77 expr: expr . ADD expr
   78     | expr . SUB expr
   81     | expr . MUL expr
   82     | expr . DIV expr
   83     | expr . MOD expr

    ADD  shift, and go to state 98
    SUB  shift, and go to state 99
    MUL  shift, and go to state 100
    DIV  shift, and go to state 101
    MOD  shift, and go to state 102

    $default  reduce using rule 63 (opassign)


State 110

   64 opassign: IDENTIFIER SUB_ASSIGN expr .
   77 expr: expr . ADD expr
   78     | expr . SUB expr
   81     | expr . MUL expr
   82     | expr . DIV expr
   83     | expr . MOD expr

    ADD  shift, and go to state 98
    SUB  shift, and go to state 99
    MUL  shift, and go to state 100
    DIV  shift, and go to state 101
    MOD  shift, and go to state 102

    $default  reduce using rule 64 (opassign)


State 111

   67 opassign: IDENTIFIER MOD_ASSIGN expr .
   77 expr: expr . ADD expr
   78     | expr . SUB expr
   81     | expr . MUL expr
   82     | expr . DIV expr
   83     | expr . MOD expr

    ADD  shift, and go to state 98
    SUB  shift, and go to state 99
    MUL  shift, and go to state 100
    DIV  shift, and go to state 101
    MOD  shift, and go to state 102

    $default  reduce using rule 67 (opassign)


State 112

   66 opassign: IDENTIFIER DIV_ASSIGN expr .
   77 expr: expr . ADD expr
   78     | expr . SUB expr
   81     | expr . MUL expr
   82     | expr . DIV expr
   83     | expr . MOD expr

    ADD  shift, and go to state 98
    SUB  shift, and go to state 99
    MUL  shift, and go to state 100
    DIV  shift, and go to state 101
    MOD  shift, and go to state 102

    $default  reduce using rule 66 (opassign)


State 113

   65 opassign: IDENTIFIER MUL_ASSIGN expr .
   77 expr: expr . ADD expr
   78     | expr . SUB expr
   81     | expr . MUL expr
   82     | expr . DIV expr
   83     | expr . MOD expr

    ADD  shift, and go to state 98
    SUB  shift, and go to state 99
    MUL  shift, and go to state 100
    DIV  shift, and go to state 101
    MOD  shift, and go to state 102

    $default  reduce using rule 65 (opassign)


State 114

   26 function_use: IDENTIFIER LPAREN RPAREN .

    $default  reduce using rule 26 (function_use)


State 115

   25 function_use: IDENTIFIER LPAREN idlist . RPAREN
   72 idlist: idlist . COMMA IDENTIFIER

    COMMA   shift, and go to state 118
    RPAREN  shift, and go to state 144


State 116

   22 function_decl: T IDENTIFIER LPAREN . RPAREN
   23              | T IDENTIFIER LPAREN . params RPAREN
   24 function_def: T IDENTIFIER LPAREN . params RPAREN block

    T_CHAR          shift, and go to state 5
    T_INT           shift, and go to state 6
    T_STRING        shift, and go to state 7
    T_BOOL          shift, and go to state 8
    T_INT_POINTER   shift, and go to state 9
    T_CHAR_POINTER  shift, and go to state 10
    RPAREN          shift, and go to state 145

    params  go to state 146
    param   go to state 147
    T       go to state 148


State 117

   60 eq_assigns: eq_assigns COMMA . eq_assign

    IDENTIFIER  shift, and go to state 149

    eq_assign  go to state 150


State 118

   72 idlist: idlist COMMA . IDENTIFIER

    IDENTIFIER  shift, and go to state 151


State 119

   40 if_else: IF LPAREN bool_statements RPAREN . block ELSE block
   41        | IF LPAREN bool_statements RPAREN . block

    LBRACE  shift, and go to state 14

    block  go to state 152


State 120

   37 while: WHILE LPAREN bool_statements RPAREN . block

    LBRACE  shift, and go to state 14

    block  go to state 153


State 121

   21 for: FOR LPAREN SEMICOLON bool_statements . SEMICOLON assigns RPAREN block
   43 bool_statements: bool_statements . AND bool_statements
   44                | bool_statements . OR bool_statements

    SEMICOLON  shift, and go to state 154
    OR         shift, and go to state 90
    AND        shift, and go to state 91


State 122

   20 for: FOR LPAREN declaration SEMICOLON . bool_statements SEMICOLON assigns RPAREN block

    LPAREN      shift, and go to state 38
    IDENTIFIER  shift, and go to state 39
    INTEGER     shift, and go to state 40
    CHAR        shift, and go to state 41
    STRING      shift, and go to state 42
    ADD         shift, and go to state 43
    SUB         shift, and go to state 44
    NOT         shift, and go to state 45

    bool_statements  go to state 155
    bool_statement   go to state 47
    expr             go to state 79


State 123

   62 eq_assign: IDENTIFIER . LOP_ASSIGN expr
   73 idlist: IDENTIFIER .

    LOP_ASSIGN  shift, and go to state 53

    $default  reduce using rule 73 (idlist)


State 124

   42 bool_statements: LPAREN bool_statements RPAREN .

    $default  reduce using rule 42 (bool_statements)


State 125

   76 expr: LPAREN expr RPAREN .

    $default  reduce using rule 76 (expr)


State 126

   76 expr: LPAREN expr . RPAREN
   77     | expr . ADD expr
   78     | expr . SUB expr
   81     | expr . MUL expr
   82     | expr . DIV expr
   83     | expr . MOD expr

    RPAREN  shift, and go to state 125
    ADD     shift, and go to state 98
    SUB     shift, and go to state 99
    MUL     shift, and go to state 100
    DIV     shift, and go to state 101
    MOD     shift, and go to state 102


State 127

   43 bool_statements: bool_statements . AND bool_statements
   44                | bool_statements . OR bool_statements
   44                | bool_statements OR bool_statements .

    AND  shift, and go to state 91

    $default  reduce using rule 44 (bool_statements)


State 128

   43 bool_statements: bool_statements . AND bool_statements
   43                | bool_statements AND bool_statements .
   44                | bool_statements . OR bool_statements

    $default  reduce using rule 43 (bool_statements)


State 129

   48 bool_statement: bool_statement . GREAT bool_statement
   49               | bool_statement . LESS bool_statement
   50               | bool_statement . GREAT_EQ bool_statement
   51               | bool_statement . LESS_EQ bool_statement
   52               | bool_statement . LOP_EQ bool_statement
   52               | bool_statement LOP_EQ bool_statement .
   53               | bool_statement . NOT_EQ bool_statement

    $default  reduce using rule 52 (bool_statement)


State 130

   48 bool_statement: bool_statement . GREAT bool_statement
   48               | bool_statement GREAT bool_statement .
   49               | bool_statement . LESS bool_statement
   50               | bool_statement . GREAT_EQ bool_statement
   51               | bool_statement . LESS_EQ bool_statement
   52               | bool_statement . LOP_EQ bool_statement
   53               | bool_statement . NOT_EQ bool_statement

    $default  reduce using rule 48 (bool_statement)


State 131

   48 bool_statement: bool_statement . GREAT bool_statement
   49               | bool_statement . LESS bool_statement
   49               | bool_statement LESS bool_statement .
   50               | bool_statement . GREAT_EQ bool_statement
   51               | bool_statement . LESS_EQ bool_statement
   52               | bool_statement . LOP_EQ bool_statement
   53               | bool_statement . NOT_EQ bool_statement

    $default  reduce using rule 49 (bool_statement)


State 132

   48 bool_statement: bool_statement . GREAT bool_statement
   49               | bool_statement . LESS bool_statement
   50               | bool_statement . GREAT_EQ bool_statement
   50               | bool_statement GREAT_EQ bool_statement .
   51               | bool_statement . LESS_EQ bool_statement
   52               | bool_statement . LOP_EQ bool_statement
   53               | bool_statement . NOT_EQ bool_statement

    $default  reduce using rule 50 (bool_statement)


State 133

   48 bool_statement: bool_statement . GREAT bool_statement
   49               | bool_statement . LESS bool_statement
   50               | bool_statement . GREAT_EQ bool_statement
   51               | bool_statement . LESS_EQ bool_statement
   51               | bool_statement LESS_EQ bool_statement .
   52               | bool_statement . LOP_EQ bool_statement
   53               | bool_statement . NOT_EQ bool_statement

    $default  reduce using rule 51 (bool_statement)


State 134

   48 bool_statement: bool_statement . GREAT bool_statement
   49               | bool_statement . LESS bool_statement
   50               | bool_statement . GREAT_EQ bool_statement
   51               | bool_statement . LESS_EQ bool_statement
   52               | bool_statement . LOP_EQ bool_statement
   53               | bool_statement . NOT_EQ bool_statement
   53               | bool_statement NOT_EQ bool_statement .

    $default  reduce using rule 53 (bool_statement)


State 135

   77 expr: expr . ADD expr
   77     | expr ADD expr .
   78     | expr . SUB expr
   81     | expr . MUL expr
   82     | expr . DIV expr
   83     | expr . MOD expr

    MUL  shift, and go to state 100
    DIV  shift, and go to state 101
    MOD  shift, and go to state 102

    $default  reduce using rule 77 (expr)


State 136

   77 expr: expr . ADD expr
   78     | expr . SUB expr
   78     | expr SUB expr .
   81     | expr . MUL expr
   82     | expr . DIV expr
   83     | expr . MOD expr

    MUL  shift, and go to state 100
    DIV  shift, and go to state 101
    MOD  shift, and go to state 102

    $default  reduce using rule 78 (expr)


State 137

   77 expr: expr . ADD expr
   78     | expr . SUB expr
   81     | expr . MUL expr
   81     | expr MUL expr .
   82     | expr . DIV expr
   83     | expr . MOD expr

    $default  reduce using rule 81 (expr)


State 138

   77 expr: expr . ADD expr
   78     | expr . SUB expr
   81     | expr . MUL expr
   82     | expr . DIV expr
   82     | expr DIV expr .
   83     | expr . MOD expr

    $default  reduce using rule 82 (expr)


State 139

   77 expr: expr . ADD expr
   78     | expr . SUB expr
   81     | expr . MUL expr
   82     | expr . DIV expr
   83     | expr . MOD expr
   83     | expr MOD expr .

    $default  reduce using rule 83 (expr)


State 140

   31 printf: PRINTF LPAREN STRING COMMA . exprs RPAREN

    LPAREN      shift, and go to state 86
    IDENTIFIER  shift, and go to state 39
    INTEGER     shift, and go to state 40
    CHAR        shift, and go to state 41
    STRING      shift, and go to state 42
    ADD         shift, and go to state 43
    SUB         shift, and go to state 44

    exprs  go to state 156
    expr   go to state 157


State 141

   30 printf: PRINTF LPAREN STRING RPAREN .

    $default  reduce using rule 30 (printf)


State 142

   32 printf: PRINTF LPAREN idlist RPAREN .

    $default  reduce using rule 32 (printf)


State 143

   33 scanf: SCANF LPAREN STRING COMMA . address_idlist RPAREN

    GET_ADDRESS  shift, and go to state 158

    address_idlist  go to state 159
    get_address_id  go to state 160


State 144

   25 function_use: IDENTIFIER LPAREN idlist RPAREN .

    $default  reduce using rule 25 (function_use)


State 145

   22 function_decl: T IDENTIFIER LPAREN RPAREN .

    $default  reduce using rule 22 (function_decl)


State 146

   23 function_decl: T IDENTIFIER LPAREN params . RPAREN
   24 function_def: T IDENTIFIER LPAREN params . RPAREN block
   27 params: params . COMMA param

    COMMA   shift, and go to state 161
    RPAREN  shift, and go to state 162


State 147

   28 params: param .

    $default  reduce using rule 28 (params)


State 148

   29 param: T . IDENTIFIER

    IDENTIFIER  shift, and go to state 163


State 149

   62 eq_assign: IDENTIFIER . LOP_ASSIGN expr

    LOP_ASSIGN  shift, and go to state 53


State 150

   60 eq_assigns: eq_assigns COMMA eq_assign .

    $default  reduce using rule 60 (eq_assigns)


State 151

   72 idlist: idlist COMMA IDENTIFIER .

    $default  reduce using rule 72 (idlist)


State 152

   40 if_else: IF LPAREN bool_statements RPAREN block . ELSE block
   41        | IF LPAREN bool_statements RPAREN block .

    ELSE  shift, and go to state 164

    $default  reduce using rule 41 (if_else)


State 153

   37 while: WHILE LPAREN bool_statements RPAREN block .

    $default  reduce using rule 37 (while)


State 154

   21 for: FOR LPAREN SEMICOLON bool_statements SEMICOLON . assigns RPAREN block

    IDENTIFIER  shift, and go to state 165
    SELF_INC    shift, and go to state 16
    SELF_DEC    shift, and go to state 17

    assigns    go to state 166
    assign     go to state 167
    eq_assign  go to state 168
    opassign   go to state 169


State 155

   20 for: FOR LPAREN declaration SEMICOLON bool_statements . SEMICOLON assigns RPAREN block
   43 bool_statements: bool_statements . AND bool_statements
   44                | bool_statements . OR bool_statements

    SEMICOLON  shift, and go to state 170
    OR         shift, and go to state 90
    AND        shift, and go to state 91


State 156

   31 printf: PRINTF LPAREN STRING COMMA exprs . RPAREN
   74 exprs: exprs . COMMA expr

    COMMA   shift, and go to state 171
    RPAREN  shift, and go to state 172


State 157

   75 exprs: expr .
   77 expr: expr . ADD expr
   78     | expr . SUB expr
   81     | expr . MUL expr
   82     | expr . DIV expr
   83     | expr . MOD expr

    ADD  shift, and go to state 98
    SUB  shift, and go to state 99
    MUL  shift, and go to state 100
    DIV  shift, and go to state 101
    MOD  shift, and go to state 102

    $default  reduce using rule 75 (exprs)


State 158

   36 get_address_id: GET_ADDRESS . IDENTIFIER

    IDENTIFIER  shift, and go to state 173


State 159

   33 scanf: SCANF LPAREN STRING COMMA address_idlist . RPAREN
   34 address_idlist: address_idlist . COMMA get_address_id

    COMMA   shift, and go to state 174
    RPAREN  shift, and go to state 175


State 160

   35 address_idlist: get_address_id .

    $default  reduce using rule 35 (address_idlist)


State 161

   27 params: params COMMA . param

    T_CHAR          shift, and go to state 5
    T_INT           shift, and go to state 6
    T_STRING        shift, and go to state 7
    T_BOOL          shift, and go to state 8
    T_INT_POINTER   shift, and go to state 9
    T_CHAR_POINTER  shift, and go to state 10

    param  go to state 176
    T      go to state 148


State 162

   23 function_decl: T IDENTIFIER LPAREN params RPAREN .
   24 function_def: T IDENTIFIER LPAREN params RPAREN . block

    LBRACE  shift, and go to state 14

    $default  reduce using rule 23 (function_decl)

    block  go to state 177


State 163

   29 param: T IDENTIFIER .

    $default  reduce using rule 29 (param)


State 164

   40 if_else: IF LPAREN bool_statements RPAREN block ELSE . block

    LBRACE  shift, and go to state 14

    block  go to state 178


State 165

   62 eq_assign: IDENTIFIER . LOP_ASSIGN expr
   63 opassign: IDENTIFIER . ADD_ASSIGN expr
   64         | IDENTIFIER . SUB_ASSIGN expr
   65         | IDENTIFIER . MUL_ASSIGN expr
   66         | IDENTIFIER . DIV_ASSIGN expr
   67         | IDENTIFIER . MOD_ASSIGN expr
   70         | IDENTIFIER . SELF_INC
   71         | IDENTIFIER . SELF_DEC

    LOP_ASSIGN  shift, and go to state 53
    ADD_ASSIGN  shift, and go to state 54
    SUB_ASSIGN  shift, and go to state 55
    MOD_ASSIGN  shift, and go to state 56
    DIV_ASSIGN  shift, and go to state 57
    MUL_ASSIGN  shift, and go to state 58
    SELF_INC    shift, and go to state 60
    SELF_DEC    shift, and go to state 61


State 166

   21 for: FOR LPAREN SEMICOLON bool_statements SEMICOLON assigns . RPAREN block
   56 assigns: assigns . COMMA assign

    COMMA   shift, and go to state 179
    RPAREN  shift, and go to state 180


State 167

   57 assigns: assign .

    $default  reduce using rule 57 (assigns)


State 168

   59 assign: eq_assign .

    $default  reduce using rule 59 (assign)


State 169

   58 assign: opassign .

    $default  reduce using rule 58 (assign)


State 170

   20 for: FOR LPAREN declaration SEMICOLON bool_statements SEMICOLON . assigns RPAREN block

    IDENTIFIER  shift, and go to state 165
    SELF_INC    shift, and go to state 16
    SELF_DEC    shift, and go to state 17

    assigns    go to state 181
    assign     go to state 167
    eq_assign  go to state 168
    opassign   go to state 169


State 171

   74 exprs: exprs COMMA . expr

    LPAREN      shift, and go to state 86
    IDENTIFIER  shift, and go to state 39
    INTEGER     shift, and go to state 40
    CHAR        shift, and go to state 41
    STRING      shift, and go to state 42
    ADD         shift, and go to state 43
    SUB         shift, and go to state 44

    expr  go to state 182


State 172

   31 printf: PRINTF LPAREN STRING COMMA exprs RPAREN .

    $default  reduce using rule 31 (printf)


State 173

   36 get_address_id: GET_ADDRESS IDENTIFIER .

    $default  reduce using rule 36 (get_address_id)


State 174

   34 address_idlist: address_idlist COMMA . get_address_id

    GET_ADDRESS  shift, and go to state 158

    get_address_id  go to state 183


State 175

   33 scanf: SCANF LPAREN STRING COMMA address_idlist RPAREN .

    $default  reduce using rule 33 (scanf)


State 176

   27 params: params COMMA param .

    $default  reduce using rule 27 (params)


State 177

   24 function_def: T IDENTIFIER LPAREN params RPAREN block .

    $default  reduce using rule 24 (function_def)


State 178

   40 if_else: IF LPAREN bool_statements RPAREN block ELSE block .

    $default  reduce using rule 40 (if_else)


State 179

   56 assigns: assigns COMMA . assign

    IDENTIFIER  shift, and go to state 165
    SELF_INC    shift, and go to state 16
    SELF_DEC    shift, and go to state 17

    assign     go to state 184
    eq_assign  go to state 168
    opassign   go to state 169


State 180

   21 for: FOR LPAREN SEMICOLON bool_statements SEMICOLON assigns RPAREN . block

    LBRACE  shift, and go to state 14

    block  go to state 185


State 181

   20 for: FOR LPAREN declaration SEMICOLON bool_statements SEMICOLON assigns . RPAREN block
   56 assigns: assigns . COMMA assign

    COMMA   shift, and go to state 179
    RPAREN  shift, and go to state 186


State 182

   74 exprs: exprs COMMA expr .
   77 expr: expr . ADD expr
   78     | expr . SUB expr
   81     | expr . MUL expr
   82     | expr . DIV expr
   83     | expr . MOD expr

    ADD  shift, and go to state 98
    SUB  shift, and go to state 99
    MUL  shift, and go to state 100
    DIV  shift, and go to state 101
    MOD  shift, and go to state 102

    $default  reduce using rule 74 (exprs)


State 183

   34 address_idlist: address_idlist COMMA get_address_id .

    $default  reduce using rule 34 (address_idlist)


State 184

   56 assigns: assigns COMMA assign .

    $default  reduce using rule 56 (assigns)


State 185

   21 for: FOR LPAREN SEMICOLON bool_statements SEMICOLON assigns RPAREN block .

    $default  reduce using rule 21 (for)


State 186

   20 for: FOR LPAREN declaration SEMICOLON bool_statements SEMICOLON assigns RPAREN . block

    LBRACE  shift, and go to state 14

    block  go to state 187


State 187

   20 for: FOR LPAREN declaration SEMICOLON bool_statements SEMICOLON assigns RPAREN block .

    $default  reduce using rule 20 (for)

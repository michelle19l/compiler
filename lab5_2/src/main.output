Terminals unused in grammar

   FOR
   RETURN
   POINT
   LBRACK
   RBRACK
   BOOL
   GET_ADDRESS
   GET_VALUE


State 52 conflicts: 1 shift/reduce
State 60 conflicts: 13 reduce/reduce
State 72 conflicts: 12 shift/reduce
State 101 conflicts: 12 shift/reduce


Grammar

    0 $accept: program $end

    1 program: statements

    2 statements: statement
    3           | statements statement
    4           | LBRACE statements RBRACE
    5           | LBRACE RBRACE

    6 statement: SEMICOLON
    7          | declaration SEMICOLON
    8          | assign SEMICOLON
    9          | if_else
   10          | while
   11          | printf SEMICOLON
   12          | scanf SEMICOLON

   13 printf: PRINTF LPAREN STRING RPAREN
   14       | PRINTF LPAREN STRING COMMA exprs RPAREN

   15 scanf: SCANF LPAREN STRING COMMA idlist RPAREN

   16 while: WHILE bool_statements statements

   17 if_else: IF bool_statements statements ELSE statements
   18        | IF bool_statements statement

   19 bool_statements: LPAREN bool_statements RPAREN
   20                | bool_statements AND bool_statements
   21                | bool_statements OR bool_statements
   22                | NOT bool_statements
   23                | bool_statement

   24 bool_statement: expr
   25               | bool_statement GREAT bool_statement
   26               | bool_statement LESS bool_statement
   27               | bool_statement GREAT_EQ bool_statement
   28               | bool_statement LESS_EQ bool_statement
   29               | bool_statement LOP_EQ bool_statement
   30               | bool_statement NOT_EQ bool_statement

   31 declaration: T assigns
   32            | T idlist

   33 assigns: assigns COMMA assign
   34        | assign

   35 assign: IDENTIFIER LOP_ASSIGN expr

   36 idlist: idlist COMMA IDENTIFIER
   37       | IDENTIFIER

   38 exprs: exprs COMMA expr
   39      | expr

   40 expr: LPAREN expr RPAREN
   41     | expr ADD expr
   42     | expr SUB expr
   43     | SUB expr
   44     | ADD expr
   45     | expr MUL expr
   46     | expr DIV expr
   47     | expr MOD expr
   48     | IDENTIFIER
   49     | INTEGER
   50     | CHAR
   51     | STRING

   52 T: T_INT
   53  | T_CHAR
   54  | T_BOOL
   55  | T_STRING
   56  | T_INT_POINTER
   57  | T_CHAR_POINTER


Terminals, with rules where they appear

$end (0) 0
error (256)
IF (258) 17 18
ELSE (259) 17
WHILE (260) 16
FOR (261)
RETURN (262)
T_CHAR (263) 53
T_INT (264) 52
T_STRING (265) 55
T_BOOL (266) 54
T_INT_POINTER (267) 56
T_CHAR_POINTER (268) 57
PRINTF (269) 13 14
SCANF (270) 15
LOP_ASSIGN (271) 35
SEMICOLON (272) 6 7 8 11 12
COMMA (273) 14 15 33 36 38
POINT (274)
LPAREN (275) 13 14 15 19 40
RPAREN (276) 13 14 15 19 40
LBRACK (277)
RBRACK (278)
LBRACE (279) 4 5
RBRACE (280) 4 5
IDENTIFIER (281) 35 36 37 48
INTEGER (282) 49
CHAR (283) 50
BOOL (284)
STRING (285) 13 14 15 51
LOP_EQ (286) 29
GREAT (287) 25
LESS (288) 26
GREAT_EQ (289) 27
LESS_EQ (290) 28
NOT_EQ (291) 30
ADD (292) 41 44
SUB (293) 42 43
MUL (294) 45
DIV (295) 46
MOD (296) 47
OR (297) 21
AND (298) 20
NOT (299) 22
NEG (300)
POS (301)
GET_ADDRESS (302)
GET_VALUE (303)


Nonterminals, with rules where they appear

$accept (49)
    on left: 0
program (50)
    on left: 1, on right: 0
statements (51)
    on left: 2 3 4 5, on right: 1 3 4 16 17
statement (52)
    on left: 6 7 8 9 10 11 12, on right: 2 3 18
printf (53)
    on left: 13 14, on right: 11
scanf (54)
    on left: 15, on right: 12
while (55)
    on left: 16, on right: 10
if_else (56)
    on left: 17 18, on right: 9
bool_statements (57)
    on left: 19 20 21 22 23, on right: 16 17 18 19 20 21 22
bool_statement (58)
    on left: 24 25 26 27 28 29 30, on right: 23 25 26 27 28 29 30
declaration (59)
    on left: 31 32, on right: 7
assigns (60)
    on left: 33 34, on right: 31 33
assign (61)
    on left: 35, on right: 8 33 34
idlist (62)
    on left: 36 37, on right: 15 32 36
exprs (63)
    on left: 38 39, on right: 14 38
expr (64)
    on left: 40 41 42 43 44 45 46 47 48 49 50 51, on right: 24 35 38
    39 40 41 42 43 44 45 46 47
T (65)
    on left: 52 53 54 55 56 57, on right: 31 32


State 0

    0 $accept: . program $end

    IF              shift, and go to state 1
    WHILE           shift, and go to state 2
    T_CHAR          shift, and go to state 3
    T_INT           shift, and go to state 4
    T_STRING        shift, and go to state 5
    T_BOOL          shift, and go to state 6
    T_INT_POINTER   shift, and go to state 7
    T_CHAR_POINTER  shift, and go to state 8
    PRINTF          shift, and go to state 9
    SCANF           shift, and go to state 10
    SEMICOLON       shift, and go to state 11
    LBRACE          shift, and go to state 12
    IDENTIFIER      shift, and go to state 13

    program      go to state 14
    statements   go to state 15
    statement    go to state 16
    printf       go to state 17
    scanf        go to state 18
    while        go to state 19
    if_else      go to state 20
    declaration  go to state 21
    assign       go to state 22
    T            go to state 23


State 1

   17 if_else: IF . bool_statements statements ELSE statements
   18        | IF . bool_statements statement

    LPAREN      shift, and go to state 24
    IDENTIFIER  shift, and go to state 25
    INTEGER     shift, and go to state 26
    CHAR        shift, and go to state 27
    STRING      shift, and go to state 28
    ADD         shift, and go to state 29
    SUB         shift, and go to state 30
    NOT         shift, and go to state 31

    bool_statements  go to state 32
    bool_statement   go to state 33
    expr             go to state 34


State 2

   16 while: WHILE . bool_statements statements

    LPAREN      shift, and go to state 24
    IDENTIFIER  shift, and go to state 25
    INTEGER     shift, and go to state 26
    CHAR        shift, and go to state 27
    STRING      shift, and go to state 28
    ADD         shift, and go to state 29
    SUB         shift, and go to state 30
    NOT         shift, and go to state 31

    bool_statements  go to state 35
    bool_statement   go to state 33
    expr             go to state 34


State 3

   53 T: T_CHAR .

    $default  reduce using rule 53 (T)


State 4

   52 T: T_INT .

    $default  reduce using rule 52 (T)


State 5

   55 T: T_STRING .

    $default  reduce using rule 55 (T)


State 6

   54 T: T_BOOL .

    $default  reduce using rule 54 (T)


State 7

   56 T: T_INT_POINTER .

    $default  reduce using rule 56 (T)


State 8

   57 T: T_CHAR_POINTER .

    $default  reduce using rule 57 (T)


State 9

   13 printf: PRINTF . LPAREN STRING RPAREN
   14       | PRINTF . LPAREN STRING COMMA exprs RPAREN

    LPAREN  shift, and go to state 36


State 10

   15 scanf: SCANF . LPAREN STRING COMMA idlist RPAREN

    LPAREN  shift, and go to state 37


State 11

    6 statement: SEMICOLON .

    $default  reduce using rule 6 (statement)


State 12

    4 statements: LBRACE . statements RBRACE
    5           | LBRACE . RBRACE

    IF              shift, and go to state 1
    WHILE           shift, and go to state 2
    T_CHAR          shift, and go to state 3
    T_INT           shift, and go to state 4
    T_STRING        shift, and go to state 5
    T_BOOL          shift, and go to state 6
    T_INT_POINTER   shift, and go to state 7
    T_CHAR_POINTER  shift, and go to state 8
    PRINTF          shift, and go to state 9
    SCANF           shift, and go to state 10
    SEMICOLON       shift, and go to state 11
    LBRACE          shift, and go to state 12
    RBRACE          shift, and go to state 38
    IDENTIFIER      shift, and go to state 13

    statements   go to state 39
    statement    go to state 16
    printf       go to state 17
    scanf        go to state 18
    while        go to state 19
    if_else      go to state 20
    declaration  go to state 21
    assign       go to state 22
    T            go to state 23


State 13

   35 assign: IDENTIFIER . LOP_ASSIGN expr

    LOP_ASSIGN  shift, and go to state 40


State 14

    0 $accept: program . $end

    $end  shift, and go to state 41


State 15

    1 program: statements .
    3 statements: statements . statement

    IF              shift, and go to state 1
    WHILE           shift, and go to state 2
    T_CHAR          shift, and go to state 3
    T_INT           shift, and go to state 4
    T_STRING        shift, and go to state 5
    T_BOOL          shift, and go to state 6
    T_INT_POINTER   shift, and go to state 7
    T_CHAR_POINTER  shift, and go to state 8
    PRINTF          shift, and go to state 9
    SCANF           shift, and go to state 10
    SEMICOLON       shift, and go to state 11
    IDENTIFIER      shift, and go to state 13

    $default  reduce using rule 1 (program)

    statement    go to state 42
    printf       go to state 17
    scanf        go to state 18
    while        go to state 19
    if_else      go to state 20
    declaration  go to state 21
    assign       go to state 22
    T            go to state 23


State 16

    2 statements: statement .

    $default  reduce using rule 2 (statements)


State 17

   11 statement: printf . SEMICOLON

    SEMICOLON  shift, and go to state 43


State 18

   12 statement: scanf . SEMICOLON

    SEMICOLON  shift, and go to state 44


State 19

   10 statement: while .

    $default  reduce using rule 10 (statement)


State 20

    9 statement: if_else .

    $default  reduce using rule 9 (statement)


State 21

    7 statement: declaration . SEMICOLON

    SEMICOLON  shift, and go to state 45


State 22

    8 statement: assign . SEMICOLON

    SEMICOLON  shift, and go to state 46


State 23

   31 declaration: T . assigns
   32            | T . idlist

    IDENTIFIER  shift, and go to state 47

    assigns  go to state 48
    assign   go to state 49
    idlist   go to state 50


State 24

   19 bool_statements: LPAREN . bool_statements RPAREN
   40 expr: LPAREN . expr RPAREN

    LPAREN      shift, and go to state 24
    IDENTIFIER  shift, and go to state 25
    INTEGER     shift, and go to state 26
    CHAR        shift, and go to state 27
    STRING      shift, and go to state 28
    ADD         shift, and go to state 29
    SUB         shift, and go to state 30
    NOT         shift, and go to state 31

    bool_statements  go to state 51
    bool_statement   go to state 33
    expr             go to state 52


State 25

   48 expr: IDENTIFIER .

    $default  reduce using rule 48 (expr)


State 26

   49 expr: INTEGER .

    $default  reduce using rule 49 (expr)


State 27

   50 expr: CHAR .

    $default  reduce using rule 50 (expr)


State 28

   51 expr: STRING .

    $default  reduce using rule 51 (expr)


State 29

   44 expr: ADD . expr

    LPAREN      shift, and go to state 53
    IDENTIFIER  shift, and go to state 25
    INTEGER     shift, and go to state 26
    CHAR        shift, and go to state 27
    STRING      shift, and go to state 28
    ADD         shift, and go to state 29
    SUB         shift, and go to state 30

    expr  go to state 54


State 30

   43 expr: SUB . expr

    LPAREN      shift, and go to state 53
    IDENTIFIER  shift, and go to state 25
    INTEGER     shift, and go to state 26
    CHAR        shift, and go to state 27
    STRING      shift, and go to state 28
    ADD         shift, and go to state 29
    SUB         shift, and go to state 30

    expr  go to state 55


State 31

   22 bool_statements: NOT . bool_statements

    LPAREN      shift, and go to state 24
    IDENTIFIER  shift, and go to state 25
    INTEGER     shift, and go to state 26
    CHAR        shift, and go to state 27
    STRING      shift, and go to state 28
    ADD         shift, and go to state 29
    SUB         shift, and go to state 30
    NOT         shift, and go to state 31

    bool_statements  go to state 56
    bool_statement   go to state 33
    expr             go to state 34


State 32

   17 if_else: IF bool_statements . statements ELSE statements
   18        | IF bool_statements . statement
   20 bool_statements: bool_statements . AND bool_statements
   21                | bool_statements . OR bool_statements

    IF              shift, and go to state 1
    WHILE           shift, and go to state 2
    T_CHAR          shift, and go to state 3
    T_INT           shift, and go to state 4
    T_STRING        shift, and go to state 5
    T_BOOL          shift, and go to state 6
    T_INT_POINTER   shift, and go to state 7
    T_CHAR_POINTER  shift, and go to state 8
    PRINTF          shift, and go to state 9
    SCANF           shift, and go to state 10
    SEMICOLON       shift, and go to state 11
    LBRACE          shift, and go to state 12
    IDENTIFIER      shift, and go to state 13
    OR              shift, and go to state 57
    AND             shift, and go to state 58

    statements   go to state 59
    statement    go to state 60
    printf       go to state 17
    scanf        go to state 18
    while        go to state 19
    if_else      go to state 20
    declaration  go to state 21
    assign       go to state 22
    T            go to state 23


State 33

   23 bool_statements: bool_statement .
   25 bool_statement: bool_statement . GREAT bool_statement
   26               | bool_statement . LESS bool_statement
   27               | bool_statement . GREAT_EQ bool_statement
   28               | bool_statement . LESS_EQ bool_statement
   29               | bool_statement . LOP_EQ bool_statement
   30               | bool_statement . NOT_EQ bool_statement

    LOP_EQ    shift, and go to state 61
    GREAT     shift, and go to state 62
    LESS      shift, and go to state 63
    GREAT_EQ  shift, and go to state 64
    LESS_EQ   shift, and go to state 65
    NOT_EQ    shift, and go to state 66

    $default  reduce using rule 23 (bool_statements)


State 34

   24 bool_statement: expr .
   41 expr: expr . ADD expr
   42     | expr . SUB expr
   45     | expr . MUL expr
   46     | expr . DIV expr
   47     | expr . MOD expr

    ADD  shift, and go to state 67
    SUB  shift, and go to state 68
    MUL  shift, and go to state 69
    DIV  shift, and go to state 70
    MOD  shift, and go to state 71

    $default  reduce using rule 24 (bool_statement)


State 35

   16 while: WHILE bool_statements . statements
   20 bool_statements: bool_statements . AND bool_statements
   21                | bool_statements . OR bool_statements

    IF              shift, and go to state 1
    WHILE           shift, and go to state 2
    T_CHAR          shift, and go to state 3
    T_INT           shift, and go to state 4
    T_STRING        shift, and go to state 5
    T_BOOL          shift, and go to state 6
    T_INT_POINTER   shift, and go to state 7
    T_CHAR_POINTER  shift, and go to state 8
    PRINTF          shift, and go to state 9
    SCANF           shift, and go to state 10
    SEMICOLON       shift, and go to state 11
    LBRACE          shift, and go to state 12
    IDENTIFIER      shift, and go to state 13
    OR              shift, and go to state 57
    AND             shift, and go to state 58

    statements   go to state 72
    statement    go to state 16
    printf       go to state 17
    scanf        go to state 18
    while        go to state 19
    if_else      go to state 20
    declaration  go to state 21
    assign       go to state 22
    T            go to state 23


State 36

   13 printf: PRINTF LPAREN . STRING RPAREN
   14       | PRINTF LPAREN . STRING COMMA exprs RPAREN

    STRING  shift, and go to state 73


State 37

   15 scanf: SCANF LPAREN . STRING COMMA idlist RPAREN

    STRING  shift, and go to state 74


State 38

    5 statements: LBRACE RBRACE .

    $default  reduce using rule 5 (statements)


State 39

    3 statements: statements . statement
    4           | LBRACE statements . RBRACE

    IF              shift, and go to state 1
    WHILE           shift, and go to state 2
    T_CHAR          shift, and go to state 3
    T_INT           shift, and go to state 4
    T_STRING        shift, and go to state 5
    T_BOOL          shift, and go to state 6
    T_INT_POINTER   shift, and go to state 7
    T_CHAR_POINTER  shift, and go to state 8
    PRINTF          shift, and go to state 9
    SCANF           shift, and go to state 10
    SEMICOLON       shift, and go to state 11
    RBRACE          shift, and go to state 75
    IDENTIFIER      shift, and go to state 13

    statement    go to state 42
    printf       go to state 17
    scanf        go to state 18
    while        go to state 19
    if_else      go to state 20
    declaration  go to state 21
    assign       go to state 22
    T            go to state 23


State 40

   35 assign: IDENTIFIER LOP_ASSIGN . expr

    LPAREN      shift, and go to state 53
    IDENTIFIER  shift, and go to state 25
    INTEGER     shift, and go to state 26
    CHAR        shift, and go to state 27
    STRING      shift, and go to state 28
    ADD         shift, and go to state 29
    SUB         shift, and go to state 30

    expr  go to state 76


State 41

    0 $accept: program $end .

    $default  accept


State 42

    3 statements: statements statement .

    $default  reduce using rule 3 (statements)


State 43

   11 statement: printf SEMICOLON .

    $default  reduce using rule 11 (statement)


State 44

   12 statement: scanf SEMICOLON .

    $default  reduce using rule 12 (statement)


State 45

    7 statement: declaration SEMICOLON .

    $default  reduce using rule 7 (statement)


State 46

    8 statement: assign SEMICOLON .

    $default  reduce using rule 8 (statement)


State 47

   35 assign: IDENTIFIER . LOP_ASSIGN expr
   37 idlist: IDENTIFIER .

    LOP_ASSIGN  shift, and go to state 40

    $default  reduce using rule 37 (idlist)


State 48

   31 declaration: T assigns .
   33 assigns: assigns . COMMA assign

    COMMA  shift, and go to state 77

    $default  reduce using rule 31 (declaration)


State 49

   34 assigns: assign .

    $default  reduce using rule 34 (assigns)


State 50

   32 declaration: T idlist .
   36 idlist: idlist . COMMA IDENTIFIER

    COMMA  shift, and go to state 78

    $default  reduce using rule 32 (declaration)


State 51

   19 bool_statements: LPAREN bool_statements . RPAREN
   20                | bool_statements . AND bool_statements
   21                | bool_statements . OR bool_statements

    RPAREN  shift, and go to state 79
    OR      shift, and go to state 57
    AND     shift, and go to state 58


State 52

   24 bool_statement: expr .
   40 expr: LPAREN expr . RPAREN
   41     | expr . ADD expr
   42     | expr . SUB expr
   45     | expr . MUL expr
   46     | expr . DIV expr
   47     | expr . MOD expr

    RPAREN  shift, and go to state 80
    ADD     shift, and go to state 67
    SUB     shift, and go to state 68
    MUL     shift, and go to state 69
    DIV     shift, and go to state 70
    MOD     shift, and go to state 71

    RPAREN    [reduce using rule 24 (bool_statement)]
    $default  reduce using rule 24 (bool_statement)


State 53

   40 expr: LPAREN . expr RPAREN

    LPAREN      shift, and go to state 53
    IDENTIFIER  shift, and go to state 25
    INTEGER     shift, and go to state 26
    CHAR        shift, and go to state 27
    STRING      shift, and go to state 28
    ADD         shift, and go to state 29
    SUB         shift, and go to state 30

    expr  go to state 81


State 54

   41 expr: expr . ADD expr
   42     | expr . SUB expr
   44     | ADD expr .
   45     | expr . MUL expr
   46     | expr . DIV expr
   47     | expr . MOD expr

    $default  reduce using rule 44 (expr)


State 55

   41 expr: expr . ADD expr
   42     | expr . SUB expr
   43     | SUB expr .
   45     | expr . MUL expr
   46     | expr . DIV expr
   47     | expr . MOD expr

    $default  reduce using rule 43 (expr)


State 56

   20 bool_statements: bool_statements . AND bool_statements
   21                | bool_statements . OR bool_statements
   22                | NOT bool_statements .

    $default  reduce using rule 22 (bool_statements)


State 57

   21 bool_statements: bool_statements OR . bool_statements

    LPAREN      shift, and go to state 24
    IDENTIFIER  shift, and go to state 25
    INTEGER     shift, and go to state 26
    CHAR        shift, and go to state 27
    STRING      shift, and go to state 28
    ADD         shift, and go to state 29
    SUB         shift, and go to state 30
    NOT         shift, and go to state 31

    bool_statements  go to state 82
    bool_statement   go to state 33
    expr             go to state 34


State 58

   20 bool_statements: bool_statements AND . bool_statements

    LPAREN      shift, and go to state 24
    IDENTIFIER  shift, and go to state 25
    INTEGER     shift, and go to state 26
    CHAR        shift, and go to state 27
    STRING      shift, and go to state 28
    ADD         shift, and go to state 29
    SUB         shift, and go to state 30
    NOT         shift, and go to state 31

    bool_statements  go to state 83
    bool_statement   go to state 33
    expr             go to state 34


State 59

    3 statements: statements . statement
   17 if_else: IF bool_statements statements . ELSE statements

    IF              shift, and go to state 1
    ELSE            shift, and go to state 84
    WHILE           shift, and go to state 2
    T_CHAR          shift, and go to state 3
    T_INT           shift, and go to state 4
    T_STRING        shift, and go to state 5
    T_BOOL          shift, and go to state 6
    T_INT_POINTER   shift, and go to state 7
    T_CHAR_POINTER  shift, and go to state 8
    PRINTF          shift, and go to state 9
    SCANF           shift, and go to state 10
    SEMICOLON       shift, and go to state 11
    IDENTIFIER      shift, and go to state 13

    statement    go to state 42
    printf       go to state 17
    scanf        go to state 18
    while        go to state 19
    if_else      go to state 20
    declaration  go to state 21
    assign       go to state 22
    T            go to state 23


State 60

    2 statements: statement .
   18 if_else: IF bool_statements statement .

    $end            reduce using rule 18 (if_else)
    IF              reduce using rule 2 (statements)
    IF              [reduce using rule 18 (if_else)]
    ELSE            reduce using rule 2 (statements)
    ELSE            [reduce using rule 18 (if_else)]
    WHILE           reduce using rule 2 (statements)
    WHILE           [reduce using rule 18 (if_else)]
    T_CHAR          reduce using rule 2 (statements)
    T_CHAR          [reduce using rule 18 (if_else)]
    T_INT           reduce using rule 2 (statements)
    T_INT           [reduce using rule 18 (if_else)]
    T_STRING        reduce using rule 2 (statements)
    T_STRING        [reduce using rule 18 (if_else)]
    T_BOOL          reduce using rule 2 (statements)
    T_BOOL          [reduce using rule 18 (if_else)]
    T_INT_POINTER   reduce using rule 2 (statements)
    T_INT_POINTER   [reduce using rule 18 (if_else)]
    T_CHAR_POINTER  reduce using rule 2 (statements)
    T_CHAR_POINTER  [reduce using rule 18 (if_else)]
    PRINTF          reduce using rule 2 (statements)
    PRINTF          [reduce using rule 18 (if_else)]
    SCANF           reduce using rule 2 (statements)
    SCANF           [reduce using rule 18 (if_else)]
    SEMICOLON       reduce using rule 2 (statements)
    SEMICOLON       [reduce using rule 18 (if_else)]
    RBRACE          reduce using rule 18 (if_else)
    IDENTIFIER      reduce using rule 2 (statements)
    IDENTIFIER      [reduce using rule 18 (if_else)]
    $default        reduce using rule 2 (statements)


State 61

   29 bool_statement: bool_statement LOP_EQ . bool_statement

    LPAREN      shift, and go to state 53
    IDENTIFIER  shift, and go to state 25
    INTEGER     shift, and go to state 26
    CHAR        shift, and go to state 27
    STRING      shift, and go to state 28
    ADD         shift, and go to state 29
    SUB         shift, and go to state 30

    bool_statement  go to state 85
    expr            go to state 34


State 62

   25 bool_statement: bool_statement GREAT . bool_statement

    LPAREN      shift, and go to state 53
    IDENTIFIER  shift, and go to state 25
    INTEGER     shift, and go to state 26
    CHAR        shift, and go to state 27
    STRING      shift, and go to state 28
    ADD         shift, and go to state 29
    SUB         shift, and go to state 30

    bool_statement  go to state 86
    expr            go to state 34


State 63

   26 bool_statement: bool_statement LESS . bool_statement

    LPAREN      shift, and go to state 53
    IDENTIFIER  shift, and go to state 25
    INTEGER     shift, and go to state 26
    CHAR        shift, and go to state 27
    STRING      shift, and go to state 28
    ADD         shift, and go to state 29
    SUB         shift, and go to state 30

    bool_statement  go to state 87
    expr            go to state 34


State 64

   27 bool_statement: bool_statement GREAT_EQ . bool_statement

    LPAREN      shift, and go to state 53
    IDENTIFIER  shift, and go to state 25
    INTEGER     shift, and go to state 26
    CHAR        shift, and go to state 27
    STRING      shift, and go to state 28
    ADD         shift, and go to state 29
    SUB         shift, and go to state 30

    bool_statement  go to state 88
    expr            go to state 34


State 65

   28 bool_statement: bool_statement LESS_EQ . bool_statement

    LPAREN      shift, and go to state 53
    IDENTIFIER  shift, and go to state 25
    INTEGER     shift, and go to state 26
    CHAR        shift, and go to state 27
    STRING      shift, and go to state 28
    ADD         shift, and go to state 29
    SUB         shift, and go to state 30

    bool_statement  go to state 89
    expr            go to state 34


State 66

   30 bool_statement: bool_statement NOT_EQ . bool_statement

    LPAREN      shift, and go to state 53
    IDENTIFIER  shift, and go to state 25
    INTEGER     shift, and go to state 26
    CHAR        shift, and go to state 27
    STRING      shift, and go to state 28
    ADD         shift, and go to state 29
    SUB         shift, and go to state 30

    bool_statement  go to state 90
    expr            go to state 34


State 67

   41 expr: expr ADD . expr

    LPAREN      shift, and go to state 53
    IDENTIFIER  shift, and go to state 25
    INTEGER     shift, and go to state 26
    CHAR        shift, and go to state 27
    STRING      shift, and go to state 28
    ADD         shift, and go to state 29
    SUB         shift, and go to state 30

    expr  go to state 91


State 68

   42 expr: expr SUB . expr

    LPAREN      shift, and go to state 53
    IDENTIFIER  shift, and go to state 25
    INTEGER     shift, and go to state 26
    CHAR        shift, and go to state 27
    STRING      shift, and go to state 28
    ADD         shift, and go to state 29
    SUB         shift, and go to state 30

    expr  go to state 92


State 69

   45 expr: expr MUL . expr

    LPAREN      shift, and go to state 53
    IDENTIFIER  shift, and go to state 25
    INTEGER     shift, and go to state 26
    CHAR        shift, and go to state 27
    STRING      shift, and go to state 28
    ADD         shift, and go to state 29
    SUB         shift, and go to state 30

    expr  go to state 93


State 70

   46 expr: expr DIV . expr

    LPAREN      shift, and go to state 53
    IDENTIFIER  shift, and go to state 25
    INTEGER     shift, and go to state 26
    CHAR        shift, and go to state 27
    STRING      shift, and go to state 28
    ADD         shift, and go to state 29
    SUB         shift, and go to state 30

    expr  go to state 94


State 71

   47 expr: expr MOD . expr

    LPAREN      shift, and go to state 53
    IDENTIFIER  shift, and go to state 25
    INTEGER     shift, and go to state 26
    CHAR        shift, and go to state 27
    STRING      shift, and go to state 28
    ADD         shift, and go to state 29
    SUB         shift, and go to state 30

    expr  go to state 95


State 72

    3 statements: statements . statement
   16 while: WHILE bool_statements statements .

    IF              shift, and go to state 1
    WHILE           shift, and go to state 2
    T_CHAR          shift, and go to state 3
    T_INT           shift, and go to state 4
    T_STRING        shift, and go to state 5
    T_BOOL          shift, and go to state 6
    T_INT_POINTER   shift, and go to state 7
    T_CHAR_POINTER  shift, and go to state 8
    PRINTF          shift, and go to state 9
    SCANF           shift, and go to state 10
    SEMICOLON       shift, and go to state 11
    IDENTIFIER      shift, and go to state 13

    IF              [reduce using rule 16 (while)]
    WHILE           [reduce using rule 16 (while)]
    T_CHAR          [reduce using rule 16 (while)]
    T_INT           [reduce using rule 16 (while)]
    T_STRING        [reduce using rule 16 (while)]
    T_BOOL          [reduce using rule 16 (while)]
    T_INT_POINTER   [reduce using rule 16 (while)]
    T_CHAR_POINTER  [reduce using rule 16 (while)]
    PRINTF          [reduce using rule 16 (while)]
    SCANF           [reduce using rule 16 (while)]
    SEMICOLON       [reduce using rule 16 (while)]
    IDENTIFIER      [reduce using rule 16 (while)]
    $default        reduce using rule 16 (while)

    statement    go to state 42
    printf       go to state 17
    scanf        go to state 18
    while        go to state 19
    if_else      go to state 20
    declaration  go to state 21
    assign       go to state 22
    T            go to state 23


State 73

   13 printf: PRINTF LPAREN STRING . RPAREN
   14       | PRINTF LPAREN STRING . COMMA exprs RPAREN

    COMMA   shift, and go to state 96
    RPAREN  shift, and go to state 97


State 74

   15 scanf: SCANF LPAREN STRING . COMMA idlist RPAREN

    COMMA  shift, and go to state 98


State 75

    4 statements: LBRACE statements RBRACE .

    $default  reduce using rule 4 (statements)


State 76

   35 assign: IDENTIFIER LOP_ASSIGN expr .
   41 expr: expr . ADD expr
   42     | expr . SUB expr
   45     | expr . MUL expr
   46     | expr . DIV expr
   47     | expr . MOD expr

    ADD  shift, and go to state 67
    SUB  shift, and go to state 68
    MUL  shift, and go to state 69
    DIV  shift, and go to state 70
    MOD  shift, and go to state 71

    $default  reduce using rule 35 (assign)


State 77

   33 assigns: assigns COMMA . assign

    IDENTIFIER  shift, and go to state 13

    assign  go to state 99


State 78

   36 idlist: idlist COMMA . IDENTIFIER

    IDENTIFIER  shift, and go to state 100


State 79

   19 bool_statements: LPAREN bool_statements RPAREN .

    $default  reduce using rule 19 (bool_statements)


State 80

   40 expr: LPAREN expr RPAREN .

    $default  reduce using rule 40 (expr)


State 81

   40 expr: LPAREN expr . RPAREN
   41     | expr . ADD expr
   42     | expr . SUB expr
   45     | expr . MUL expr
   46     | expr . DIV expr
   47     | expr . MOD expr

    RPAREN  shift, and go to state 80
    ADD     shift, and go to state 67
    SUB     shift, and go to state 68
    MUL     shift, and go to state 69
    DIV     shift, and go to state 70
    MOD     shift, and go to state 71


State 82

   20 bool_statements: bool_statements . AND bool_statements
   21                | bool_statements . OR bool_statements
   21                | bool_statements OR bool_statements .

    AND  shift, and go to state 58

    $default  reduce using rule 21 (bool_statements)


State 83

   20 bool_statements: bool_statements . AND bool_statements
   20                | bool_statements AND bool_statements .
   21                | bool_statements . OR bool_statements

    $default  reduce using rule 20 (bool_statements)


State 84

   17 if_else: IF bool_statements statements ELSE . statements

    IF              shift, and go to state 1
    WHILE           shift, and go to state 2
    T_CHAR          shift, and go to state 3
    T_INT           shift, and go to state 4
    T_STRING        shift, and go to state 5
    T_BOOL          shift, and go to state 6
    T_INT_POINTER   shift, and go to state 7
    T_CHAR_POINTER  shift, and go to state 8
    PRINTF          shift, and go to state 9
    SCANF           shift, and go to state 10
    SEMICOLON       shift, and go to state 11
    LBRACE          shift, and go to state 12
    IDENTIFIER      shift, and go to state 13

    statements   go to state 101
    statement    go to state 16
    printf       go to state 17
    scanf        go to state 18
    while        go to state 19
    if_else      go to state 20
    declaration  go to state 21
    assign       go to state 22
    T            go to state 23


State 85

   25 bool_statement: bool_statement . GREAT bool_statement
   26               | bool_statement . LESS bool_statement
   27               | bool_statement . GREAT_EQ bool_statement
   28               | bool_statement . LESS_EQ bool_statement
   29               | bool_statement . LOP_EQ bool_statement
   29               | bool_statement LOP_EQ bool_statement .
   30               | bool_statement . NOT_EQ bool_statement

    $default  reduce using rule 29 (bool_statement)


State 86

   25 bool_statement: bool_statement . GREAT bool_statement
   25               | bool_statement GREAT bool_statement .
   26               | bool_statement . LESS bool_statement
   27               | bool_statement . GREAT_EQ bool_statement
   28               | bool_statement . LESS_EQ bool_statement
   29               | bool_statement . LOP_EQ bool_statement
   30               | bool_statement . NOT_EQ bool_statement

    $default  reduce using rule 25 (bool_statement)


State 87

   25 bool_statement: bool_statement . GREAT bool_statement
   26               | bool_statement . LESS bool_statement
   26               | bool_statement LESS bool_statement .
   27               | bool_statement . GREAT_EQ bool_statement
   28               | bool_statement . LESS_EQ bool_statement
   29               | bool_statement . LOP_EQ bool_statement
   30               | bool_statement . NOT_EQ bool_statement

    $default  reduce using rule 26 (bool_statement)


State 88

   25 bool_statement: bool_statement . GREAT bool_statement
   26               | bool_statement . LESS bool_statement
   27               | bool_statement . GREAT_EQ bool_statement
   27               | bool_statement GREAT_EQ bool_statement .
   28               | bool_statement . LESS_EQ bool_statement
   29               | bool_statement . LOP_EQ bool_statement
   30               | bool_statement . NOT_EQ bool_statement

    $default  reduce using rule 27 (bool_statement)


State 89

   25 bool_statement: bool_statement . GREAT bool_statement
   26               | bool_statement . LESS bool_statement
   27               | bool_statement . GREAT_EQ bool_statement
   28               | bool_statement . LESS_EQ bool_statement
   28               | bool_statement LESS_EQ bool_statement .
   29               | bool_statement . LOP_EQ bool_statement
   30               | bool_statement . NOT_EQ bool_statement

    $default  reduce using rule 28 (bool_statement)


State 90

   25 bool_statement: bool_statement . GREAT bool_statement
   26               | bool_statement . LESS bool_statement
   27               | bool_statement . GREAT_EQ bool_statement
   28               | bool_statement . LESS_EQ bool_statement
   29               | bool_statement . LOP_EQ bool_statement
   30               | bool_statement . NOT_EQ bool_statement
   30               | bool_statement NOT_EQ bool_statement .

    $default  reduce using rule 30 (bool_statement)


State 91

   41 expr: expr . ADD expr
   41     | expr ADD expr .
   42     | expr . SUB expr
   45     | expr . MUL expr
   46     | expr . DIV expr
   47     | expr . MOD expr

    MUL  shift, and go to state 69
    DIV  shift, and go to state 70
    MOD  shift, and go to state 71

    $default  reduce using rule 41 (expr)


State 92

   41 expr: expr . ADD expr
   42     | expr . SUB expr
   42     | expr SUB expr .
   45     | expr . MUL expr
   46     | expr . DIV expr
   47     | expr . MOD expr

    MUL  shift, and go to state 69
    DIV  shift, and go to state 70
    MOD  shift, and go to state 71

    $default  reduce using rule 42 (expr)


State 93

   41 expr: expr . ADD expr
   42     | expr . SUB expr
   45     | expr . MUL expr
   45     | expr MUL expr .
   46     | expr . DIV expr
   47     | expr . MOD expr

    $default  reduce using rule 45 (expr)


State 94

   41 expr: expr . ADD expr
   42     | expr . SUB expr
   45     | expr . MUL expr
   46     | expr . DIV expr
   46     | expr DIV expr .
   47     | expr . MOD expr

    $default  reduce using rule 46 (expr)


State 95

   41 expr: expr . ADD expr
   42     | expr . SUB expr
   45     | expr . MUL expr
   46     | expr . DIV expr
   47     | expr . MOD expr
   47     | expr MOD expr .

    $default  reduce using rule 47 (expr)


State 96

   14 printf: PRINTF LPAREN STRING COMMA . exprs RPAREN

    LPAREN      shift, and go to state 53
    IDENTIFIER  shift, and go to state 25
    INTEGER     shift, and go to state 26
    CHAR        shift, and go to state 27
    STRING      shift, and go to state 28
    ADD         shift, and go to state 29
    SUB         shift, and go to state 30

    exprs  go to state 102
    expr   go to state 103


State 97

   13 printf: PRINTF LPAREN STRING RPAREN .

    $default  reduce using rule 13 (printf)


State 98

   15 scanf: SCANF LPAREN STRING COMMA . idlist RPAREN

    IDENTIFIER  shift, and go to state 104

    idlist  go to state 105


State 99

   33 assigns: assigns COMMA assign .

    $default  reduce using rule 33 (assigns)


State 100

   36 idlist: idlist COMMA IDENTIFIER .

    $default  reduce using rule 36 (idlist)


State 101

    3 statements: statements . statement
   17 if_else: IF bool_statements statements ELSE statements .

    IF              shift, and go to state 1
    WHILE           shift, and go to state 2
    T_CHAR          shift, and go to state 3
    T_INT           shift, and go to state 4
    T_STRING        shift, and go to state 5
    T_BOOL          shift, and go to state 6
    T_INT_POINTER   shift, and go to state 7
    T_CHAR_POINTER  shift, and go to state 8
    PRINTF          shift, and go to state 9
    SCANF           shift, and go to state 10
    SEMICOLON       shift, and go to state 11
    IDENTIFIER      shift, and go to state 13

    IF              [reduce using rule 17 (if_else)]
    WHILE           [reduce using rule 17 (if_else)]
    T_CHAR          [reduce using rule 17 (if_else)]
    T_INT           [reduce using rule 17 (if_else)]
    T_STRING        [reduce using rule 17 (if_else)]
    T_BOOL          [reduce using rule 17 (if_else)]
    T_INT_POINTER   [reduce using rule 17 (if_else)]
    T_CHAR_POINTER  [reduce using rule 17 (if_else)]
    PRINTF          [reduce using rule 17 (if_else)]
    SCANF           [reduce using rule 17 (if_else)]
    SEMICOLON       [reduce using rule 17 (if_else)]
    IDENTIFIER      [reduce using rule 17 (if_else)]
    $default        reduce using rule 17 (if_else)

    statement    go to state 42
    printf       go to state 17
    scanf        go to state 18
    while        go to state 19
    if_else      go to state 20
    declaration  go to state 21
    assign       go to state 22
    T            go to state 23


State 102

   14 printf: PRINTF LPAREN STRING COMMA exprs . RPAREN
   38 exprs: exprs . COMMA expr

    COMMA   shift, and go to state 106
    RPAREN  shift, and go to state 107


State 103

   39 exprs: expr .
   41 expr: expr . ADD expr
   42     | expr . SUB expr
   45     | expr . MUL expr
   46     | expr . DIV expr
   47     | expr . MOD expr

    ADD  shift, and go to state 67
    SUB  shift, and go to state 68
    MUL  shift, and go to state 69
    DIV  shift, and go to state 70
    MOD  shift, and go to state 71

    $default  reduce using rule 39 (exprs)


State 104

   37 idlist: IDENTIFIER .

    $default  reduce using rule 37 (idlist)


State 105

   15 scanf: SCANF LPAREN STRING COMMA idlist . RPAREN
   36 idlist: idlist . COMMA IDENTIFIER

    COMMA   shift, and go to state 78
    RPAREN  shift, and go to state 108


State 106

   38 exprs: exprs COMMA . expr

    LPAREN      shift, and go to state 53
    IDENTIFIER  shift, and go to state 25
    INTEGER     shift, and go to state 26
    CHAR        shift, and go to state 27
    STRING      shift, and go to state 28
    ADD         shift, and go to state 29
    SUB         shift, and go to state 30

    expr  go to state 109


State 107

   14 printf: PRINTF LPAREN STRING COMMA exprs RPAREN .

    $default  reduce using rule 14 (printf)


State 108

   15 scanf: SCANF LPAREN STRING COMMA idlist RPAREN .

    $default  reduce using rule 15 (scanf)


State 109

   38 exprs: exprs COMMA expr .
   41 expr: expr . ADD expr
   42     | expr . SUB expr
   45     | expr . MUL expr
   46     | expr . DIV expr
   47     | expr . MOD expr

    ADD  shift, and go to state 67
    SUB  shift, and go to state 68
    MUL  shift, and go to state 69
    DIV  shift, and go to state 70
    MOD  shift, and go to state 71

    $default  reduce using rule 38 (exprs)

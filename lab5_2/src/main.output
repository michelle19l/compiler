Terminals unused in grammar

   FOR
   RETURN
   POINT
   LBRACK
   RBRACK
   BOOL
   GET_VALUE


State 52 conflicts: 1 shift/reduce
State 60 conflicts: 13 reduce/reduce
State 72 conflicts: 12 shift/reduce
State 101 conflicts: 12 shift/reduce


Grammar

    0 $accept: program $end

    1 program: statements

    2 statements: statement
    3           | statements statement
    4           | LBRACE statements RBRACE
    5           | LBRACE RBRACE

    6 statement: SEMICOLON
    7          | declaration SEMICOLON
    8          | assign SEMICOLON
    9          | if_else
   10          | while
   11          | printf SEMICOLON
   12          | scanf SEMICOLON

   13 printf: PRINTF LPAREN STRING RPAREN
   14       | PRINTF LPAREN STRING COMMA exprs RPAREN

   15 scanf: SCANF LPAREN STRING COMMA address_idlist RPAREN

   16 address_idlist: address_idlist COMMA get_address_id
   17               | get_address_id

   18 get_address_id: GET_ADDRESS IDENTIFIER

   19 while: WHILE bool_statements statements

   20 if_else: IF bool_statements statements ELSE statements
   21        | IF bool_statements statement

   22 bool_statements: LPAREN bool_statements RPAREN
   23                | bool_statements AND bool_statements
   24                | bool_statements OR bool_statements
   25                | NOT bool_statements
   26                | bool_statement

   27 bool_statement: expr
   28               | bool_statement GREAT bool_statement
   29               | bool_statement LESS bool_statement
   30               | bool_statement GREAT_EQ bool_statement
   31               | bool_statement LESS_EQ bool_statement
   32               | bool_statement LOP_EQ bool_statement
   33               | bool_statement NOT_EQ bool_statement

   34 declaration: T assigns
   35            | T idlist

   36 assigns: assigns COMMA assign
   37        | assign

   38 assign: IDENTIFIER LOP_ASSIGN expr

   39 idlist: idlist COMMA IDENTIFIER
   40       | IDENTIFIER

   41 exprs: exprs COMMA expr
   42      | expr

   43 expr: LPAREN expr RPAREN
   44     | expr ADD expr
   45     | expr SUB expr
   46     | SUB expr
   47     | ADD expr
   48     | expr MUL expr
   49     | expr DIV expr
   50     | expr MOD expr
   51     | IDENTIFIER
   52     | INTEGER
   53     | CHAR
   54     | STRING

   55 T: T_INT
   56  | T_CHAR
   57  | T_BOOL
   58  | T_STRING
   59  | T_INT_POINTER
   60  | T_CHAR_POINTER


Terminals, with rules where they appear

$end (0) 0
error (256)
IF (258) 20 21
ELSE (259) 20
WHILE (260) 19
FOR (261)
RETURN (262)
T_CHAR (263) 56
T_INT (264) 55
T_STRING (265) 58
T_BOOL (266) 57
T_INT_POINTER (267) 59
T_CHAR_POINTER (268) 60
PRINTF (269) 13 14
SCANF (270) 15
LOP_ASSIGN (271) 38
SEMICOLON (272) 6 7 8 11 12
COMMA (273) 14 15 16 36 39 41
POINT (274)
LPAREN (275) 13 14 15 22 43
RPAREN (276) 13 14 15 22 43
LBRACK (277)
RBRACK (278)
LBRACE (279) 4 5
RBRACE (280) 4 5
IDENTIFIER (281) 18 38 39 40 51
INTEGER (282) 52
CHAR (283) 53
BOOL (284)
STRING (285) 13 14 15 54
LOP_EQ (286) 32
GREAT (287) 28
LESS (288) 29
GREAT_EQ (289) 30
LESS_EQ (290) 31
NOT_EQ (291) 33
ADD (292) 44 47
SUB (293) 45 46
MUL (294) 48
DIV (295) 49
MOD (296) 50
OR (297) 24
AND (298) 23
NOT (299) 25
NEG (300)
POS (301)
GET_ADDRESS (302) 18
GET_VALUE (303)


Nonterminals, with rules where they appear

$accept (49)
    on left: 0
program (50)
    on left: 1, on right: 0
statements (51)
    on left: 2 3 4 5, on right: 1 3 4 19 20
statement (52)
    on left: 6 7 8 9 10 11 12, on right: 2 3 21
printf (53)
    on left: 13 14, on right: 11
scanf (54)
    on left: 15, on right: 12
address_idlist (55)
    on left: 16 17, on right: 15 16
get_address_id (56)
    on left: 18, on right: 16 17
while (57)
    on left: 19, on right: 10
if_else (58)
    on left: 20 21, on right: 9
bool_statements (59)
    on left: 22 23 24 25 26, on right: 19 20 21 22 23 24 25
bool_statement (60)
    on left: 27 28 29 30 31 32 33, on right: 26 28 29 30 31 32 33
declaration (61)
    on left: 34 35, on right: 7
assigns (62)
    on left: 36 37, on right: 34 36
assign (63)
    on left: 38, on right: 8 36 37
idlist (64)
    on left: 39 40, on right: 35 39
exprs (65)
    on left: 41 42, on right: 14 41
expr (66)
    on left: 43 44 45 46 47 48 49 50 51 52 53 54, on right: 27 38 41
    42 43 44 45 46 47 48 49 50
T (67)
    on left: 55 56 57 58 59 60, on right: 34 35


State 0

    0 $accept: . program $end

    IF              shift, and go to state 1
    WHILE           shift, and go to state 2
    T_CHAR          shift, and go to state 3
    T_INT           shift, and go to state 4
    T_STRING        shift, and go to state 5
    T_BOOL          shift, and go to state 6
    T_INT_POINTER   shift, and go to state 7
    T_CHAR_POINTER  shift, and go to state 8
    PRINTF          shift, and go to state 9
    SCANF           shift, and go to state 10
    SEMICOLON       shift, and go to state 11
    LBRACE          shift, and go to state 12
    IDENTIFIER      shift, and go to state 13

    program      go to state 14
    statements   go to state 15
    statement    go to state 16
    printf       go to state 17
    scanf        go to state 18
    while        go to state 19
    if_else      go to state 20
    declaration  go to state 21
    assign       go to state 22
    T            go to state 23


State 1

   20 if_else: IF . bool_statements statements ELSE statements
   21        | IF . bool_statements statement

    LPAREN      shift, and go to state 24
    IDENTIFIER  shift, and go to state 25
    INTEGER     shift, and go to state 26
    CHAR        shift, and go to state 27
    STRING      shift, and go to state 28
    ADD         shift, and go to state 29
    SUB         shift, and go to state 30
    NOT         shift, and go to state 31

    bool_statements  go to state 32
    bool_statement   go to state 33
    expr             go to state 34


State 2

   19 while: WHILE . bool_statements statements

    LPAREN      shift, and go to state 24
    IDENTIFIER  shift, and go to state 25
    INTEGER     shift, and go to state 26
    CHAR        shift, and go to state 27
    STRING      shift, and go to state 28
    ADD         shift, and go to state 29
    SUB         shift, and go to state 30
    NOT         shift, and go to state 31

    bool_statements  go to state 35
    bool_statement   go to state 33
    expr             go to state 34


State 3

   56 T: T_CHAR .

    $default  reduce using rule 56 (T)


State 4

   55 T: T_INT .

    $default  reduce using rule 55 (T)


State 5

   58 T: T_STRING .

    $default  reduce using rule 58 (T)


State 6

   57 T: T_BOOL .

    $default  reduce using rule 57 (T)


State 7

   59 T: T_INT_POINTER .

    $default  reduce using rule 59 (T)


State 8

   60 T: T_CHAR_POINTER .

    $default  reduce using rule 60 (T)


State 9

   13 printf: PRINTF . LPAREN STRING RPAREN
   14       | PRINTF . LPAREN STRING COMMA exprs RPAREN

    LPAREN  shift, and go to state 36


State 10

   15 scanf: SCANF . LPAREN STRING COMMA address_idlist RPAREN

    LPAREN  shift, and go to state 37


State 11

    6 statement: SEMICOLON .

    $default  reduce using rule 6 (statement)


State 12

    4 statements: LBRACE . statements RBRACE
    5           | LBRACE . RBRACE

    IF              shift, and go to state 1
    WHILE           shift, and go to state 2
    T_CHAR          shift, and go to state 3
    T_INT           shift, and go to state 4
    T_STRING        shift, and go to state 5
    T_BOOL          shift, and go to state 6
    T_INT_POINTER   shift, and go to state 7
    T_CHAR_POINTER  shift, and go to state 8
    PRINTF          shift, and go to state 9
    SCANF           shift, and go to state 10
    SEMICOLON       shift, and go to state 11
    LBRACE          shift, and go to state 12
    RBRACE          shift, and go to state 38
    IDENTIFIER      shift, and go to state 13

    statements   go to state 39
    statement    go to state 16
    printf       go to state 17
    scanf        go to state 18
    while        go to state 19
    if_else      go to state 20
    declaration  go to state 21
    assign       go to state 22
    T            go to state 23


State 13

   38 assign: IDENTIFIER . LOP_ASSIGN expr

    LOP_ASSIGN  shift, and go to state 40


State 14

    0 $accept: program . $end

    $end  shift, and go to state 41


State 15

    1 program: statements .
    3 statements: statements . statement

    IF              shift, and go to state 1
    WHILE           shift, and go to state 2
    T_CHAR          shift, and go to state 3
    T_INT           shift, and go to state 4
    T_STRING        shift, and go to state 5
    T_BOOL          shift, and go to state 6
    T_INT_POINTER   shift, and go to state 7
    T_CHAR_POINTER  shift, and go to state 8
    PRINTF          shift, and go to state 9
    SCANF           shift, and go to state 10
    SEMICOLON       shift, and go to state 11
    IDENTIFIER      shift, and go to state 13

    $default  reduce using rule 1 (program)

    statement    go to state 42
    printf       go to state 17
    scanf        go to state 18
    while        go to state 19
    if_else      go to state 20
    declaration  go to state 21
    assign       go to state 22
    T            go to state 23


State 16

    2 statements: statement .

    $default  reduce using rule 2 (statements)


State 17

   11 statement: printf . SEMICOLON

    SEMICOLON  shift, and go to state 43


State 18

   12 statement: scanf . SEMICOLON

    SEMICOLON  shift, and go to state 44


State 19

   10 statement: while .

    $default  reduce using rule 10 (statement)


State 20

    9 statement: if_else .

    $default  reduce using rule 9 (statement)


State 21

    7 statement: declaration . SEMICOLON

    SEMICOLON  shift, and go to state 45


State 22

    8 statement: assign . SEMICOLON

    SEMICOLON  shift, and go to state 46


State 23

   34 declaration: T . assigns
   35            | T . idlist

    IDENTIFIER  shift, and go to state 47

    assigns  go to state 48
    assign   go to state 49
    idlist   go to state 50


State 24

   22 bool_statements: LPAREN . bool_statements RPAREN
   43 expr: LPAREN . expr RPAREN

    LPAREN      shift, and go to state 24
    IDENTIFIER  shift, and go to state 25
    INTEGER     shift, and go to state 26
    CHAR        shift, and go to state 27
    STRING      shift, and go to state 28
    ADD         shift, and go to state 29
    SUB         shift, and go to state 30
    NOT         shift, and go to state 31

    bool_statements  go to state 51
    bool_statement   go to state 33
    expr             go to state 52


State 25

   51 expr: IDENTIFIER .

    $default  reduce using rule 51 (expr)


State 26

   52 expr: INTEGER .

    $default  reduce using rule 52 (expr)


State 27

   53 expr: CHAR .

    $default  reduce using rule 53 (expr)


State 28

   54 expr: STRING .

    $default  reduce using rule 54 (expr)


State 29

   47 expr: ADD . expr

    LPAREN      shift, and go to state 53
    IDENTIFIER  shift, and go to state 25
    INTEGER     shift, and go to state 26
    CHAR        shift, and go to state 27
    STRING      shift, and go to state 28
    ADD         shift, and go to state 29
    SUB         shift, and go to state 30

    expr  go to state 54


State 30

   46 expr: SUB . expr

    LPAREN      shift, and go to state 53
    IDENTIFIER  shift, and go to state 25
    INTEGER     shift, and go to state 26
    CHAR        shift, and go to state 27
    STRING      shift, and go to state 28
    ADD         shift, and go to state 29
    SUB         shift, and go to state 30

    expr  go to state 55


State 31

   25 bool_statements: NOT . bool_statements

    LPAREN      shift, and go to state 24
    IDENTIFIER  shift, and go to state 25
    INTEGER     shift, and go to state 26
    CHAR        shift, and go to state 27
    STRING      shift, and go to state 28
    ADD         shift, and go to state 29
    SUB         shift, and go to state 30
    NOT         shift, and go to state 31

    bool_statements  go to state 56
    bool_statement   go to state 33
    expr             go to state 34


State 32

   20 if_else: IF bool_statements . statements ELSE statements
   21        | IF bool_statements . statement
   23 bool_statements: bool_statements . AND bool_statements
   24                | bool_statements . OR bool_statements

    IF              shift, and go to state 1
    WHILE           shift, and go to state 2
    T_CHAR          shift, and go to state 3
    T_INT           shift, and go to state 4
    T_STRING        shift, and go to state 5
    T_BOOL          shift, and go to state 6
    T_INT_POINTER   shift, and go to state 7
    T_CHAR_POINTER  shift, and go to state 8
    PRINTF          shift, and go to state 9
    SCANF           shift, and go to state 10
    SEMICOLON       shift, and go to state 11
    LBRACE          shift, and go to state 12
    IDENTIFIER      shift, and go to state 13
    OR              shift, and go to state 57
    AND             shift, and go to state 58

    statements   go to state 59
    statement    go to state 60
    printf       go to state 17
    scanf        go to state 18
    while        go to state 19
    if_else      go to state 20
    declaration  go to state 21
    assign       go to state 22
    T            go to state 23


State 33

   26 bool_statements: bool_statement .
   28 bool_statement: bool_statement . GREAT bool_statement
   29               | bool_statement . LESS bool_statement
   30               | bool_statement . GREAT_EQ bool_statement
   31               | bool_statement . LESS_EQ bool_statement
   32               | bool_statement . LOP_EQ bool_statement
   33               | bool_statement . NOT_EQ bool_statement

    LOP_EQ    shift, and go to state 61
    GREAT     shift, and go to state 62
    LESS      shift, and go to state 63
    GREAT_EQ  shift, and go to state 64
    LESS_EQ   shift, and go to state 65
    NOT_EQ    shift, and go to state 66

    $default  reduce using rule 26 (bool_statements)


State 34

   27 bool_statement: expr .
   44 expr: expr . ADD expr
   45     | expr . SUB expr
   48     | expr . MUL expr
   49     | expr . DIV expr
   50     | expr . MOD expr

    ADD  shift, and go to state 67
    SUB  shift, and go to state 68
    MUL  shift, and go to state 69
    DIV  shift, and go to state 70
    MOD  shift, and go to state 71

    $default  reduce using rule 27 (bool_statement)


State 35

   19 while: WHILE bool_statements . statements
   23 bool_statements: bool_statements . AND bool_statements
   24                | bool_statements . OR bool_statements

    IF              shift, and go to state 1
    WHILE           shift, and go to state 2
    T_CHAR          shift, and go to state 3
    T_INT           shift, and go to state 4
    T_STRING        shift, and go to state 5
    T_BOOL          shift, and go to state 6
    T_INT_POINTER   shift, and go to state 7
    T_CHAR_POINTER  shift, and go to state 8
    PRINTF          shift, and go to state 9
    SCANF           shift, and go to state 10
    SEMICOLON       shift, and go to state 11
    LBRACE          shift, and go to state 12
    IDENTIFIER      shift, and go to state 13
    OR              shift, and go to state 57
    AND             shift, and go to state 58

    statements   go to state 72
    statement    go to state 16
    printf       go to state 17
    scanf        go to state 18
    while        go to state 19
    if_else      go to state 20
    declaration  go to state 21
    assign       go to state 22
    T            go to state 23


State 36

   13 printf: PRINTF LPAREN . STRING RPAREN
   14       | PRINTF LPAREN . STRING COMMA exprs RPAREN

    STRING  shift, and go to state 73


State 37

   15 scanf: SCANF LPAREN . STRING COMMA address_idlist RPAREN

    STRING  shift, and go to state 74


State 38

    5 statements: LBRACE RBRACE .

    $default  reduce using rule 5 (statements)


State 39

    3 statements: statements . statement
    4           | LBRACE statements . RBRACE

    IF              shift, and go to state 1
    WHILE           shift, and go to state 2
    T_CHAR          shift, and go to state 3
    T_INT           shift, and go to state 4
    T_STRING        shift, and go to state 5
    T_BOOL          shift, and go to state 6
    T_INT_POINTER   shift, and go to state 7
    T_CHAR_POINTER  shift, and go to state 8
    PRINTF          shift, and go to state 9
    SCANF           shift, and go to state 10
    SEMICOLON       shift, and go to state 11
    RBRACE          shift, and go to state 75
    IDENTIFIER      shift, and go to state 13

    statement    go to state 42
    printf       go to state 17
    scanf        go to state 18
    while        go to state 19
    if_else      go to state 20
    declaration  go to state 21
    assign       go to state 22
    T            go to state 23


State 40

   38 assign: IDENTIFIER LOP_ASSIGN . expr

    LPAREN      shift, and go to state 53
    IDENTIFIER  shift, and go to state 25
    INTEGER     shift, and go to state 26
    CHAR        shift, and go to state 27
    STRING      shift, and go to state 28
    ADD         shift, and go to state 29
    SUB         shift, and go to state 30

    expr  go to state 76


State 41

    0 $accept: program $end .

    $default  accept


State 42

    3 statements: statements statement .

    $default  reduce using rule 3 (statements)


State 43

   11 statement: printf SEMICOLON .

    $default  reduce using rule 11 (statement)


State 44

   12 statement: scanf SEMICOLON .

    $default  reduce using rule 12 (statement)


State 45

    7 statement: declaration SEMICOLON .

    $default  reduce using rule 7 (statement)


State 46

    8 statement: assign SEMICOLON .

    $default  reduce using rule 8 (statement)


State 47

   38 assign: IDENTIFIER . LOP_ASSIGN expr
   40 idlist: IDENTIFIER .

    LOP_ASSIGN  shift, and go to state 40

    $default  reduce using rule 40 (idlist)


State 48

   34 declaration: T assigns .
   36 assigns: assigns . COMMA assign

    COMMA  shift, and go to state 77

    $default  reduce using rule 34 (declaration)


State 49

   37 assigns: assign .

    $default  reduce using rule 37 (assigns)


State 50

   35 declaration: T idlist .
   39 idlist: idlist . COMMA IDENTIFIER

    COMMA  shift, and go to state 78

    $default  reduce using rule 35 (declaration)


State 51

   22 bool_statements: LPAREN bool_statements . RPAREN
   23                | bool_statements . AND bool_statements
   24                | bool_statements . OR bool_statements

    RPAREN  shift, and go to state 79
    OR      shift, and go to state 57
    AND     shift, and go to state 58


State 52

   27 bool_statement: expr .
   43 expr: LPAREN expr . RPAREN
   44     | expr . ADD expr
   45     | expr . SUB expr
   48     | expr . MUL expr
   49     | expr . DIV expr
   50     | expr . MOD expr

    RPAREN  shift, and go to state 80
    ADD     shift, and go to state 67
    SUB     shift, and go to state 68
    MUL     shift, and go to state 69
    DIV     shift, and go to state 70
    MOD     shift, and go to state 71

    RPAREN    [reduce using rule 27 (bool_statement)]
    $default  reduce using rule 27 (bool_statement)


State 53

   43 expr: LPAREN . expr RPAREN

    LPAREN      shift, and go to state 53
    IDENTIFIER  shift, and go to state 25
    INTEGER     shift, and go to state 26
    CHAR        shift, and go to state 27
    STRING      shift, and go to state 28
    ADD         shift, and go to state 29
    SUB         shift, and go to state 30

    expr  go to state 81


State 54

   44 expr: expr . ADD expr
   45     | expr . SUB expr
   47     | ADD expr .
   48     | expr . MUL expr
   49     | expr . DIV expr
   50     | expr . MOD expr

    $default  reduce using rule 47 (expr)


State 55

   44 expr: expr . ADD expr
   45     | expr . SUB expr
   46     | SUB expr .
   48     | expr . MUL expr
   49     | expr . DIV expr
   50     | expr . MOD expr

    $default  reduce using rule 46 (expr)


State 56

   23 bool_statements: bool_statements . AND bool_statements
   24                | bool_statements . OR bool_statements
   25                | NOT bool_statements .

    $default  reduce using rule 25 (bool_statements)


State 57

   24 bool_statements: bool_statements OR . bool_statements

    LPAREN      shift, and go to state 24
    IDENTIFIER  shift, and go to state 25
    INTEGER     shift, and go to state 26
    CHAR        shift, and go to state 27
    STRING      shift, and go to state 28
    ADD         shift, and go to state 29
    SUB         shift, and go to state 30
    NOT         shift, and go to state 31

    bool_statements  go to state 82
    bool_statement   go to state 33
    expr             go to state 34


State 58

   23 bool_statements: bool_statements AND . bool_statements

    LPAREN      shift, and go to state 24
    IDENTIFIER  shift, and go to state 25
    INTEGER     shift, and go to state 26
    CHAR        shift, and go to state 27
    STRING      shift, and go to state 28
    ADD         shift, and go to state 29
    SUB         shift, and go to state 30
    NOT         shift, and go to state 31

    bool_statements  go to state 83
    bool_statement   go to state 33
    expr             go to state 34


State 59

    3 statements: statements . statement
   20 if_else: IF bool_statements statements . ELSE statements

    IF              shift, and go to state 1
    ELSE            shift, and go to state 84
    WHILE           shift, and go to state 2
    T_CHAR          shift, and go to state 3
    T_INT           shift, and go to state 4
    T_STRING        shift, and go to state 5
    T_BOOL          shift, and go to state 6
    T_INT_POINTER   shift, and go to state 7
    T_CHAR_POINTER  shift, and go to state 8
    PRINTF          shift, and go to state 9
    SCANF           shift, and go to state 10
    SEMICOLON       shift, and go to state 11
    IDENTIFIER      shift, and go to state 13

    statement    go to state 42
    printf       go to state 17
    scanf        go to state 18
    while        go to state 19
    if_else      go to state 20
    declaration  go to state 21
    assign       go to state 22
    T            go to state 23


State 60

    2 statements: statement .
   21 if_else: IF bool_statements statement .

    $end            reduce using rule 21 (if_else)
    IF              reduce using rule 2 (statements)
    IF              [reduce using rule 21 (if_else)]
    ELSE            reduce using rule 2 (statements)
    ELSE            [reduce using rule 21 (if_else)]
    WHILE           reduce using rule 2 (statements)
    WHILE           [reduce using rule 21 (if_else)]
    T_CHAR          reduce using rule 2 (statements)
    T_CHAR          [reduce using rule 21 (if_else)]
    T_INT           reduce using rule 2 (statements)
    T_INT           [reduce using rule 21 (if_else)]
    T_STRING        reduce using rule 2 (statements)
    T_STRING        [reduce using rule 21 (if_else)]
    T_BOOL          reduce using rule 2 (statements)
    T_BOOL          [reduce using rule 21 (if_else)]
    T_INT_POINTER   reduce using rule 2 (statements)
    T_INT_POINTER   [reduce using rule 21 (if_else)]
    T_CHAR_POINTER  reduce using rule 2 (statements)
    T_CHAR_POINTER  [reduce using rule 21 (if_else)]
    PRINTF          reduce using rule 2 (statements)
    PRINTF          [reduce using rule 21 (if_else)]
    SCANF           reduce using rule 2 (statements)
    SCANF           [reduce using rule 21 (if_else)]
    SEMICOLON       reduce using rule 2 (statements)
    SEMICOLON       [reduce using rule 21 (if_else)]
    RBRACE          reduce using rule 21 (if_else)
    IDENTIFIER      reduce using rule 2 (statements)
    IDENTIFIER      [reduce using rule 21 (if_else)]
    $default        reduce using rule 2 (statements)


State 61

   32 bool_statement: bool_statement LOP_EQ . bool_statement

    LPAREN      shift, and go to state 53
    IDENTIFIER  shift, and go to state 25
    INTEGER     shift, and go to state 26
    CHAR        shift, and go to state 27
    STRING      shift, and go to state 28
    ADD         shift, and go to state 29
    SUB         shift, and go to state 30

    bool_statement  go to state 85
    expr            go to state 34


State 62

   28 bool_statement: bool_statement GREAT . bool_statement

    LPAREN      shift, and go to state 53
    IDENTIFIER  shift, and go to state 25
    INTEGER     shift, and go to state 26
    CHAR        shift, and go to state 27
    STRING      shift, and go to state 28
    ADD         shift, and go to state 29
    SUB         shift, and go to state 30

    bool_statement  go to state 86
    expr            go to state 34


State 63

   29 bool_statement: bool_statement LESS . bool_statement

    LPAREN      shift, and go to state 53
    IDENTIFIER  shift, and go to state 25
    INTEGER     shift, and go to state 26
    CHAR        shift, and go to state 27
    STRING      shift, and go to state 28
    ADD         shift, and go to state 29
    SUB         shift, and go to state 30

    bool_statement  go to state 87
    expr            go to state 34


State 64

   30 bool_statement: bool_statement GREAT_EQ . bool_statement

    LPAREN      shift, and go to state 53
    IDENTIFIER  shift, and go to state 25
    INTEGER     shift, and go to state 26
    CHAR        shift, and go to state 27
    STRING      shift, and go to state 28
    ADD         shift, and go to state 29
    SUB         shift, and go to state 30

    bool_statement  go to state 88
    expr            go to state 34


State 65

   31 bool_statement: bool_statement LESS_EQ . bool_statement

    LPAREN      shift, and go to state 53
    IDENTIFIER  shift, and go to state 25
    INTEGER     shift, and go to state 26
    CHAR        shift, and go to state 27
    STRING      shift, and go to state 28
    ADD         shift, and go to state 29
    SUB         shift, and go to state 30

    bool_statement  go to state 89
    expr            go to state 34


State 66

   33 bool_statement: bool_statement NOT_EQ . bool_statement

    LPAREN      shift, and go to state 53
    IDENTIFIER  shift, and go to state 25
    INTEGER     shift, and go to state 26
    CHAR        shift, and go to state 27
    STRING      shift, and go to state 28
    ADD         shift, and go to state 29
    SUB         shift, and go to state 30

    bool_statement  go to state 90
    expr            go to state 34


State 67

   44 expr: expr ADD . expr

    LPAREN      shift, and go to state 53
    IDENTIFIER  shift, and go to state 25
    INTEGER     shift, and go to state 26
    CHAR        shift, and go to state 27
    STRING      shift, and go to state 28
    ADD         shift, and go to state 29
    SUB         shift, and go to state 30

    expr  go to state 91


State 68

   45 expr: expr SUB . expr

    LPAREN      shift, and go to state 53
    IDENTIFIER  shift, and go to state 25
    INTEGER     shift, and go to state 26
    CHAR        shift, and go to state 27
    STRING      shift, and go to state 28
    ADD         shift, and go to state 29
    SUB         shift, and go to state 30

    expr  go to state 92


State 69

   48 expr: expr MUL . expr

    LPAREN      shift, and go to state 53
    IDENTIFIER  shift, and go to state 25
    INTEGER     shift, and go to state 26
    CHAR        shift, and go to state 27
    STRING      shift, and go to state 28
    ADD         shift, and go to state 29
    SUB         shift, and go to state 30

    expr  go to state 93


State 70

   49 expr: expr DIV . expr

    LPAREN      shift, and go to state 53
    IDENTIFIER  shift, and go to state 25
    INTEGER     shift, and go to state 26
    CHAR        shift, and go to state 27
    STRING      shift, and go to state 28
    ADD         shift, and go to state 29
    SUB         shift, and go to state 30

    expr  go to state 94


State 71

   50 expr: expr MOD . expr

    LPAREN      shift, and go to state 53
    IDENTIFIER  shift, and go to state 25
    INTEGER     shift, and go to state 26
    CHAR        shift, and go to state 27
    STRING      shift, and go to state 28
    ADD         shift, and go to state 29
    SUB         shift, and go to state 30

    expr  go to state 95


State 72

    3 statements: statements . statement
   19 while: WHILE bool_statements statements .

    IF              shift, and go to state 1
    WHILE           shift, and go to state 2
    T_CHAR          shift, and go to state 3
    T_INT           shift, and go to state 4
    T_STRING        shift, and go to state 5
    T_BOOL          shift, and go to state 6
    T_INT_POINTER   shift, and go to state 7
    T_CHAR_POINTER  shift, and go to state 8
    PRINTF          shift, and go to state 9
    SCANF           shift, and go to state 10
    SEMICOLON       shift, and go to state 11
    IDENTIFIER      shift, and go to state 13

    IF              [reduce using rule 19 (while)]
    WHILE           [reduce using rule 19 (while)]
    T_CHAR          [reduce using rule 19 (while)]
    T_INT           [reduce using rule 19 (while)]
    T_STRING        [reduce using rule 19 (while)]
    T_BOOL          [reduce using rule 19 (while)]
    T_INT_POINTER   [reduce using rule 19 (while)]
    T_CHAR_POINTER  [reduce using rule 19 (while)]
    PRINTF          [reduce using rule 19 (while)]
    SCANF           [reduce using rule 19 (while)]
    SEMICOLON       [reduce using rule 19 (while)]
    IDENTIFIER      [reduce using rule 19 (while)]
    $default        reduce using rule 19 (while)

    statement    go to state 42
    printf       go to state 17
    scanf        go to state 18
    while        go to state 19
    if_else      go to state 20
    declaration  go to state 21
    assign       go to state 22
    T            go to state 23


State 73

   13 printf: PRINTF LPAREN STRING . RPAREN
   14       | PRINTF LPAREN STRING . COMMA exprs RPAREN

    COMMA   shift, and go to state 96
    RPAREN  shift, and go to state 97


State 74

   15 scanf: SCANF LPAREN STRING . COMMA address_idlist RPAREN

    COMMA  shift, and go to state 98


State 75

    4 statements: LBRACE statements RBRACE .

    $default  reduce using rule 4 (statements)


State 76

   38 assign: IDENTIFIER LOP_ASSIGN expr .
   44 expr: expr . ADD expr
   45     | expr . SUB expr
   48     | expr . MUL expr
   49     | expr . DIV expr
   50     | expr . MOD expr

    ADD  shift, and go to state 67
    SUB  shift, and go to state 68
    MUL  shift, and go to state 69
    DIV  shift, and go to state 70
    MOD  shift, and go to state 71

    $default  reduce using rule 38 (assign)


State 77

   36 assigns: assigns COMMA . assign

    IDENTIFIER  shift, and go to state 13

    assign  go to state 99


State 78

   39 idlist: idlist COMMA . IDENTIFIER

    IDENTIFIER  shift, and go to state 100


State 79

   22 bool_statements: LPAREN bool_statements RPAREN .

    $default  reduce using rule 22 (bool_statements)


State 80

   43 expr: LPAREN expr RPAREN .

    $default  reduce using rule 43 (expr)


State 81

   43 expr: LPAREN expr . RPAREN
   44     | expr . ADD expr
   45     | expr . SUB expr
   48     | expr . MUL expr
   49     | expr . DIV expr
   50     | expr . MOD expr

    RPAREN  shift, and go to state 80
    ADD     shift, and go to state 67
    SUB     shift, and go to state 68
    MUL     shift, and go to state 69
    DIV     shift, and go to state 70
    MOD     shift, and go to state 71


State 82

   23 bool_statements: bool_statements . AND bool_statements
   24                | bool_statements . OR bool_statements
   24                | bool_statements OR bool_statements .

    AND  shift, and go to state 58

    $default  reduce using rule 24 (bool_statements)


State 83

   23 bool_statements: bool_statements . AND bool_statements
   23                | bool_statements AND bool_statements .
   24                | bool_statements . OR bool_statements

    $default  reduce using rule 23 (bool_statements)


State 84

   20 if_else: IF bool_statements statements ELSE . statements

    IF              shift, and go to state 1
    WHILE           shift, and go to state 2
    T_CHAR          shift, and go to state 3
    T_INT           shift, and go to state 4
    T_STRING        shift, and go to state 5
    T_BOOL          shift, and go to state 6
    T_INT_POINTER   shift, and go to state 7
    T_CHAR_POINTER  shift, and go to state 8
    PRINTF          shift, and go to state 9
    SCANF           shift, and go to state 10
    SEMICOLON       shift, and go to state 11
    LBRACE          shift, and go to state 12
    IDENTIFIER      shift, and go to state 13

    statements   go to state 101
    statement    go to state 16
    printf       go to state 17
    scanf        go to state 18
    while        go to state 19
    if_else      go to state 20
    declaration  go to state 21
    assign       go to state 22
    T            go to state 23


State 85

   28 bool_statement: bool_statement . GREAT bool_statement
   29               | bool_statement . LESS bool_statement
   30               | bool_statement . GREAT_EQ bool_statement
   31               | bool_statement . LESS_EQ bool_statement
   32               | bool_statement . LOP_EQ bool_statement
   32               | bool_statement LOP_EQ bool_statement .
   33               | bool_statement . NOT_EQ bool_statement

    $default  reduce using rule 32 (bool_statement)


State 86

   28 bool_statement: bool_statement . GREAT bool_statement
   28               | bool_statement GREAT bool_statement .
   29               | bool_statement . LESS bool_statement
   30               | bool_statement . GREAT_EQ bool_statement
   31               | bool_statement . LESS_EQ bool_statement
   32               | bool_statement . LOP_EQ bool_statement
   33               | bool_statement . NOT_EQ bool_statement

    $default  reduce using rule 28 (bool_statement)


State 87

   28 bool_statement: bool_statement . GREAT bool_statement
   29               | bool_statement . LESS bool_statement
   29               | bool_statement LESS bool_statement .
   30               | bool_statement . GREAT_EQ bool_statement
   31               | bool_statement . LESS_EQ bool_statement
   32               | bool_statement . LOP_EQ bool_statement
   33               | bool_statement . NOT_EQ bool_statement

    $default  reduce using rule 29 (bool_statement)


State 88

   28 bool_statement: bool_statement . GREAT bool_statement
   29               | bool_statement . LESS bool_statement
   30               | bool_statement . GREAT_EQ bool_statement
   30               | bool_statement GREAT_EQ bool_statement .
   31               | bool_statement . LESS_EQ bool_statement
   32               | bool_statement . LOP_EQ bool_statement
   33               | bool_statement . NOT_EQ bool_statement

    $default  reduce using rule 30 (bool_statement)


State 89

   28 bool_statement: bool_statement . GREAT bool_statement
   29               | bool_statement . LESS bool_statement
   30               | bool_statement . GREAT_EQ bool_statement
   31               | bool_statement . LESS_EQ bool_statement
   31               | bool_statement LESS_EQ bool_statement .
   32               | bool_statement . LOP_EQ bool_statement
   33               | bool_statement . NOT_EQ bool_statement

    $default  reduce using rule 31 (bool_statement)


State 90

   28 bool_statement: bool_statement . GREAT bool_statement
   29               | bool_statement . LESS bool_statement
   30               | bool_statement . GREAT_EQ bool_statement
   31               | bool_statement . LESS_EQ bool_statement
   32               | bool_statement . LOP_EQ bool_statement
   33               | bool_statement . NOT_EQ bool_statement
   33               | bool_statement NOT_EQ bool_statement .

    $default  reduce using rule 33 (bool_statement)


State 91

   44 expr: expr . ADD expr
   44     | expr ADD expr .
   45     | expr . SUB expr
   48     | expr . MUL expr
   49     | expr . DIV expr
   50     | expr . MOD expr

    MUL  shift, and go to state 69
    DIV  shift, and go to state 70
    MOD  shift, and go to state 71

    $default  reduce using rule 44 (expr)


State 92

   44 expr: expr . ADD expr
   45     | expr . SUB expr
   45     | expr SUB expr .
   48     | expr . MUL expr
   49     | expr . DIV expr
   50     | expr . MOD expr

    MUL  shift, and go to state 69
    DIV  shift, and go to state 70
    MOD  shift, and go to state 71

    $default  reduce using rule 45 (expr)


State 93

   44 expr: expr . ADD expr
   45     | expr . SUB expr
   48     | expr . MUL expr
   48     | expr MUL expr .
   49     | expr . DIV expr
   50     | expr . MOD expr

    $default  reduce using rule 48 (expr)


State 94

   44 expr: expr . ADD expr
   45     | expr . SUB expr
   48     | expr . MUL expr
   49     | expr . DIV expr
   49     | expr DIV expr .
   50     | expr . MOD expr

    $default  reduce using rule 49 (expr)


State 95

   44 expr: expr . ADD expr
   45     | expr . SUB expr
   48     | expr . MUL expr
   49     | expr . DIV expr
   50     | expr . MOD expr
   50     | expr MOD expr .

    $default  reduce using rule 50 (expr)


State 96

   14 printf: PRINTF LPAREN STRING COMMA . exprs RPAREN

    LPAREN      shift, and go to state 53
    IDENTIFIER  shift, and go to state 25
    INTEGER     shift, and go to state 26
    CHAR        shift, and go to state 27
    STRING      shift, and go to state 28
    ADD         shift, and go to state 29
    SUB         shift, and go to state 30

    exprs  go to state 102
    expr   go to state 103


State 97

   13 printf: PRINTF LPAREN STRING RPAREN .

    $default  reduce using rule 13 (printf)


State 98

   15 scanf: SCANF LPAREN STRING COMMA . address_idlist RPAREN

    GET_ADDRESS  shift, and go to state 104

    address_idlist  go to state 105
    get_address_id  go to state 106


State 99

   36 assigns: assigns COMMA assign .

    $default  reduce using rule 36 (assigns)


State 100

   39 idlist: idlist COMMA IDENTIFIER .

    $default  reduce using rule 39 (idlist)


State 101

    3 statements: statements . statement
   20 if_else: IF bool_statements statements ELSE statements .

    IF              shift, and go to state 1
    WHILE           shift, and go to state 2
    T_CHAR          shift, and go to state 3
    T_INT           shift, and go to state 4
    T_STRING        shift, and go to state 5
    T_BOOL          shift, and go to state 6
    T_INT_POINTER   shift, and go to state 7
    T_CHAR_POINTER  shift, and go to state 8
    PRINTF          shift, and go to state 9
    SCANF           shift, and go to state 10
    SEMICOLON       shift, and go to state 11
    IDENTIFIER      shift, and go to state 13

    IF              [reduce using rule 20 (if_else)]
    WHILE           [reduce using rule 20 (if_else)]
    T_CHAR          [reduce using rule 20 (if_else)]
    T_INT           [reduce using rule 20 (if_else)]
    T_STRING        [reduce using rule 20 (if_else)]
    T_BOOL          [reduce using rule 20 (if_else)]
    T_INT_POINTER   [reduce using rule 20 (if_else)]
    T_CHAR_POINTER  [reduce using rule 20 (if_else)]
    PRINTF          [reduce using rule 20 (if_else)]
    SCANF           [reduce using rule 20 (if_else)]
    SEMICOLON       [reduce using rule 20 (if_else)]
    IDENTIFIER      [reduce using rule 20 (if_else)]
    $default        reduce using rule 20 (if_else)

    statement    go to state 42
    printf       go to state 17
    scanf        go to state 18
    while        go to state 19
    if_else      go to state 20
    declaration  go to state 21
    assign       go to state 22
    T            go to state 23


State 102

   14 printf: PRINTF LPAREN STRING COMMA exprs . RPAREN
   41 exprs: exprs . COMMA expr

    COMMA   shift, and go to state 107
    RPAREN  shift, and go to state 108


State 103

   42 exprs: expr .
   44 expr: expr . ADD expr
   45     | expr . SUB expr
   48     | expr . MUL expr
   49     | expr . DIV expr
   50     | expr . MOD expr

    ADD  shift, and go to state 67
    SUB  shift, and go to state 68
    MUL  shift, and go to state 69
    DIV  shift, and go to state 70
    MOD  shift, and go to state 71

    $default  reduce using rule 42 (exprs)


State 104

   18 get_address_id: GET_ADDRESS . IDENTIFIER

    IDENTIFIER  shift, and go to state 109


State 105

   15 scanf: SCANF LPAREN STRING COMMA address_idlist . RPAREN
   16 address_idlist: address_idlist . COMMA get_address_id

    COMMA   shift, and go to state 110
    RPAREN  shift, and go to state 111


State 106

   17 address_idlist: get_address_id .

    $default  reduce using rule 17 (address_idlist)


State 107

   41 exprs: exprs COMMA . expr

    LPAREN      shift, and go to state 53
    IDENTIFIER  shift, and go to state 25
    INTEGER     shift, and go to state 26
    CHAR        shift, and go to state 27
    STRING      shift, and go to state 28
    ADD         shift, and go to state 29
    SUB         shift, and go to state 30

    expr  go to state 112


State 108

   14 printf: PRINTF LPAREN STRING COMMA exprs RPAREN .

    $default  reduce using rule 14 (printf)


State 109

   18 get_address_id: GET_ADDRESS IDENTIFIER .

    $default  reduce using rule 18 (get_address_id)


State 110

   16 address_idlist: address_idlist COMMA . get_address_id

    GET_ADDRESS  shift, and go to state 104

    get_address_id  go to state 113


State 111

   15 scanf: SCANF LPAREN STRING COMMA address_idlist RPAREN .

    $default  reduce using rule 15 (scanf)


State 112

   41 exprs: exprs COMMA expr .
   44 expr: expr . ADD expr
   45     | expr . SUB expr
   48     | expr . MUL expr
   49     | expr . DIV expr
   50     | expr . MOD expr

    ADD  shift, and go to state 67
    SUB  shift, and go to state 68
    MUL  shift, and go to state 69
    DIV  shift, and go to state 70
    MOD  shift, and go to state 71

    $default  reduce using rule 41 (exprs)


State 113

   16 address_idlist: address_idlist COMMA get_address_id .

    $default  reduce using rule 16 (address_idlist)

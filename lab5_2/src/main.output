Terminals unused in grammar

   FOR
   RETURN
   POINT
   LBRACK
   RBRACK
   BOOL
   GET_VALUE


State 65 conflicts: 1 shift/reduce
State 73 conflicts: 13 reduce/reduce
State 85 conflicts: 12 shift/reduce
State 129 conflicts: 12 shift/reduce


Grammar

    0 $accept: program $end

    1 program: statements

    2 statements: statement
    3           | statements statement
    4           | LBRACE statements RBRACE
    5           | LBRACE RBRACE

    6 statement: SEMICOLON
    7          | declaration SEMICOLON
    8          | assign SEMICOLON
    9          | if_else
   10          | while
   11          | printf SEMICOLON
   12          | scanf SEMICOLON
   13          | function_decl SEMICOLON
   14          | function_def
   15          | function_use SEMICOLON
   16          | opassign SEMICOLON

   17 function_decl: T IDENTIFIER LPAREN RPAREN
   18              | T IDENTIFIER LPAREN params RPAREN

   19 function_def: T IDENTIFIER LPAREN params RPAREN LBRACE statements RBRACE

   20 function_use: IDENTIFIER LPAREN idlist RPAREN
   21             | IDENTIFIER LPAREN RPAREN

   22 params: params COMMA param
   23       | param

   24 param: T IDENTIFIER

   25 printf: PRINTF LPAREN STRING RPAREN
   26       | PRINTF LPAREN STRING COMMA exprs RPAREN

   27 scanf: SCANF LPAREN STRING COMMA address_idlist RPAREN

   28 address_idlist: address_idlist COMMA get_address_id
   29               | get_address_id

   30 get_address_id: GET_ADDRESS IDENTIFIER

   31 while: WHILE bool_statements statements

   32 if_else: IF bool_statements statements ELSE statements
   33        | IF bool_statements statement

   34 bool_statements: LPAREN bool_statements RPAREN
   35                | bool_statements AND bool_statements
   36                | bool_statements OR bool_statements
   37                | NOT bool_statements
   38                | bool_statement

   39 bool_statement: expr
   40               | bool_statement GREAT bool_statement
   41               | bool_statement LESS bool_statement
   42               | bool_statement GREAT_EQ bool_statement
   43               | bool_statement LESS_EQ bool_statement
   44               | bool_statement LOP_EQ bool_statement
   45               | bool_statement NOT_EQ bool_statement

   46 declaration: T assigns
   47            | T idlist

   48 assigns: assigns COMMA assign
   49        | assign

   50 assign: IDENTIFIER LOP_ASSIGN expr

   51 opassign: IDENTIFIER ADD_ASSIGN expr
   52         | IDENTIFIER SUB_ASSIGN expr
   53         | IDENTIFIER MUL_ASSIGN expr
   54         | IDENTIFIER DIV_ASSIGN expr
   55         | IDENTIFIER MOD_ASSIGN expr

   56 idlist: idlist COMMA IDENTIFIER
   57       | IDENTIFIER

   58 exprs: exprs COMMA expr
   59      | expr

   60 expr: LPAREN expr RPAREN
   61     | expr ADD expr
   62     | expr SUB expr
   63     | SUB expr
   64     | ADD expr
   65     | expr MUL expr
   66     | expr DIV expr
   67     | expr MOD expr
   68     | IDENTIFIER
   69     | INTEGER
   70     | CHAR
   71     | STRING

   72 T: T_INT
   73  | T_CHAR
   74  | T_BOOL
   75  | T_STRING
   76  | T_INT_POINTER
   77  | T_CHAR_POINTER


Terminals, with rules where they appear

$end (0) 0
error (256)
IF (258) 32 33
ELSE (259) 32
WHILE (260) 31
FOR (261)
RETURN (262)
T_CHAR (263) 73
T_INT (264) 72
T_STRING (265) 75
T_BOOL (266) 74
T_INT_POINTER (267) 76
T_CHAR_POINTER (268) 77
PRINTF (269) 25 26
SCANF (270) 27
LOP_ASSIGN (271) 50
ADD_ASSIGN (272) 51
SUB_ASSIGN (273) 52
MOD_ASSIGN (274) 55
DIV_ASSIGN (275) 54
MUL_ASSIGN (276) 53
SEMICOLON (277) 6 7 8 11 12 13 15 16
COMMA (278) 22 26 27 28 48 56 58
POINT (279)
LPAREN (280) 17 18 19 20 21 25 26 27 34 60
RPAREN (281) 17 18 19 20 21 25 26 27 34 60
LBRACK (282)
RBRACK (283)
LBRACE (284) 4 5 19
RBRACE (285) 4 5 19
IDENTIFIER (286) 17 18 19 20 21 24 30 50 51 52 53 54 55 56 57 68
INTEGER (287) 69
CHAR (288) 70
BOOL (289)
STRING (290) 25 26 27 71
LOP_EQ (291) 44
GREAT (292) 40
LESS (293) 41
GREAT_EQ (294) 42
LESS_EQ (295) 43
NOT_EQ (296) 45
ADD (297) 61 64
SUB (298) 62 63
MUL (299) 65
DIV (300) 66
MOD (301) 67
OR (302) 36
AND (303) 35
NOT (304) 37
NEG (305)
POS (306)
GET_ADDRESS (307) 30
GET_VALUE (308)


Nonterminals, with rules where they appear

$accept (54)
    on left: 0
program (55)
    on left: 1, on right: 0
statements (56)
    on left: 2 3 4 5, on right: 1 3 4 19 31 32
statement (57)
    on left: 6 7 8 9 10 11 12 13 14 15 16, on right: 2 3 33
function_decl (58)
    on left: 17 18, on right: 13
function_def (59)
    on left: 19, on right: 14
function_use (60)
    on left: 20 21, on right: 15
params (61)
    on left: 22 23, on right: 18 19 22
param (62)
    on left: 24, on right: 22 23
printf (63)
    on left: 25 26, on right: 11
scanf (64)
    on left: 27, on right: 12
address_idlist (65)
    on left: 28 29, on right: 27 28
get_address_id (66)
    on left: 30, on right: 28 29
while (67)
    on left: 31, on right: 10
if_else (68)
    on left: 32 33, on right: 9
bool_statements (69)
    on left: 34 35 36 37 38, on right: 31 32 33 34 35 36 37
bool_statement (70)
    on left: 39 40 41 42 43 44 45, on right: 38 40 41 42 43 44 45
declaration (71)
    on left: 46 47, on right: 7
assigns (72)
    on left: 48 49, on right: 46 48
assign (73)
    on left: 50, on right: 8 48 49
opassign (74)
    on left: 51 52 53 54 55, on right: 16
idlist (75)
    on left: 56 57, on right: 20 47 56
exprs (76)
    on left: 58 59, on right: 26 58
expr (77)
    on left: 60 61 62 63 64 65 66 67 68 69 70 71, on right: 39 50 51
    52 53 54 55 58 59 60 61 62 63 64 65 66 67
T (78)
    on left: 72 73 74 75 76 77, on right: 17 18 19 24 46 47


State 0

    0 $accept: . program $end

    IF              shift, and go to state 1
    WHILE           shift, and go to state 2
    T_CHAR          shift, and go to state 3
    T_INT           shift, and go to state 4
    T_STRING        shift, and go to state 5
    T_BOOL          shift, and go to state 6
    T_INT_POINTER   shift, and go to state 7
    T_CHAR_POINTER  shift, and go to state 8
    PRINTF          shift, and go to state 9
    SCANF           shift, and go to state 10
    SEMICOLON       shift, and go to state 11
    LBRACE          shift, and go to state 12
    IDENTIFIER      shift, and go to state 13

    program        go to state 14
    statements     go to state 15
    statement      go to state 16
    function_decl  go to state 17
    function_def   go to state 18
    function_use   go to state 19
    printf         go to state 20
    scanf          go to state 21
    while          go to state 22
    if_else        go to state 23
    declaration    go to state 24
    assign         go to state 25
    opassign       go to state 26
    T              go to state 27


State 1

   32 if_else: IF . bool_statements statements ELSE statements
   33        | IF . bool_statements statement

    LPAREN      shift, and go to state 28
    IDENTIFIER  shift, and go to state 29
    INTEGER     shift, and go to state 30
    CHAR        shift, and go to state 31
    STRING      shift, and go to state 32
    ADD         shift, and go to state 33
    SUB         shift, and go to state 34
    NOT         shift, and go to state 35

    bool_statements  go to state 36
    bool_statement   go to state 37
    expr             go to state 38


State 2

   31 while: WHILE . bool_statements statements

    LPAREN      shift, and go to state 28
    IDENTIFIER  shift, and go to state 29
    INTEGER     shift, and go to state 30
    CHAR        shift, and go to state 31
    STRING      shift, and go to state 32
    ADD         shift, and go to state 33
    SUB         shift, and go to state 34
    NOT         shift, and go to state 35

    bool_statements  go to state 39
    bool_statement   go to state 37
    expr             go to state 38


State 3

   73 T: T_CHAR .

    $default  reduce using rule 73 (T)


State 4

   72 T: T_INT .

    $default  reduce using rule 72 (T)


State 5

   75 T: T_STRING .

    $default  reduce using rule 75 (T)


State 6

   74 T: T_BOOL .

    $default  reduce using rule 74 (T)


State 7

   76 T: T_INT_POINTER .

    $default  reduce using rule 76 (T)


State 8

   77 T: T_CHAR_POINTER .

    $default  reduce using rule 77 (T)


State 9

   25 printf: PRINTF . LPAREN STRING RPAREN
   26       | PRINTF . LPAREN STRING COMMA exprs RPAREN

    LPAREN  shift, and go to state 40


State 10

   27 scanf: SCANF . LPAREN STRING COMMA address_idlist RPAREN

    LPAREN  shift, and go to state 41


State 11

    6 statement: SEMICOLON .

    $default  reduce using rule 6 (statement)


State 12

    4 statements: LBRACE . statements RBRACE
    5           | LBRACE . RBRACE

    IF              shift, and go to state 1
    WHILE           shift, and go to state 2
    T_CHAR          shift, and go to state 3
    T_INT           shift, and go to state 4
    T_STRING        shift, and go to state 5
    T_BOOL          shift, and go to state 6
    T_INT_POINTER   shift, and go to state 7
    T_CHAR_POINTER  shift, and go to state 8
    PRINTF          shift, and go to state 9
    SCANF           shift, and go to state 10
    SEMICOLON       shift, and go to state 11
    LBRACE          shift, and go to state 12
    RBRACE          shift, and go to state 42
    IDENTIFIER      shift, and go to state 13

    statements     go to state 43
    statement      go to state 16
    function_decl  go to state 17
    function_def   go to state 18
    function_use   go to state 19
    printf         go to state 20
    scanf          go to state 21
    while          go to state 22
    if_else        go to state 23
    declaration    go to state 24
    assign         go to state 25
    opassign       go to state 26
    T              go to state 27


State 13

   20 function_use: IDENTIFIER . LPAREN idlist RPAREN
   21             | IDENTIFIER . LPAREN RPAREN
   50 assign: IDENTIFIER . LOP_ASSIGN expr
   51 opassign: IDENTIFIER . ADD_ASSIGN expr
   52         | IDENTIFIER . SUB_ASSIGN expr
   53         | IDENTIFIER . MUL_ASSIGN expr
   54         | IDENTIFIER . DIV_ASSIGN expr
   55         | IDENTIFIER . MOD_ASSIGN expr

    LOP_ASSIGN  shift, and go to state 44
    ADD_ASSIGN  shift, and go to state 45
    SUB_ASSIGN  shift, and go to state 46
    MOD_ASSIGN  shift, and go to state 47
    DIV_ASSIGN  shift, and go to state 48
    MUL_ASSIGN  shift, and go to state 49
    LPAREN      shift, and go to state 50


State 14

    0 $accept: program . $end

    $end  shift, and go to state 51


State 15

    1 program: statements .
    3 statements: statements . statement

    IF              shift, and go to state 1
    WHILE           shift, and go to state 2
    T_CHAR          shift, and go to state 3
    T_INT           shift, and go to state 4
    T_STRING        shift, and go to state 5
    T_BOOL          shift, and go to state 6
    T_INT_POINTER   shift, and go to state 7
    T_CHAR_POINTER  shift, and go to state 8
    PRINTF          shift, and go to state 9
    SCANF           shift, and go to state 10
    SEMICOLON       shift, and go to state 11
    IDENTIFIER      shift, and go to state 13

    $default  reduce using rule 1 (program)

    statement      go to state 52
    function_decl  go to state 17
    function_def   go to state 18
    function_use   go to state 19
    printf         go to state 20
    scanf          go to state 21
    while          go to state 22
    if_else        go to state 23
    declaration    go to state 24
    assign         go to state 25
    opassign       go to state 26
    T              go to state 27


State 16

    2 statements: statement .

    $default  reduce using rule 2 (statements)


State 17

   13 statement: function_decl . SEMICOLON

    SEMICOLON  shift, and go to state 53


State 18

   14 statement: function_def .

    $default  reduce using rule 14 (statement)


State 19

   15 statement: function_use . SEMICOLON

    SEMICOLON  shift, and go to state 54


State 20

   11 statement: printf . SEMICOLON

    SEMICOLON  shift, and go to state 55


State 21

   12 statement: scanf . SEMICOLON

    SEMICOLON  shift, and go to state 56


State 22

   10 statement: while .

    $default  reduce using rule 10 (statement)


State 23

    9 statement: if_else .

    $default  reduce using rule 9 (statement)


State 24

    7 statement: declaration . SEMICOLON

    SEMICOLON  shift, and go to state 57


State 25

    8 statement: assign . SEMICOLON

    SEMICOLON  shift, and go to state 58


State 26

   16 statement: opassign . SEMICOLON

    SEMICOLON  shift, and go to state 59


State 27

   17 function_decl: T . IDENTIFIER LPAREN RPAREN
   18              | T . IDENTIFIER LPAREN params RPAREN
   19 function_def: T . IDENTIFIER LPAREN params RPAREN LBRACE statements RBRACE
   46 declaration: T . assigns
   47            | T . idlist

    IDENTIFIER  shift, and go to state 60

    assigns  go to state 61
    assign   go to state 62
    idlist   go to state 63


State 28

   34 bool_statements: LPAREN . bool_statements RPAREN
   60 expr: LPAREN . expr RPAREN

    LPAREN      shift, and go to state 28
    IDENTIFIER  shift, and go to state 29
    INTEGER     shift, and go to state 30
    CHAR        shift, and go to state 31
    STRING      shift, and go to state 32
    ADD         shift, and go to state 33
    SUB         shift, and go to state 34
    NOT         shift, and go to state 35

    bool_statements  go to state 64
    bool_statement   go to state 37
    expr             go to state 65


State 29

   68 expr: IDENTIFIER .

    $default  reduce using rule 68 (expr)


State 30

   69 expr: INTEGER .

    $default  reduce using rule 69 (expr)


State 31

   70 expr: CHAR .

    $default  reduce using rule 70 (expr)


State 32

   71 expr: STRING .

    $default  reduce using rule 71 (expr)


State 33

   64 expr: ADD . expr

    LPAREN      shift, and go to state 66
    IDENTIFIER  shift, and go to state 29
    INTEGER     shift, and go to state 30
    CHAR        shift, and go to state 31
    STRING      shift, and go to state 32
    ADD         shift, and go to state 33
    SUB         shift, and go to state 34

    expr  go to state 67


State 34

   63 expr: SUB . expr

    LPAREN      shift, and go to state 66
    IDENTIFIER  shift, and go to state 29
    INTEGER     shift, and go to state 30
    CHAR        shift, and go to state 31
    STRING      shift, and go to state 32
    ADD         shift, and go to state 33
    SUB         shift, and go to state 34

    expr  go to state 68


State 35

   37 bool_statements: NOT . bool_statements

    LPAREN      shift, and go to state 28
    IDENTIFIER  shift, and go to state 29
    INTEGER     shift, and go to state 30
    CHAR        shift, and go to state 31
    STRING      shift, and go to state 32
    ADD         shift, and go to state 33
    SUB         shift, and go to state 34
    NOT         shift, and go to state 35

    bool_statements  go to state 69
    bool_statement   go to state 37
    expr             go to state 38


State 36

   32 if_else: IF bool_statements . statements ELSE statements
   33        | IF bool_statements . statement
   35 bool_statements: bool_statements . AND bool_statements
   36                | bool_statements . OR bool_statements

    IF              shift, and go to state 1
    WHILE           shift, and go to state 2
    T_CHAR          shift, and go to state 3
    T_INT           shift, and go to state 4
    T_STRING        shift, and go to state 5
    T_BOOL          shift, and go to state 6
    T_INT_POINTER   shift, and go to state 7
    T_CHAR_POINTER  shift, and go to state 8
    PRINTF          shift, and go to state 9
    SCANF           shift, and go to state 10
    SEMICOLON       shift, and go to state 11
    LBRACE          shift, and go to state 12
    IDENTIFIER      shift, and go to state 13
    OR              shift, and go to state 70
    AND             shift, and go to state 71

    statements     go to state 72
    statement      go to state 73
    function_decl  go to state 17
    function_def   go to state 18
    function_use   go to state 19
    printf         go to state 20
    scanf          go to state 21
    while          go to state 22
    if_else        go to state 23
    declaration    go to state 24
    assign         go to state 25
    opassign       go to state 26
    T              go to state 27


State 37

   38 bool_statements: bool_statement .
   40 bool_statement: bool_statement . GREAT bool_statement
   41               | bool_statement . LESS bool_statement
   42               | bool_statement . GREAT_EQ bool_statement
   43               | bool_statement . LESS_EQ bool_statement
   44               | bool_statement . LOP_EQ bool_statement
   45               | bool_statement . NOT_EQ bool_statement

    LOP_EQ    shift, and go to state 74
    GREAT     shift, and go to state 75
    LESS      shift, and go to state 76
    GREAT_EQ  shift, and go to state 77
    LESS_EQ   shift, and go to state 78
    NOT_EQ    shift, and go to state 79

    $default  reduce using rule 38 (bool_statements)


State 38

   39 bool_statement: expr .
   61 expr: expr . ADD expr
   62     | expr . SUB expr
   65     | expr . MUL expr
   66     | expr . DIV expr
   67     | expr . MOD expr

    ADD  shift, and go to state 80
    SUB  shift, and go to state 81
    MUL  shift, and go to state 82
    DIV  shift, and go to state 83
    MOD  shift, and go to state 84

    $default  reduce using rule 39 (bool_statement)


State 39

   31 while: WHILE bool_statements . statements
   35 bool_statements: bool_statements . AND bool_statements
   36                | bool_statements . OR bool_statements

    IF              shift, and go to state 1
    WHILE           shift, and go to state 2
    T_CHAR          shift, and go to state 3
    T_INT           shift, and go to state 4
    T_STRING        shift, and go to state 5
    T_BOOL          shift, and go to state 6
    T_INT_POINTER   shift, and go to state 7
    T_CHAR_POINTER  shift, and go to state 8
    PRINTF          shift, and go to state 9
    SCANF           shift, and go to state 10
    SEMICOLON       shift, and go to state 11
    LBRACE          shift, and go to state 12
    IDENTIFIER      shift, and go to state 13
    OR              shift, and go to state 70
    AND             shift, and go to state 71

    statements     go to state 85
    statement      go to state 16
    function_decl  go to state 17
    function_def   go to state 18
    function_use   go to state 19
    printf         go to state 20
    scanf          go to state 21
    while          go to state 22
    if_else        go to state 23
    declaration    go to state 24
    assign         go to state 25
    opassign       go to state 26
    T              go to state 27


State 40

   25 printf: PRINTF LPAREN . STRING RPAREN
   26       | PRINTF LPAREN . STRING COMMA exprs RPAREN

    STRING  shift, and go to state 86


State 41

   27 scanf: SCANF LPAREN . STRING COMMA address_idlist RPAREN

    STRING  shift, and go to state 87


State 42

    5 statements: LBRACE RBRACE .

    $default  reduce using rule 5 (statements)


State 43

    3 statements: statements . statement
    4           | LBRACE statements . RBRACE

    IF              shift, and go to state 1
    WHILE           shift, and go to state 2
    T_CHAR          shift, and go to state 3
    T_INT           shift, and go to state 4
    T_STRING        shift, and go to state 5
    T_BOOL          shift, and go to state 6
    T_INT_POINTER   shift, and go to state 7
    T_CHAR_POINTER  shift, and go to state 8
    PRINTF          shift, and go to state 9
    SCANF           shift, and go to state 10
    SEMICOLON       shift, and go to state 11
    RBRACE          shift, and go to state 88
    IDENTIFIER      shift, and go to state 13

    statement      go to state 52
    function_decl  go to state 17
    function_def   go to state 18
    function_use   go to state 19
    printf         go to state 20
    scanf          go to state 21
    while          go to state 22
    if_else        go to state 23
    declaration    go to state 24
    assign         go to state 25
    opassign       go to state 26
    T              go to state 27


State 44

   50 assign: IDENTIFIER LOP_ASSIGN . expr

    LPAREN      shift, and go to state 66
    IDENTIFIER  shift, and go to state 29
    INTEGER     shift, and go to state 30
    CHAR        shift, and go to state 31
    STRING      shift, and go to state 32
    ADD         shift, and go to state 33
    SUB         shift, and go to state 34

    expr  go to state 89


State 45

   51 opassign: IDENTIFIER ADD_ASSIGN . expr

    LPAREN      shift, and go to state 66
    IDENTIFIER  shift, and go to state 29
    INTEGER     shift, and go to state 30
    CHAR        shift, and go to state 31
    STRING      shift, and go to state 32
    ADD         shift, and go to state 33
    SUB         shift, and go to state 34

    expr  go to state 90


State 46

   52 opassign: IDENTIFIER SUB_ASSIGN . expr

    LPAREN      shift, and go to state 66
    IDENTIFIER  shift, and go to state 29
    INTEGER     shift, and go to state 30
    CHAR        shift, and go to state 31
    STRING      shift, and go to state 32
    ADD         shift, and go to state 33
    SUB         shift, and go to state 34

    expr  go to state 91


State 47

   55 opassign: IDENTIFIER MOD_ASSIGN . expr

    LPAREN      shift, and go to state 66
    IDENTIFIER  shift, and go to state 29
    INTEGER     shift, and go to state 30
    CHAR        shift, and go to state 31
    STRING      shift, and go to state 32
    ADD         shift, and go to state 33
    SUB         shift, and go to state 34

    expr  go to state 92


State 48

   54 opassign: IDENTIFIER DIV_ASSIGN . expr

    LPAREN      shift, and go to state 66
    IDENTIFIER  shift, and go to state 29
    INTEGER     shift, and go to state 30
    CHAR        shift, and go to state 31
    STRING      shift, and go to state 32
    ADD         shift, and go to state 33
    SUB         shift, and go to state 34

    expr  go to state 93


State 49

   53 opassign: IDENTIFIER MUL_ASSIGN . expr

    LPAREN      shift, and go to state 66
    IDENTIFIER  shift, and go to state 29
    INTEGER     shift, and go to state 30
    CHAR        shift, and go to state 31
    STRING      shift, and go to state 32
    ADD         shift, and go to state 33
    SUB         shift, and go to state 34

    expr  go to state 94


State 50

   20 function_use: IDENTIFIER LPAREN . idlist RPAREN
   21             | IDENTIFIER LPAREN . RPAREN

    RPAREN      shift, and go to state 95
    IDENTIFIER  shift, and go to state 96

    idlist  go to state 97


State 51

    0 $accept: program $end .

    $default  accept


State 52

    3 statements: statements statement .

    $default  reduce using rule 3 (statements)


State 53

   13 statement: function_decl SEMICOLON .

    $default  reduce using rule 13 (statement)


State 54

   15 statement: function_use SEMICOLON .

    $default  reduce using rule 15 (statement)


State 55

   11 statement: printf SEMICOLON .

    $default  reduce using rule 11 (statement)


State 56

   12 statement: scanf SEMICOLON .

    $default  reduce using rule 12 (statement)


State 57

    7 statement: declaration SEMICOLON .

    $default  reduce using rule 7 (statement)


State 58

    8 statement: assign SEMICOLON .

    $default  reduce using rule 8 (statement)


State 59

   16 statement: opassign SEMICOLON .

    $default  reduce using rule 16 (statement)


State 60

   17 function_decl: T IDENTIFIER . LPAREN RPAREN
   18              | T IDENTIFIER . LPAREN params RPAREN
   19 function_def: T IDENTIFIER . LPAREN params RPAREN LBRACE statements RBRACE
   50 assign: IDENTIFIER . LOP_ASSIGN expr
   57 idlist: IDENTIFIER .

    LOP_ASSIGN  shift, and go to state 44
    LPAREN      shift, and go to state 98

    $default  reduce using rule 57 (idlist)


State 61

   46 declaration: T assigns .
   48 assigns: assigns . COMMA assign

    COMMA  shift, and go to state 99

    $default  reduce using rule 46 (declaration)


State 62

   49 assigns: assign .

    $default  reduce using rule 49 (assigns)


State 63

   47 declaration: T idlist .
   56 idlist: idlist . COMMA IDENTIFIER

    COMMA  shift, and go to state 100

    $default  reduce using rule 47 (declaration)


State 64

   34 bool_statements: LPAREN bool_statements . RPAREN
   35                | bool_statements . AND bool_statements
   36                | bool_statements . OR bool_statements

    RPAREN  shift, and go to state 101
    OR      shift, and go to state 70
    AND     shift, and go to state 71


State 65

   39 bool_statement: expr .
   60 expr: LPAREN expr . RPAREN
   61     | expr . ADD expr
   62     | expr . SUB expr
   65     | expr . MUL expr
   66     | expr . DIV expr
   67     | expr . MOD expr

    RPAREN  shift, and go to state 102
    ADD     shift, and go to state 80
    SUB     shift, and go to state 81
    MUL     shift, and go to state 82
    DIV     shift, and go to state 83
    MOD     shift, and go to state 84

    RPAREN    [reduce using rule 39 (bool_statement)]
    $default  reduce using rule 39 (bool_statement)


State 66

   60 expr: LPAREN . expr RPAREN

    LPAREN      shift, and go to state 66
    IDENTIFIER  shift, and go to state 29
    INTEGER     shift, and go to state 30
    CHAR        shift, and go to state 31
    STRING      shift, and go to state 32
    ADD         shift, and go to state 33
    SUB         shift, and go to state 34

    expr  go to state 103


State 67

   61 expr: expr . ADD expr
   62     | expr . SUB expr
   64     | ADD expr .
   65     | expr . MUL expr
   66     | expr . DIV expr
   67     | expr . MOD expr

    $default  reduce using rule 64 (expr)


State 68

   61 expr: expr . ADD expr
   62     | expr . SUB expr
   63     | SUB expr .
   65     | expr . MUL expr
   66     | expr . DIV expr
   67     | expr . MOD expr

    $default  reduce using rule 63 (expr)


State 69

   35 bool_statements: bool_statements . AND bool_statements
   36                | bool_statements . OR bool_statements
   37                | NOT bool_statements .

    $default  reduce using rule 37 (bool_statements)


State 70

   36 bool_statements: bool_statements OR . bool_statements

    LPAREN      shift, and go to state 28
    IDENTIFIER  shift, and go to state 29
    INTEGER     shift, and go to state 30
    CHAR        shift, and go to state 31
    STRING      shift, and go to state 32
    ADD         shift, and go to state 33
    SUB         shift, and go to state 34
    NOT         shift, and go to state 35

    bool_statements  go to state 104
    bool_statement   go to state 37
    expr             go to state 38


State 71

   35 bool_statements: bool_statements AND . bool_statements

    LPAREN      shift, and go to state 28
    IDENTIFIER  shift, and go to state 29
    INTEGER     shift, and go to state 30
    CHAR        shift, and go to state 31
    STRING      shift, and go to state 32
    ADD         shift, and go to state 33
    SUB         shift, and go to state 34
    NOT         shift, and go to state 35

    bool_statements  go to state 105
    bool_statement   go to state 37
    expr             go to state 38


State 72

    3 statements: statements . statement
   32 if_else: IF bool_statements statements . ELSE statements

    IF              shift, and go to state 1
    ELSE            shift, and go to state 106
    WHILE           shift, and go to state 2
    T_CHAR          shift, and go to state 3
    T_INT           shift, and go to state 4
    T_STRING        shift, and go to state 5
    T_BOOL          shift, and go to state 6
    T_INT_POINTER   shift, and go to state 7
    T_CHAR_POINTER  shift, and go to state 8
    PRINTF          shift, and go to state 9
    SCANF           shift, and go to state 10
    SEMICOLON       shift, and go to state 11
    IDENTIFIER      shift, and go to state 13

    statement      go to state 52
    function_decl  go to state 17
    function_def   go to state 18
    function_use   go to state 19
    printf         go to state 20
    scanf          go to state 21
    while          go to state 22
    if_else        go to state 23
    declaration    go to state 24
    assign         go to state 25
    opassign       go to state 26
    T              go to state 27


State 73

    2 statements: statement .
   33 if_else: IF bool_statements statement .

    $end            reduce using rule 33 (if_else)
    IF              reduce using rule 2 (statements)
    IF              [reduce using rule 33 (if_else)]
    ELSE            reduce using rule 2 (statements)
    ELSE            [reduce using rule 33 (if_else)]
    WHILE           reduce using rule 2 (statements)
    WHILE           [reduce using rule 33 (if_else)]
    T_CHAR          reduce using rule 2 (statements)
    T_CHAR          [reduce using rule 33 (if_else)]
    T_INT           reduce using rule 2 (statements)
    T_INT           [reduce using rule 33 (if_else)]
    T_STRING        reduce using rule 2 (statements)
    T_STRING        [reduce using rule 33 (if_else)]
    T_BOOL          reduce using rule 2 (statements)
    T_BOOL          [reduce using rule 33 (if_else)]
    T_INT_POINTER   reduce using rule 2 (statements)
    T_INT_POINTER   [reduce using rule 33 (if_else)]
    T_CHAR_POINTER  reduce using rule 2 (statements)
    T_CHAR_POINTER  [reduce using rule 33 (if_else)]
    PRINTF          reduce using rule 2 (statements)
    PRINTF          [reduce using rule 33 (if_else)]
    SCANF           reduce using rule 2 (statements)
    SCANF           [reduce using rule 33 (if_else)]
    SEMICOLON       reduce using rule 2 (statements)
    SEMICOLON       [reduce using rule 33 (if_else)]
    RBRACE          reduce using rule 33 (if_else)
    IDENTIFIER      reduce using rule 2 (statements)
    IDENTIFIER      [reduce using rule 33 (if_else)]
    $default        reduce using rule 2 (statements)


State 74

   44 bool_statement: bool_statement LOP_EQ . bool_statement

    LPAREN      shift, and go to state 66
    IDENTIFIER  shift, and go to state 29
    INTEGER     shift, and go to state 30
    CHAR        shift, and go to state 31
    STRING      shift, and go to state 32
    ADD         shift, and go to state 33
    SUB         shift, and go to state 34

    bool_statement  go to state 107
    expr            go to state 38


State 75

   40 bool_statement: bool_statement GREAT . bool_statement

    LPAREN      shift, and go to state 66
    IDENTIFIER  shift, and go to state 29
    INTEGER     shift, and go to state 30
    CHAR        shift, and go to state 31
    STRING      shift, and go to state 32
    ADD         shift, and go to state 33
    SUB         shift, and go to state 34

    bool_statement  go to state 108
    expr            go to state 38


State 76

   41 bool_statement: bool_statement LESS . bool_statement

    LPAREN      shift, and go to state 66
    IDENTIFIER  shift, and go to state 29
    INTEGER     shift, and go to state 30
    CHAR        shift, and go to state 31
    STRING      shift, and go to state 32
    ADD         shift, and go to state 33
    SUB         shift, and go to state 34

    bool_statement  go to state 109
    expr            go to state 38


State 77

   42 bool_statement: bool_statement GREAT_EQ . bool_statement

    LPAREN      shift, and go to state 66
    IDENTIFIER  shift, and go to state 29
    INTEGER     shift, and go to state 30
    CHAR        shift, and go to state 31
    STRING      shift, and go to state 32
    ADD         shift, and go to state 33
    SUB         shift, and go to state 34

    bool_statement  go to state 110
    expr            go to state 38


State 78

   43 bool_statement: bool_statement LESS_EQ . bool_statement

    LPAREN      shift, and go to state 66
    IDENTIFIER  shift, and go to state 29
    INTEGER     shift, and go to state 30
    CHAR        shift, and go to state 31
    STRING      shift, and go to state 32
    ADD         shift, and go to state 33
    SUB         shift, and go to state 34

    bool_statement  go to state 111
    expr            go to state 38


State 79

   45 bool_statement: bool_statement NOT_EQ . bool_statement

    LPAREN      shift, and go to state 66
    IDENTIFIER  shift, and go to state 29
    INTEGER     shift, and go to state 30
    CHAR        shift, and go to state 31
    STRING      shift, and go to state 32
    ADD         shift, and go to state 33
    SUB         shift, and go to state 34

    bool_statement  go to state 112
    expr            go to state 38


State 80

   61 expr: expr ADD . expr

    LPAREN      shift, and go to state 66
    IDENTIFIER  shift, and go to state 29
    INTEGER     shift, and go to state 30
    CHAR        shift, and go to state 31
    STRING      shift, and go to state 32
    ADD         shift, and go to state 33
    SUB         shift, and go to state 34

    expr  go to state 113


State 81

   62 expr: expr SUB . expr

    LPAREN      shift, and go to state 66
    IDENTIFIER  shift, and go to state 29
    INTEGER     shift, and go to state 30
    CHAR        shift, and go to state 31
    STRING      shift, and go to state 32
    ADD         shift, and go to state 33
    SUB         shift, and go to state 34

    expr  go to state 114


State 82

   65 expr: expr MUL . expr

    LPAREN      shift, and go to state 66
    IDENTIFIER  shift, and go to state 29
    INTEGER     shift, and go to state 30
    CHAR        shift, and go to state 31
    STRING      shift, and go to state 32
    ADD         shift, and go to state 33
    SUB         shift, and go to state 34

    expr  go to state 115


State 83

   66 expr: expr DIV . expr

    LPAREN      shift, and go to state 66
    IDENTIFIER  shift, and go to state 29
    INTEGER     shift, and go to state 30
    CHAR        shift, and go to state 31
    STRING      shift, and go to state 32
    ADD         shift, and go to state 33
    SUB         shift, and go to state 34

    expr  go to state 116


State 84

   67 expr: expr MOD . expr

    LPAREN      shift, and go to state 66
    IDENTIFIER  shift, and go to state 29
    INTEGER     shift, and go to state 30
    CHAR        shift, and go to state 31
    STRING      shift, and go to state 32
    ADD         shift, and go to state 33
    SUB         shift, and go to state 34

    expr  go to state 117


State 85

    3 statements: statements . statement
   31 while: WHILE bool_statements statements .

    IF              shift, and go to state 1
    WHILE           shift, and go to state 2
    T_CHAR          shift, and go to state 3
    T_INT           shift, and go to state 4
    T_STRING        shift, and go to state 5
    T_BOOL          shift, and go to state 6
    T_INT_POINTER   shift, and go to state 7
    T_CHAR_POINTER  shift, and go to state 8
    PRINTF          shift, and go to state 9
    SCANF           shift, and go to state 10
    SEMICOLON       shift, and go to state 11
    IDENTIFIER      shift, and go to state 13

    IF              [reduce using rule 31 (while)]
    WHILE           [reduce using rule 31 (while)]
    T_CHAR          [reduce using rule 31 (while)]
    T_INT           [reduce using rule 31 (while)]
    T_STRING        [reduce using rule 31 (while)]
    T_BOOL          [reduce using rule 31 (while)]
    T_INT_POINTER   [reduce using rule 31 (while)]
    T_CHAR_POINTER  [reduce using rule 31 (while)]
    PRINTF          [reduce using rule 31 (while)]
    SCANF           [reduce using rule 31 (while)]
    SEMICOLON       [reduce using rule 31 (while)]
    IDENTIFIER      [reduce using rule 31 (while)]
    $default        reduce using rule 31 (while)

    statement      go to state 52
    function_decl  go to state 17
    function_def   go to state 18
    function_use   go to state 19
    printf         go to state 20
    scanf          go to state 21
    while          go to state 22
    if_else        go to state 23
    declaration    go to state 24
    assign         go to state 25
    opassign       go to state 26
    T              go to state 27


State 86

   25 printf: PRINTF LPAREN STRING . RPAREN
   26       | PRINTF LPAREN STRING . COMMA exprs RPAREN

    COMMA   shift, and go to state 118
    RPAREN  shift, and go to state 119


State 87

   27 scanf: SCANF LPAREN STRING . COMMA address_idlist RPAREN

    COMMA  shift, and go to state 120


State 88

    4 statements: LBRACE statements RBRACE .

    $default  reduce using rule 4 (statements)


State 89

   50 assign: IDENTIFIER LOP_ASSIGN expr .
   61 expr: expr . ADD expr
   62     | expr . SUB expr
   65     | expr . MUL expr
   66     | expr . DIV expr
   67     | expr . MOD expr

    ADD  shift, and go to state 80
    SUB  shift, and go to state 81
    MUL  shift, and go to state 82
    DIV  shift, and go to state 83
    MOD  shift, and go to state 84

    $default  reduce using rule 50 (assign)


State 90

   51 opassign: IDENTIFIER ADD_ASSIGN expr .
   61 expr: expr . ADD expr
   62     | expr . SUB expr
   65     | expr . MUL expr
   66     | expr . DIV expr
   67     | expr . MOD expr

    ADD  shift, and go to state 80
    SUB  shift, and go to state 81
    MUL  shift, and go to state 82
    DIV  shift, and go to state 83
    MOD  shift, and go to state 84

    $default  reduce using rule 51 (opassign)


State 91

   52 opassign: IDENTIFIER SUB_ASSIGN expr .
   61 expr: expr . ADD expr
   62     | expr . SUB expr
   65     | expr . MUL expr
   66     | expr . DIV expr
   67     | expr . MOD expr

    ADD  shift, and go to state 80
    SUB  shift, and go to state 81
    MUL  shift, and go to state 82
    DIV  shift, and go to state 83
    MOD  shift, and go to state 84

    $default  reduce using rule 52 (opassign)


State 92

   55 opassign: IDENTIFIER MOD_ASSIGN expr .
   61 expr: expr . ADD expr
   62     | expr . SUB expr
   65     | expr . MUL expr
   66     | expr . DIV expr
   67     | expr . MOD expr

    ADD  shift, and go to state 80
    SUB  shift, and go to state 81
    MUL  shift, and go to state 82
    DIV  shift, and go to state 83
    MOD  shift, and go to state 84

    $default  reduce using rule 55 (opassign)


State 93

   54 opassign: IDENTIFIER DIV_ASSIGN expr .
   61 expr: expr . ADD expr
   62     | expr . SUB expr
   65     | expr . MUL expr
   66     | expr . DIV expr
   67     | expr . MOD expr

    ADD  shift, and go to state 80
    SUB  shift, and go to state 81
    MUL  shift, and go to state 82
    DIV  shift, and go to state 83
    MOD  shift, and go to state 84

    $default  reduce using rule 54 (opassign)


State 94

   53 opassign: IDENTIFIER MUL_ASSIGN expr .
   61 expr: expr . ADD expr
   62     | expr . SUB expr
   65     | expr . MUL expr
   66     | expr . DIV expr
   67     | expr . MOD expr

    ADD  shift, and go to state 80
    SUB  shift, and go to state 81
    MUL  shift, and go to state 82
    DIV  shift, and go to state 83
    MOD  shift, and go to state 84

    $default  reduce using rule 53 (opassign)


State 95

   21 function_use: IDENTIFIER LPAREN RPAREN .

    $default  reduce using rule 21 (function_use)


State 96

   57 idlist: IDENTIFIER .

    $default  reduce using rule 57 (idlist)


State 97

   20 function_use: IDENTIFIER LPAREN idlist . RPAREN
   56 idlist: idlist . COMMA IDENTIFIER

    COMMA   shift, and go to state 100
    RPAREN  shift, and go to state 121


State 98

   17 function_decl: T IDENTIFIER LPAREN . RPAREN
   18              | T IDENTIFIER LPAREN . params RPAREN
   19 function_def: T IDENTIFIER LPAREN . params RPAREN LBRACE statements RBRACE

    T_CHAR          shift, and go to state 3
    T_INT           shift, and go to state 4
    T_STRING        shift, and go to state 5
    T_BOOL          shift, and go to state 6
    T_INT_POINTER   shift, and go to state 7
    T_CHAR_POINTER  shift, and go to state 8
    RPAREN          shift, and go to state 122

    params  go to state 123
    param   go to state 124
    T       go to state 125


State 99

   48 assigns: assigns COMMA . assign

    IDENTIFIER  shift, and go to state 126

    assign  go to state 127


State 100

   56 idlist: idlist COMMA . IDENTIFIER

    IDENTIFIER  shift, and go to state 128


State 101

   34 bool_statements: LPAREN bool_statements RPAREN .

    $default  reduce using rule 34 (bool_statements)


State 102

   60 expr: LPAREN expr RPAREN .

    $default  reduce using rule 60 (expr)


State 103

   60 expr: LPAREN expr . RPAREN
   61     | expr . ADD expr
   62     | expr . SUB expr
   65     | expr . MUL expr
   66     | expr . DIV expr
   67     | expr . MOD expr

    RPAREN  shift, and go to state 102
    ADD     shift, and go to state 80
    SUB     shift, and go to state 81
    MUL     shift, and go to state 82
    DIV     shift, and go to state 83
    MOD     shift, and go to state 84


State 104

   35 bool_statements: bool_statements . AND bool_statements
   36                | bool_statements . OR bool_statements
   36                | bool_statements OR bool_statements .

    AND  shift, and go to state 71

    $default  reduce using rule 36 (bool_statements)


State 105

   35 bool_statements: bool_statements . AND bool_statements
   35                | bool_statements AND bool_statements .
   36                | bool_statements . OR bool_statements

    $default  reduce using rule 35 (bool_statements)


State 106

   32 if_else: IF bool_statements statements ELSE . statements

    IF              shift, and go to state 1
    WHILE           shift, and go to state 2
    T_CHAR          shift, and go to state 3
    T_INT           shift, and go to state 4
    T_STRING        shift, and go to state 5
    T_BOOL          shift, and go to state 6
    T_INT_POINTER   shift, and go to state 7
    T_CHAR_POINTER  shift, and go to state 8
    PRINTF          shift, and go to state 9
    SCANF           shift, and go to state 10
    SEMICOLON       shift, and go to state 11
    LBRACE          shift, and go to state 12
    IDENTIFIER      shift, and go to state 13

    statements     go to state 129
    statement      go to state 16
    function_decl  go to state 17
    function_def   go to state 18
    function_use   go to state 19
    printf         go to state 20
    scanf          go to state 21
    while          go to state 22
    if_else        go to state 23
    declaration    go to state 24
    assign         go to state 25
    opassign       go to state 26
    T              go to state 27


State 107

   40 bool_statement: bool_statement . GREAT bool_statement
   41               | bool_statement . LESS bool_statement
   42               | bool_statement . GREAT_EQ bool_statement
   43               | bool_statement . LESS_EQ bool_statement
   44               | bool_statement . LOP_EQ bool_statement
   44               | bool_statement LOP_EQ bool_statement .
   45               | bool_statement . NOT_EQ bool_statement

    $default  reduce using rule 44 (bool_statement)


State 108

   40 bool_statement: bool_statement . GREAT bool_statement
   40               | bool_statement GREAT bool_statement .
   41               | bool_statement . LESS bool_statement
   42               | bool_statement . GREAT_EQ bool_statement
   43               | bool_statement . LESS_EQ bool_statement
   44               | bool_statement . LOP_EQ bool_statement
   45               | bool_statement . NOT_EQ bool_statement

    $default  reduce using rule 40 (bool_statement)


State 109

   40 bool_statement: bool_statement . GREAT bool_statement
   41               | bool_statement . LESS bool_statement
   41               | bool_statement LESS bool_statement .
   42               | bool_statement . GREAT_EQ bool_statement
   43               | bool_statement . LESS_EQ bool_statement
   44               | bool_statement . LOP_EQ bool_statement
   45               | bool_statement . NOT_EQ bool_statement

    $default  reduce using rule 41 (bool_statement)


State 110

   40 bool_statement: bool_statement . GREAT bool_statement
   41               | bool_statement . LESS bool_statement
   42               | bool_statement . GREAT_EQ bool_statement
   42               | bool_statement GREAT_EQ bool_statement .
   43               | bool_statement . LESS_EQ bool_statement
   44               | bool_statement . LOP_EQ bool_statement
   45               | bool_statement . NOT_EQ bool_statement

    $default  reduce using rule 42 (bool_statement)


State 111

   40 bool_statement: bool_statement . GREAT bool_statement
   41               | bool_statement . LESS bool_statement
   42               | bool_statement . GREAT_EQ bool_statement
   43               | bool_statement . LESS_EQ bool_statement
   43               | bool_statement LESS_EQ bool_statement .
   44               | bool_statement . LOP_EQ bool_statement
   45               | bool_statement . NOT_EQ bool_statement

    $default  reduce using rule 43 (bool_statement)


State 112

   40 bool_statement: bool_statement . GREAT bool_statement
   41               | bool_statement . LESS bool_statement
   42               | bool_statement . GREAT_EQ bool_statement
   43               | bool_statement . LESS_EQ bool_statement
   44               | bool_statement . LOP_EQ bool_statement
   45               | bool_statement . NOT_EQ bool_statement
   45               | bool_statement NOT_EQ bool_statement .

    $default  reduce using rule 45 (bool_statement)


State 113

   61 expr: expr . ADD expr
   61     | expr ADD expr .
   62     | expr . SUB expr
   65     | expr . MUL expr
   66     | expr . DIV expr
   67     | expr . MOD expr

    MUL  shift, and go to state 82
    DIV  shift, and go to state 83
    MOD  shift, and go to state 84

    $default  reduce using rule 61 (expr)


State 114

   61 expr: expr . ADD expr
   62     | expr . SUB expr
   62     | expr SUB expr .
   65     | expr . MUL expr
   66     | expr . DIV expr
   67     | expr . MOD expr

    MUL  shift, and go to state 82
    DIV  shift, and go to state 83
    MOD  shift, and go to state 84

    $default  reduce using rule 62 (expr)


State 115

   61 expr: expr . ADD expr
   62     | expr . SUB expr
   65     | expr . MUL expr
   65     | expr MUL expr .
   66     | expr . DIV expr
   67     | expr . MOD expr

    $default  reduce using rule 65 (expr)


State 116

   61 expr: expr . ADD expr
   62     | expr . SUB expr
   65     | expr . MUL expr
   66     | expr . DIV expr
   66     | expr DIV expr .
   67     | expr . MOD expr

    $default  reduce using rule 66 (expr)


State 117

   61 expr: expr . ADD expr
   62     | expr . SUB expr
   65     | expr . MUL expr
   66     | expr . DIV expr
   67     | expr . MOD expr
   67     | expr MOD expr .

    $default  reduce using rule 67 (expr)


State 118

   26 printf: PRINTF LPAREN STRING COMMA . exprs RPAREN

    LPAREN      shift, and go to state 66
    IDENTIFIER  shift, and go to state 29
    INTEGER     shift, and go to state 30
    CHAR        shift, and go to state 31
    STRING      shift, and go to state 32
    ADD         shift, and go to state 33
    SUB         shift, and go to state 34

    exprs  go to state 130
    expr   go to state 131


State 119

   25 printf: PRINTF LPAREN STRING RPAREN .

    $default  reduce using rule 25 (printf)


State 120

   27 scanf: SCANF LPAREN STRING COMMA . address_idlist RPAREN

    GET_ADDRESS  shift, and go to state 132

    address_idlist  go to state 133
    get_address_id  go to state 134


State 121

   20 function_use: IDENTIFIER LPAREN idlist RPAREN .

    $default  reduce using rule 20 (function_use)


State 122

   17 function_decl: T IDENTIFIER LPAREN RPAREN .

    $default  reduce using rule 17 (function_decl)


State 123

   18 function_decl: T IDENTIFIER LPAREN params . RPAREN
   19 function_def: T IDENTIFIER LPAREN params . RPAREN LBRACE statements RBRACE
   22 params: params . COMMA param

    COMMA   shift, and go to state 135
    RPAREN  shift, and go to state 136


State 124

   23 params: param .

    $default  reduce using rule 23 (params)


State 125

   24 param: T . IDENTIFIER

    IDENTIFIER  shift, and go to state 137


State 126

   50 assign: IDENTIFIER . LOP_ASSIGN expr

    LOP_ASSIGN  shift, and go to state 44


State 127

   48 assigns: assigns COMMA assign .

    $default  reduce using rule 48 (assigns)


State 128

   56 idlist: idlist COMMA IDENTIFIER .

    $default  reduce using rule 56 (idlist)


State 129

    3 statements: statements . statement
   32 if_else: IF bool_statements statements ELSE statements .

    IF              shift, and go to state 1
    WHILE           shift, and go to state 2
    T_CHAR          shift, and go to state 3
    T_INT           shift, and go to state 4
    T_STRING        shift, and go to state 5
    T_BOOL          shift, and go to state 6
    T_INT_POINTER   shift, and go to state 7
    T_CHAR_POINTER  shift, and go to state 8
    PRINTF          shift, and go to state 9
    SCANF           shift, and go to state 10
    SEMICOLON       shift, and go to state 11
    IDENTIFIER      shift, and go to state 13

    IF              [reduce using rule 32 (if_else)]
    WHILE           [reduce using rule 32 (if_else)]
    T_CHAR          [reduce using rule 32 (if_else)]
    T_INT           [reduce using rule 32 (if_else)]
    T_STRING        [reduce using rule 32 (if_else)]
    T_BOOL          [reduce using rule 32 (if_else)]
    T_INT_POINTER   [reduce using rule 32 (if_else)]
    T_CHAR_POINTER  [reduce using rule 32 (if_else)]
    PRINTF          [reduce using rule 32 (if_else)]
    SCANF           [reduce using rule 32 (if_else)]
    SEMICOLON       [reduce using rule 32 (if_else)]
    IDENTIFIER      [reduce using rule 32 (if_else)]
    $default        reduce using rule 32 (if_else)

    statement      go to state 52
    function_decl  go to state 17
    function_def   go to state 18
    function_use   go to state 19
    printf         go to state 20
    scanf          go to state 21
    while          go to state 22
    if_else        go to state 23
    declaration    go to state 24
    assign         go to state 25
    opassign       go to state 26
    T              go to state 27


State 130

   26 printf: PRINTF LPAREN STRING COMMA exprs . RPAREN
   58 exprs: exprs . COMMA expr

    COMMA   shift, and go to state 138
    RPAREN  shift, and go to state 139


State 131

   59 exprs: expr .
   61 expr: expr . ADD expr
   62     | expr . SUB expr
   65     | expr . MUL expr
   66     | expr . DIV expr
   67     | expr . MOD expr

    ADD  shift, and go to state 80
    SUB  shift, and go to state 81
    MUL  shift, and go to state 82
    DIV  shift, and go to state 83
    MOD  shift, and go to state 84

    $default  reduce using rule 59 (exprs)


State 132

   30 get_address_id: GET_ADDRESS . IDENTIFIER

    IDENTIFIER  shift, and go to state 140


State 133

   27 scanf: SCANF LPAREN STRING COMMA address_idlist . RPAREN
   28 address_idlist: address_idlist . COMMA get_address_id

    COMMA   shift, and go to state 141
    RPAREN  shift, and go to state 142


State 134

   29 address_idlist: get_address_id .

    $default  reduce using rule 29 (address_idlist)


State 135

   22 params: params COMMA . param

    T_CHAR          shift, and go to state 3
    T_INT           shift, and go to state 4
    T_STRING        shift, and go to state 5
    T_BOOL          shift, and go to state 6
    T_INT_POINTER   shift, and go to state 7
    T_CHAR_POINTER  shift, and go to state 8

    param  go to state 143
    T      go to state 125


State 136

   18 function_decl: T IDENTIFIER LPAREN params RPAREN .
   19 function_def: T IDENTIFIER LPAREN params RPAREN . LBRACE statements RBRACE

    LBRACE  shift, and go to state 144

    $default  reduce using rule 18 (function_decl)


State 137

   24 param: T IDENTIFIER .

    $default  reduce using rule 24 (param)


State 138

   58 exprs: exprs COMMA . expr

    LPAREN      shift, and go to state 66
    IDENTIFIER  shift, and go to state 29
    INTEGER     shift, and go to state 30
    CHAR        shift, and go to state 31
    STRING      shift, and go to state 32
    ADD         shift, and go to state 33
    SUB         shift, and go to state 34

    expr  go to state 145


State 139

   26 printf: PRINTF LPAREN STRING COMMA exprs RPAREN .

    $default  reduce using rule 26 (printf)


State 140

   30 get_address_id: GET_ADDRESS IDENTIFIER .

    $default  reduce using rule 30 (get_address_id)


State 141

   28 address_idlist: address_idlist COMMA . get_address_id

    GET_ADDRESS  shift, and go to state 132

    get_address_id  go to state 146


State 142

   27 scanf: SCANF LPAREN STRING COMMA address_idlist RPAREN .

    $default  reduce using rule 27 (scanf)


State 143

   22 params: params COMMA param .

    $default  reduce using rule 22 (params)


State 144

   19 function_def: T IDENTIFIER LPAREN params RPAREN LBRACE . statements RBRACE

    IF              shift, and go to state 1
    WHILE           shift, and go to state 2
    T_CHAR          shift, and go to state 3
    T_INT           shift, and go to state 4
    T_STRING        shift, and go to state 5
    T_BOOL          shift, and go to state 6
    T_INT_POINTER   shift, and go to state 7
    T_CHAR_POINTER  shift, and go to state 8
    PRINTF          shift, and go to state 9
    SCANF           shift, and go to state 10
    SEMICOLON       shift, and go to state 11
    LBRACE          shift, and go to state 12
    IDENTIFIER      shift, and go to state 13

    statements     go to state 147
    statement      go to state 16
    function_decl  go to state 17
    function_def   go to state 18
    function_use   go to state 19
    printf         go to state 20
    scanf          go to state 21
    while          go to state 22
    if_else        go to state 23
    declaration    go to state 24
    assign         go to state 25
    opassign       go to state 26
    T              go to state 27


State 145

   58 exprs: exprs COMMA expr .
   61 expr: expr . ADD expr
   62     | expr . SUB expr
   65     | expr . MUL expr
   66     | expr . DIV expr
   67     | expr . MOD expr

    ADD  shift, and go to state 80
    SUB  shift, and go to state 81
    MUL  shift, and go to state 82
    DIV  shift, and go to state 83
    MOD  shift, and go to state 84

    $default  reduce using rule 58 (exprs)


State 146

   28 address_idlist: address_idlist COMMA get_address_id .

    $default  reduce using rule 28 (address_idlist)


State 147

    3 statements: statements . statement
   19 function_def: T IDENTIFIER LPAREN params RPAREN LBRACE statements . RBRACE

    IF              shift, and go to state 1
    WHILE           shift, and go to state 2
    T_CHAR          shift, and go to state 3
    T_INT           shift, and go to state 4
    T_STRING        shift, and go to state 5
    T_BOOL          shift, and go to state 6
    T_INT_POINTER   shift, and go to state 7
    T_CHAR_POINTER  shift, and go to state 8
    PRINTF          shift, and go to state 9
    SCANF           shift, and go to state 10
    SEMICOLON       shift, and go to state 11
    RBRACE          shift, and go to state 148
    IDENTIFIER      shift, and go to state 13

    statement      go to state 52
    function_decl  go to state 17
    function_def   go to state 18
    function_use   go to state 19
    printf         go to state 20
    scanf          go to state 21
    while          go to state 22
    if_else        go to state 23
    declaration    go to state 24
    assign         go to state 25
    opassign       go to state 26
    T              go to state 27


State 148

   19 function_def: T IDENTIFIER LPAREN params RPAREN LBRACE statements RBRACE .

    $default  reduce using rule 19 (function_def)

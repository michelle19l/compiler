Terminals unused in grammar

   POINT
   LBRACK
   RBRACK
   BOOL
   GET_VALUE


State 48 conflicts: 1 reduce/reduce
State 75 conflicts: 1 shift/reduce
State 77 conflicts: 1 shift/reduce
State 86 conflicts: 1 shift/reduce
State 108 conflicts: 18 reduce/reduce


Grammar

    0 $accept: program $end

    1 program: statements

    2 statements: statement
    3           | statements statement
    4           | LBRACE statements RBRACE
    5           | block

    6 statement: SEMICOLON
    7          | declaration SEMICOLON
    8          | eq_assign SEMICOLON
    9          | if_else
   10          | while
   11          | printf SEMICOLON
   12          | scanf SEMICOLON
   13          | function_decl SEMICOLON
   14          | function_def
   15          | function_use SEMICOLON
   16          | for
   17          | opassign SEMICOLON
   18          | return SEMICOLON

   19 return: RETURN expr
   20       | RETURN bool_statements

   21 for: FOR LPAREN declarations SEMICOLON bool_statements SEMICOLON assigns RPAREN block
   22    | FOR LPAREN SEMICOLON bool_statements SEMICOLON assigns RPAREN block

   23 function_decl: T IDENTIFIER LPAREN RPAREN
   24              | T IDENTIFIER LPAREN params RPAREN

   25 function_def: T IDENTIFIER LPAREN params RPAREN LBRACE statements RBRACE

   26 function_use: IDENTIFIER LPAREN idlist RPAREN
   27             | IDENTIFIER LPAREN RPAREN

   28 params: params COMMA param
   29       | param

   30 param: T IDENTIFIER

   31 printf: PRINTF LPAREN STRING RPAREN
   32       | PRINTF LPAREN STRING COMMA exprs RPAREN
   33       | PRINTF LPAREN idlist RPAREN

   34 scanf: SCANF LPAREN STRING COMMA address_idlist RPAREN

   35 address_idlist: address_idlist COMMA get_address_id
   36               | get_address_id

   37 get_address_id: GET_ADDRESS IDENTIFIER

   38 while: WHILE LPAREN bool_statements RPAREN block

   39 block: LBRACE statements RBRACE
   40      | LBRACE RBRACE

   41 if_else: IF LPAREN bool_statements RPAREN block ELSE block
   42        | IF LPAREN bool_statements RPAREN block

   43 bool_statements: LPAREN bool_statements RPAREN
   44                | bool_statements AND bool_statements
   45                | bool_statements OR bool_statements
   46                | NOT bool_statements
   47                | bool_statement

   48 bool_statement: expr
   49               | bool_statement GREAT bool_statement
   50               | bool_statement LESS bool_statement
   51               | bool_statement GREAT_EQ bool_statement
   52               | bool_statement LESS_EQ bool_statement
   53               | bool_statement LOP_EQ bool_statement
   54               | bool_statement NOT_EQ bool_statement

   55 declarations: declarations COMMA declaration
   56             | declaration

   57 declaration: T eq_assigns
   58            | T idlist

   59 assigns: assigns COMMA eq_assign
   60        | assigns COMMA opassign
   61        | eq_assign
   62        | opassign

   63 eq_assigns: eq_assigns COMMA eq_assign
   64           | eq_assign

   65 eq_assign: IDENTIFIER LOP_ASSIGN expr

   66 opassign: IDENTIFIER ADD_ASSIGN expr
   67         | IDENTIFIER SUB_ASSIGN expr
   68         | IDENTIFIER MUL_ASSIGN expr
   69         | IDENTIFIER DIV_ASSIGN expr
   70         | IDENTIFIER MOD_ASSIGN expr
   71         | SELF_DEC IDENTIFIER
   72         | SELF_INC IDENTIFIER
   73         | IDENTIFIER SELF_INC
   74         | IDENTIFIER SELF_DEC

   75 idlist: idlist COMMA IDENTIFIER
   76       | IDENTIFIER

   77 exprs: exprs COMMA expr
   78      | expr

   79 expr: LPAREN expr RPAREN
   80     | expr ADD expr
   81     | expr SUB expr
   82     | SUB expr
   83     | ADD expr
   84     | expr MUL expr
   85     | expr DIV expr
   86     | expr MOD expr
   87     | IDENTIFIER
   88     | INTEGER
   89     | CHAR
   90     | STRING

   91 T: T_INT
   92  | T_CHAR
   93  | T_BOOL
   94  | T_STRING
   95  | T_INT_POINTER
   96  | T_CHAR_POINTER


Terminals, with rules where they appear

$end (0) 0
error (256)
IF (258) 41 42
ELSE (259) 41
WHILE (260) 38
FOR (261) 21 22
RETURN (262) 19 20
T_CHAR (263) 92
T_INT (264) 91
T_STRING (265) 94
T_BOOL (266) 93
T_INT_POINTER (267) 95
T_CHAR_POINTER (268) 96
PRINTF (269) 31 32 33
SCANF (270) 34
LOP_ASSIGN (271) 65
ADD_ASSIGN (272) 66
SUB_ASSIGN (273) 67
MOD_ASSIGN (274) 70
DIV_ASSIGN (275) 69
MUL_ASSIGN (276) 68
SEMICOLON (277) 6 7 8 11 12 13 15 17 18 21 22
COMMA (278) 28 32 34 35 55 59 60 63 75 77
POINT (279)
LPAREN (280) 21 22 23 24 25 26 27 31 32 33 34 38 41 42 43 79
RPAREN (281) 21 22 23 24 25 26 27 31 32 33 34 38 41 42 43 79
LBRACK (282)
RBRACK (283)
LBRACE (284) 4 25 39 40
RBRACE (285) 4 25 39 40
IDENTIFIER (286) 23 24 25 26 27 30 37 65 66 67 68 69 70 71 72 73 74
    75 76 87
INTEGER (287) 88
CHAR (288) 89
BOOL (289)
STRING (290) 31 32 34 90
LOP_EQ (291) 53
GREAT (292) 49
LESS (293) 50
GREAT_EQ (294) 51
LESS_EQ (295) 52
NOT_EQ (296) 54
ADD (297) 80 83
SUB (298) 81 82
MUL (299) 84
DIV (300) 85
MOD (301) 86
OR (302) 45
AND (303) 44
NOT (304) 46
NEG (305)
POS (306)
SELF_INC (307) 72 73
SELF_DEC (308) 71 74
SELF_INC_R (309)
SELF_DEC_R (310)
SELF_INC_L (311)
SELF_DEC_L (312)
GET_ADDRESS (313) 37
GET_VALUE (314)


Nonterminals, with rules where they appear

$accept (60)
    on left: 0
program (61)
    on left: 1, on right: 0
statements (62)
    on left: 2 3 4 5, on right: 1 3 4 25 39
statement (63)
    on left: 6 7 8 9 10 11 12 13 14 15 16 17 18, on right: 2 3
return (64)
    on left: 19 20, on right: 18
for (65)
    on left: 21 22, on right: 16
function_decl (66)
    on left: 23 24, on right: 13
function_def (67)
    on left: 25, on right: 14
function_use (68)
    on left: 26 27, on right: 15
params (69)
    on left: 28 29, on right: 24 25 28
param (70)
    on left: 30, on right: 28 29
printf (71)
    on left: 31 32 33, on right: 11
scanf (72)
    on left: 34, on right: 12
address_idlist (73)
    on left: 35 36, on right: 34 35
get_address_id (74)
    on left: 37, on right: 35 36
while (75)
    on left: 38, on right: 10
block (76)
    on left: 39 40, on right: 5 21 22 38 41 42
if_else (77)
    on left: 41 42, on right: 9
bool_statements (78)
    on left: 43 44 45 46 47, on right: 20 21 22 38 41 42 43 44 45 46
bool_statement (79)
    on left: 48 49 50 51 52 53 54, on right: 47 49 50 51 52 53 54
declarations (80)
    on left: 55 56, on right: 21 55
declaration (81)
    on left: 57 58, on right: 7 55 56
assigns (82)
    on left: 59 60 61 62, on right: 21 22 59 60
eq_assigns (83)
    on left: 63 64, on right: 57 63
eq_assign (84)
    on left: 65, on right: 8 59 61 63 64
opassign (85)
    on left: 66 67 68 69 70 71 72 73 74, on right: 17 60 62
idlist (86)
    on left: 75 76, on right: 26 33 58 75
exprs (87)
    on left: 77 78, on right: 32 77
expr (88)
    on left: 79 80 81 82 83 84 85 86 87 88 89 90, on right: 19 48 65
    66 67 68 69 70 77 78 79 80 81 82 83 84 85 86
T (89)
    on left: 91 92 93 94 95 96, on right: 23 24 25 30 57 58


State 0

    0 $accept: . program $end

    IF              shift, and go to state 1
    WHILE           shift, and go to state 2
    FOR             shift, and go to state 3
    RETURN          shift, and go to state 4
    T_CHAR          shift, and go to state 5
    T_INT           shift, and go to state 6
    T_STRING        shift, and go to state 7
    T_BOOL          shift, and go to state 8
    T_INT_POINTER   shift, and go to state 9
    T_CHAR_POINTER  shift, and go to state 10
    PRINTF          shift, and go to state 11
    SCANF           shift, and go to state 12
    SEMICOLON       shift, and go to state 13
    LBRACE          shift, and go to state 14
    IDENTIFIER      shift, and go to state 15
    SELF_INC        shift, and go to state 16
    SELF_DEC        shift, and go to state 17

    program        go to state 18
    statements     go to state 19
    statement      go to state 20
    return         go to state 21
    for            go to state 22
    function_decl  go to state 23
    function_def   go to state 24
    function_use   go to state 25
    printf         go to state 26
    scanf          go to state 27
    while          go to state 28
    block          go to state 29
    if_else        go to state 30
    declaration    go to state 31
    eq_assign      go to state 32
    opassign       go to state 33
    T              go to state 34


State 1

   41 if_else: IF . LPAREN bool_statements RPAREN block ELSE block
   42        | IF . LPAREN bool_statements RPAREN block

    LPAREN  shift, and go to state 35


State 2

   38 while: WHILE . LPAREN bool_statements RPAREN block

    LPAREN  shift, and go to state 36


State 3

   21 for: FOR . LPAREN declarations SEMICOLON bool_statements SEMICOLON assigns RPAREN block
   22    | FOR . LPAREN SEMICOLON bool_statements SEMICOLON assigns RPAREN block

    LPAREN  shift, and go to state 37


State 4

   19 return: RETURN . expr
   20       | RETURN . bool_statements

    LPAREN      shift, and go to state 38
    IDENTIFIER  shift, and go to state 39
    INTEGER     shift, and go to state 40
    CHAR        shift, and go to state 41
    STRING      shift, and go to state 42
    ADD         shift, and go to state 43
    SUB         shift, and go to state 44
    NOT         shift, and go to state 45

    bool_statements  go to state 46
    bool_statement   go to state 47
    expr             go to state 48


State 5

   92 T: T_CHAR .

    $default  reduce using rule 92 (T)


State 6

   91 T: T_INT .

    $default  reduce using rule 91 (T)


State 7

   94 T: T_STRING .

    $default  reduce using rule 94 (T)


State 8

   93 T: T_BOOL .

    $default  reduce using rule 93 (T)


State 9

   95 T: T_INT_POINTER .

    $default  reduce using rule 95 (T)


State 10

   96 T: T_CHAR_POINTER .

    $default  reduce using rule 96 (T)


State 11

   31 printf: PRINTF . LPAREN STRING RPAREN
   32       | PRINTF . LPAREN STRING COMMA exprs RPAREN
   33       | PRINTF . LPAREN idlist RPAREN

    LPAREN  shift, and go to state 49


State 12

   34 scanf: SCANF . LPAREN STRING COMMA address_idlist RPAREN

    LPAREN  shift, and go to state 50


State 13

    6 statement: SEMICOLON .

    $default  reduce using rule 6 (statement)


State 14

    4 statements: LBRACE . statements RBRACE
   39 block: LBRACE . statements RBRACE
   40      | LBRACE . RBRACE

    IF              shift, and go to state 1
    WHILE           shift, and go to state 2
    FOR             shift, and go to state 3
    RETURN          shift, and go to state 4
    T_CHAR          shift, and go to state 5
    T_INT           shift, and go to state 6
    T_STRING        shift, and go to state 7
    T_BOOL          shift, and go to state 8
    T_INT_POINTER   shift, and go to state 9
    T_CHAR_POINTER  shift, and go to state 10
    PRINTF          shift, and go to state 11
    SCANF           shift, and go to state 12
    SEMICOLON       shift, and go to state 13
    LBRACE          shift, and go to state 14
    RBRACE          shift, and go to state 51
    IDENTIFIER      shift, and go to state 15
    SELF_INC        shift, and go to state 16
    SELF_DEC        shift, and go to state 17

    statements     go to state 52
    statement      go to state 20
    return         go to state 21
    for            go to state 22
    function_decl  go to state 23
    function_def   go to state 24
    function_use   go to state 25
    printf         go to state 26
    scanf          go to state 27
    while          go to state 28
    block          go to state 29
    if_else        go to state 30
    declaration    go to state 31
    eq_assign      go to state 32
    opassign       go to state 33
    T              go to state 34


State 15

   26 function_use: IDENTIFIER . LPAREN idlist RPAREN
   27             | IDENTIFIER . LPAREN RPAREN
   65 eq_assign: IDENTIFIER . LOP_ASSIGN expr
   66 opassign: IDENTIFIER . ADD_ASSIGN expr
   67         | IDENTIFIER . SUB_ASSIGN expr
   68         | IDENTIFIER . MUL_ASSIGN expr
   69         | IDENTIFIER . DIV_ASSIGN expr
   70         | IDENTIFIER . MOD_ASSIGN expr
   73         | IDENTIFIER . SELF_INC
   74         | IDENTIFIER . SELF_DEC

    LOP_ASSIGN  shift, and go to state 53
    ADD_ASSIGN  shift, and go to state 54
    SUB_ASSIGN  shift, and go to state 55
    MOD_ASSIGN  shift, and go to state 56
    DIV_ASSIGN  shift, and go to state 57
    MUL_ASSIGN  shift, and go to state 58
    LPAREN      shift, and go to state 59
    SELF_INC    shift, and go to state 60
    SELF_DEC    shift, and go to state 61


State 16

   72 opassign: SELF_INC . IDENTIFIER

    IDENTIFIER  shift, and go to state 62


State 17

   71 opassign: SELF_DEC . IDENTIFIER

    IDENTIFIER  shift, and go to state 63


State 18

    0 $accept: program . $end

    $end  shift, and go to state 64


State 19

    1 program: statements .
    3 statements: statements . statement

    IF              shift, and go to state 1
    WHILE           shift, and go to state 2
    FOR             shift, and go to state 3
    RETURN          shift, and go to state 4
    T_CHAR          shift, and go to state 5
    T_INT           shift, and go to state 6
    T_STRING        shift, and go to state 7
    T_BOOL          shift, and go to state 8
    T_INT_POINTER   shift, and go to state 9
    T_CHAR_POINTER  shift, and go to state 10
    PRINTF          shift, and go to state 11
    SCANF           shift, and go to state 12
    SEMICOLON       shift, and go to state 13
    IDENTIFIER      shift, and go to state 15
    SELF_INC        shift, and go to state 16
    SELF_DEC        shift, and go to state 17

    $default  reduce using rule 1 (program)

    statement      go to state 65
    return         go to state 21
    for            go to state 22
    function_decl  go to state 23
    function_def   go to state 24
    function_use   go to state 25
    printf         go to state 26
    scanf          go to state 27
    while          go to state 28
    if_else        go to state 30
    declaration    go to state 31
    eq_assign      go to state 32
    opassign       go to state 33
    T              go to state 34


State 20

    2 statements: statement .

    $default  reduce using rule 2 (statements)


State 21

   18 statement: return . SEMICOLON

    SEMICOLON  shift, and go to state 66


State 22

   16 statement: for .

    $default  reduce using rule 16 (statement)


State 23

   13 statement: function_decl . SEMICOLON

    SEMICOLON  shift, and go to state 67


State 24

   14 statement: function_def .

    $default  reduce using rule 14 (statement)


State 25

   15 statement: function_use . SEMICOLON

    SEMICOLON  shift, and go to state 68


State 26

   11 statement: printf . SEMICOLON

    SEMICOLON  shift, and go to state 69


State 27

   12 statement: scanf . SEMICOLON

    SEMICOLON  shift, and go to state 70


State 28

   10 statement: while .

    $default  reduce using rule 10 (statement)


State 29

    5 statements: block .

    $default  reduce using rule 5 (statements)


State 30

    9 statement: if_else .

    $default  reduce using rule 9 (statement)


State 31

    7 statement: declaration . SEMICOLON

    SEMICOLON  shift, and go to state 71


State 32

    8 statement: eq_assign . SEMICOLON

    SEMICOLON  shift, and go to state 72


State 33

   17 statement: opassign . SEMICOLON

    SEMICOLON  shift, and go to state 73


State 34

   23 function_decl: T . IDENTIFIER LPAREN RPAREN
   24              | T . IDENTIFIER LPAREN params RPAREN
   25 function_def: T . IDENTIFIER LPAREN params RPAREN LBRACE statements RBRACE
   57 declaration: T . eq_assigns
   58            | T . idlist

    IDENTIFIER  shift, and go to state 74

    eq_assigns  go to state 75
    eq_assign   go to state 76
    idlist      go to state 77


State 35

   41 if_else: IF LPAREN . bool_statements RPAREN block ELSE block
   42        | IF LPAREN . bool_statements RPAREN block

    LPAREN      shift, and go to state 38
    IDENTIFIER  shift, and go to state 39
    INTEGER     shift, and go to state 40
    CHAR        shift, and go to state 41
    STRING      shift, and go to state 42
    ADD         shift, and go to state 43
    SUB         shift, and go to state 44
    NOT         shift, and go to state 45

    bool_statements  go to state 78
    bool_statement   go to state 47
    expr             go to state 79


State 36

   38 while: WHILE LPAREN . bool_statements RPAREN block

    LPAREN      shift, and go to state 38
    IDENTIFIER  shift, and go to state 39
    INTEGER     shift, and go to state 40
    CHAR        shift, and go to state 41
    STRING      shift, and go to state 42
    ADD         shift, and go to state 43
    SUB         shift, and go to state 44
    NOT         shift, and go to state 45

    bool_statements  go to state 80
    bool_statement   go to state 47
    expr             go to state 79


State 37

   21 for: FOR LPAREN . declarations SEMICOLON bool_statements SEMICOLON assigns RPAREN block
   22    | FOR LPAREN . SEMICOLON bool_statements SEMICOLON assigns RPAREN block

    T_CHAR          shift, and go to state 5
    T_INT           shift, and go to state 6
    T_STRING        shift, and go to state 7
    T_BOOL          shift, and go to state 8
    T_INT_POINTER   shift, and go to state 9
    T_CHAR_POINTER  shift, and go to state 10
    SEMICOLON       shift, and go to state 81

    declarations  go to state 82
    declaration   go to state 83
    T             go to state 84


State 38

   43 bool_statements: LPAREN . bool_statements RPAREN
   79 expr: LPAREN . expr RPAREN

    LPAREN      shift, and go to state 38
    IDENTIFIER  shift, and go to state 39
    INTEGER     shift, and go to state 40
    CHAR        shift, and go to state 41
    STRING      shift, and go to state 42
    ADD         shift, and go to state 43
    SUB         shift, and go to state 44
    NOT         shift, and go to state 45

    bool_statements  go to state 85
    bool_statement   go to state 47
    expr             go to state 86


State 39

   87 expr: IDENTIFIER .

    $default  reduce using rule 87 (expr)


State 40

   88 expr: INTEGER .

    $default  reduce using rule 88 (expr)


State 41

   89 expr: CHAR .

    $default  reduce using rule 89 (expr)


State 42

   90 expr: STRING .

    $default  reduce using rule 90 (expr)


State 43

   83 expr: ADD . expr

    LPAREN      shift, and go to state 87
    IDENTIFIER  shift, and go to state 39
    INTEGER     shift, and go to state 40
    CHAR        shift, and go to state 41
    STRING      shift, and go to state 42
    ADD         shift, and go to state 43
    SUB         shift, and go to state 44

    expr  go to state 88


State 44

   82 expr: SUB . expr

    LPAREN      shift, and go to state 87
    IDENTIFIER  shift, and go to state 39
    INTEGER     shift, and go to state 40
    CHAR        shift, and go to state 41
    STRING      shift, and go to state 42
    ADD         shift, and go to state 43
    SUB         shift, and go to state 44

    expr  go to state 89


State 45

   46 bool_statements: NOT . bool_statements

    LPAREN      shift, and go to state 38
    IDENTIFIER  shift, and go to state 39
    INTEGER     shift, and go to state 40
    CHAR        shift, and go to state 41
    STRING      shift, and go to state 42
    ADD         shift, and go to state 43
    SUB         shift, and go to state 44
    NOT         shift, and go to state 45

    bool_statements  go to state 90
    bool_statement   go to state 47
    expr             go to state 79


State 46

   20 return: RETURN bool_statements .
   44 bool_statements: bool_statements . AND bool_statements
   45                | bool_statements . OR bool_statements

    OR   shift, and go to state 91
    AND  shift, and go to state 92

    $default  reduce using rule 20 (return)


State 47

   47 bool_statements: bool_statement .
   49 bool_statement: bool_statement . GREAT bool_statement
   50               | bool_statement . LESS bool_statement
   51               | bool_statement . GREAT_EQ bool_statement
   52               | bool_statement . LESS_EQ bool_statement
   53               | bool_statement . LOP_EQ bool_statement
   54               | bool_statement . NOT_EQ bool_statement

    LOP_EQ    shift, and go to state 93
    GREAT     shift, and go to state 94
    LESS      shift, and go to state 95
    GREAT_EQ  shift, and go to state 96
    LESS_EQ   shift, and go to state 97
    NOT_EQ    shift, and go to state 98

    $default  reduce using rule 47 (bool_statements)


State 48

   19 return: RETURN expr .
   48 bool_statement: expr .
   80 expr: expr . ADD expr
   81     | expr . SUB expr
   84     | expr . MUL expr
   85     | expr . DIV expr
   86     | expr . MOD expr

    ADD  shift, and go to state 99
    SUB  shift, and go to state 100
    MUL  shift, and go to state 101
    DIV  shift, and go to state 102
    MOD  shift, and go to state 103

    SEMICOLON  reduce using rule 19 (return)
    SEMICOLON  [reduce using rule 48 (bool_statement)]
    $default   reduce using rule 48 (bool_statement)


State 49

   31 printf: PRINTF LPAREN . STRING RPAREN
   32       | PRINTF LPAREN . STRING COMMA exprs RPAREN
   33       | PRINTF LPAREN . idlist RPAREN

    IDENTIFIER  shift, and go to state 104
    STRING      shift, and go to state 105

    idlist  go to state 106


State 50

   34 scanf: SCANF LPAREN . STRING COMMA address_idlist RPAREN

    STRING  shift, and go to state 107


State 51

   40 block: LBRACE RBRACE .

    $default  reduce using rule 40 (block)


State 52

    3 statements: statements . statement
    4           | LBRACE statements . RBRACE
   39 block: LBRACE statements . RBRACE

    IF              shift, and go to state 1
    WHILE           shift, and go to state 2
    FOR             shift, and go to state 3
    RETURN          shift, and go to state 4
    T_CHAR          shift, and go to state 5
    T_INT           shift, and go to state 6
    T_STRING        shift, and go to state 7
    T_BOOL          shift, and go to state 8
    T_INT_POINTER   shift, and go to state 9
    T_CHAR_POINTER  shift, and go to state 10
    PRINTF          shift, and go to state 11
    SCANF           shift, and go to state 12
    SEMICOLON       shift, and go to state 13
    RBRACE          shift, and go to state 108
    IDENTIFIER      shift, and go to state 15
    SELF_INC        shift, and go to state 16
    SELF_DEC        shift, and go to state 17

    statement      go to state 65
    return         go to state 21
    for            go to state 22
    function_decl  go to state 23
    function_def   go to state 24
    function_use   go to state 25
    printf         go to state 26
    scanf          go to state 27
    while          go to state 28
    if_else        go to state 30
    declaration    go to state 31
    eq_assign      go to state 32
    opassign       go to state 33
    T              go to state 34


State 53

   65 eq_assign: IDENTIFIER LOP_ASSIGN . expr

    LPAREN      shift, and go to state 87
    IDENTIFIER  shift, and go to state 39
    INTEGER     shift, and go to state 40
    CHAR        shift, and go to state 41
    STRING      shift, and go to state 42
    ADD         shift, and go to state 43
    SUB         shift, and go to state 44

    expr  go to state 109


State 54

   66 opassign: IDENTIFIER ADD_ASSIGN . expr

    LPAREN      shift, and go to state 87
    IDENTIFIER  shift, and go to state 39
    INTEGER     shift, and go to state 40
    CHAR        shift, and go to state 41
    STRING      shift, and go to state 42
    ADD         shift, and go to state 43
    SUB         shift, and go to state 44

    expr  go to state 110


State 55

   67 opassign: IDENTIFIER SUB_ASSIGN . expr

    LPAREN      shift, and go to state 87
    IDENTIFIER  shift, and go to state 39
    INTEGER     shift, and go to state 40
    CHAR        shift, and go to state 41
    STRING      shift, and go to state 42
    ADD         shift, and go to state 43
    SUB         shift, and go to state 44

    expr  go to state 111


State 56

   70 opassign: IDENTIFIER MOD_ASSIGN . expr

    LPAREN      shift, and go to state 87
    IDENTIFIER  shift, and go to state 39
    INTEGER     shift, and go to state 40
    CHAR        shift, and go to state 41
    STRING      shift, and go to state 42
    ADD         shift, and go to state 43
    SUB         shift, and go to state 44

    expr  go to state 112


State 57

   69 opassign: IDENTIFIER DIV_ASSIGN . expr

    LPAREN      shift, and go to state 87
    IDENTIFIER  shift, and go to state 39
    INTEGER     shift, and go to state 40
    CHAR        shift, and go to state 41
    STRING      shift, and go to state 42
    ADD         shift, and go to state 43
    SUB         shift, and go to state 44

    expr  go to state 113


State 58

   68 opassign: IDENTIFIER MUL_ASSIGN . expr

    LPAREN      shift, and go to state 87
    IDENTIFIER  shift, and go to state 39
    INTEGER     shift, and go to state 40
    CHAR        shift, and go to state 41
    STRING      shift, and go to state 42
    ADD         shift, and go to state 43
    SUB         shift, and go to state 44

    expr  go to state 114


State 59

   26 function_use: IDENTIFIER LPAREN . idlist RPAREN
   27             | IDENTIFIER LPAREN . RPAREN

    RPAREN      shift, and go to state 115
    IDENTIFIER  shift, and go to state 104

    idlist  go to state 116


State 60

   73 opassign: IDENTIFIER SELF_INC .

    $default  reduce using rule 73 (opassign)


State 61

   74 opassign: IDENTIFIER SELF_DEC .

    $default  reduce using rule 74 (opassign)


State 62

   72 opassign: SELF_INC IDENTIFIER .

    $default  reduce using rule 72 (opassign)


State 63

   71 opassign: SELF_DEC IDENTIFIER .

    $default  reduce using rule 71 (opassign)


State 64

    0 $accept: program $end .

    $default  accept


State 65

    3 statements: statements statement .

    $default  reduce using rule 3 (statements)


State 66

   18 statement: return SEMICOLON .

    $default  reduce using rule 18 (statement)


State 67

   13 statement: function_decl SEMICOLON .

    $default  reduce using rule 13 (statement)


State 68

   15 statement: function_use SEMICOLON .

    $default  reduce using rule 15 (statement)


State 69

   11 statement: printf SEMICOLON .

    $default  reduce using rule 11 (statement)


State 70

   12 statement: scanf SEMICOLON .

    $default  reduce using rule 12 (statement)


State 71

    7 statement: declaration SEMICOLON .

    $default  reduce using rule 7 (statement)


State 72

    8 statement: eq_assign SEMICOLON .

    $default  reduce using rule 8 (statement)


State 73

   17 statement: opassign SEMICOLON .

    $default  reduce using rule 17 (statement)


State 74

   23 function_decl: T IDENTIFIER . LPAREN RPAREN
   24              | T IDENTIFIER . LPAREN params RPAREN
   25 function_def: T IDENTIFIER . LPAREN params RPAREN LBRACE statements RBRACE
   65 eq_assign: IDENTIFIER . LOP_ASSIGN expr
   76 idlist: IDENTIFIER .

    LOP_ASSIGN  shift, and go to state 53
    LPAREN      shift, and go to state 117

    $default  reduce using rule 76 (idlist)


State 75

   57 declaration: T eq_assigns .
   63 eq_assigns: eq_assigns . COMMA eq_assign

    COMMA  shift, and go to state 118

    COMMA     [reduce using rule 57 (declaration)]
    $default  reduce using rule 57 (declaration)


State 76

   64 eq_assigns: eq_assign .

    $default  reduce using rule 64 (eq_assigns)


State 77

   58 declaration: T idlist .
   75 idlist: idlist . COMMA IDENTIFIER

    COMMA  shift, and go to state 119

    COMMA     [reduce using rule 58 (declaration)]
    $default  reduce using rule 58 (declaration)


State 78

   41 if_else: IF LPAREN bool_statements . RPAREN block ELSE block
   42        | IF LPAREN bool_statements . RPAREN block
   44 bool_statements: bool_statements . AND bool_statements
   45                | bool_statements . OR bool_statements

    RPAREN  shift, and go to state 120
    OR      shift, and go to state 91
    AND     shift, and go to state 92


State 79

   48 bool_statement: expr .
   80 expr: expr . ADD expr
   81     | expr . SUB expr
   84     | expr . MUL expr
   85     | expr . DIV expr
   86     | expr . MOD expr

    ADD  shift, and go to state 99
    SUB  shift, and go to state 100
    MUL  shift, and go to state 101
    DIV  shift, and go to state 102
    MOD  shift, and go to state 103

    $default  reduce using rule 48 (bool_statement)


State 80

   38 while: WHILE LPAREN bool_statements . RPAREN block
   44 bool_statements: bool_statements . AND bool_statements
   45                | bool_statements . OR bool_statements

    RPAREN  shift, and go to state 121
    OR      shift, and go to state 91
    AND     shift, and go to state 92


State 81

   22 for: FOR LPAREN SEMICOLON . bool_statements SEMICOLON assigns RPAREN block

    LPAREN      shift, and go to state 38
    IDENTIFIER  shift, and go to state 39
    INTEGER     shift, and go to state 40
    CHAR        shift, and go to state 41
    STRING      shift, and go to state 42
    ADD         shift, and go to state 43
    SUB         shift, and go to state 44
    NOT         shift, and go to state 45

    bool_statements  go to state 122
    bool_statement   go to state 47
    expr             go to state 79


State 82

   21 for: FOR LPAREN declarations . SEMICOLON bool_statements SEMICOLON assigns RPAREN block
   55 declarations: declarations . COMMA declaration

    SEMICOLON  shift, and go to state 123
    COMMA      shift, and go to state 124


State 83

   56 declarations: declaration .

    $default  reduce using rule 56 (declarations)


State 84

   57 declaration: T . eq_assigns
   58            | T . idlist

    IDENTIFIER  shift, and go to state 125

    eq_assigns  go to state 75
    eq_assign   go to state 76
    idlist      go to state 77


State 85

   43 bool_statements: LPAREN bool_statements . RPAREN
   44                | bool_statements . AND bool_statements
   45                | bool_statements . OR bool_statements

    RPAREN  shift, and go to state 126
    OR      shift, and go to state 91
    AND     shift, and go to state 92


State 86

   48 bool_statement: expr .
   79 expr: LPAREN expr . RPAREN
   80     | expr . ADD expr
   81     | expr . SUB expr
   84     | expr . MUL expr
   85     | expr . DIV expr
   86     | expr . MOD expr

    RPAREN  shift, and go to state 127
    ADD     shift, and go to state 99
    SUB     shift, and go to state 100
    MUL     shift, and go to state 101
    DIV     shift, and go to state 102
    MOD     shift, and go to state 103

    RPAREN    [reduce using rule 48 (bool_statement)]
    $default  reduce using rule 48 (bool_statement)


State 87

   79 expr: LPAREN . expr RPAREN

    LPAREN      shift, and go to state 87
    IDENTIFIER  shift, and go to state 39
    INTEGER     shift, and go to state 40
    CHAR        shift, and go to state 41
    STRING      shift, and go to state 42
    ADD         shift, and go to state 43
    SUB         shift, and go to state 44

    expr  go to state 128


State 88

   80 expr: expr . ADD expr
   81     | expr . SUB expr
   83     | ADD expr .
   84     | expr . MUL expr
   85     | expr . DIV expr
   86     | expr . MOD expr

    $default  reduce using rule 83 (expr)


State 89

   80 expr: expr . ADD expr
   81     | expr . SUB expr
   82     | SUB expr .
   84     | expr . MUL expr
   85     | expr . DIV expr
   86     | expr . MOD expr

    $default  reduce using rule 82 (expr)


State 90

   44 bool_statements: bool_statements . AND bool_statements
   45                | bool_statements . OR bool_statements
   46                | NOT bool_statements .

    $default  reduce using rule 46 (bool_statements)


State 91

   45 bool_statements: bool_statements OR . bool_statements

    LPAREN      shift, and go to state 38
    IDENTIFIER  shift, and go to state 39
    INTEGER     shift, and go to state 40
    CHAR        shift, and go to state 41
    STRING      shift, and go to state 42
    ADD         shift, and go to state 43
    SUB         shift, and go to state 44
    NOT         shift, and go to state 45

    bool_statements  go to state 129
    bool_statement   go to state 47
    expr             go to state 79


State 92

   44 bool_statements: bool_statements AND . bool_statements

    LPAREN      shift, and go to state 38
    IDENTIFIER  shift, and go to state 39
    INTEGER     shift, and go to state 40
    CHAR        shift, and go to state 41
    STRING      shift, and go to state 42
    ADD         shift, and go to state 43
    SUB         shift, and go to state 44
    NOT         shift, and go to state 45

    bool_statements  go to state 130
    bool_statement   go to state 47
    expr             go to state 79


State 93

   53 bool_statement: bool_statement LOP_EQ . bool_statement

    LPAREN      shift, and go to state 87
    IDENTIFIER  shift, and go to state 39
    INTEGER     shift, and go to state 40
    CHAR        shift, and go to state 41
    STRING      shift, and go to state 42
    ADD         shift, and go to state 43
    SUB         shift, and go to state 44

    bool_statement  go to state 131
    expr            go to state 79


State 94

   49 bool_statement: bool_statement GREAT . bool_statement

    LPAREN      shift, and go to state 87
    IDENTIFIER  shift, and go to state 39
    INTEGER     shift, and go to state 40
    CHAR        shift, and go to state 41
    STRING      shift, and go to state 42
    ADD         shift, and go to state 43
    SUB         shift, and go to state 44

    bool_statement  go to state 132
    expr            go to state 79


State 95

   50 bool_statement: bool_statement LESS . bool_statement

    LPAREN      shift, and go to state 87
    IDENTIFIER  shift, and go to state 39
    INTEGER     shift, and go to state 40
    CHAR        shift, and go to state 41
    STRING      shift, and go to state 42
    ADD         shift, and go to state 43
    SUB         shift, and go to state 44

    bool_statement  go to state 133
    expr            go to state 79


State 96

   51 bool_statement: bool_statement GREAT_EQ . bool_statement

    LPAREN      shift, and go to state 87
    IDENTIFIER  shift, and go to state 39
    INTEGER     shift, and go to state 40
    CHAR        shift, and go to state 41
    STRING      shift, and go to state 42
    ADD         shift, and go to state 43
    SUB         shift, and go to state 44

    bool_statement  go to state 134
    expr            go to state 79


State 97

   52 bool_statement: bool_statement LESS_EQ . bool_statement

    LPAREN      shift, and go to state 87
    IDENTIFIER  shift, and go to state 39
    INTEGER     shift, and go to state 40
    CHAR        shift, and go to state 41
    STRING      shift, and go to state 42
    ADD         shift, and go to state 43
    SUB         shift, and go to state 44

    bool_statement  go to state 135
    expr            go to state 79


State 98

   54 bool_statement: bool_statement NOT_EQ . bool_statement

    LPAREN      shift, and go to state 87
    IDENTIFIER  shift, and go to state 39
    INTEGER     shift, and go to state 40
    CHAR        shift, and go to state 41
    STRING      shift, and go to state 42
    ADD         shift, and go to state 43
    SUB         shift, and go to state 44

    bool_statement  go to state 136
    expr            go to state 79


State 99

   80 expr: expr ADD . expr

    LPAREN      shift, and go to state 87
    IDENTIFIER  shift, and go to state 39
    INTEGER     shift, and go to state 40
    CHAR        shift, and go to state 41
    STRING      shift, and go to state 42
    ADD         shift, and go to state 43
    SUB         shift, and go to state 44

    expr  go to state 137


State 100

   81 expr: expr SUB . expr

    LPAREN      shift, and go to state 87
    IDENTIFIER  shift, and go to state 39
    INTEGER     shift, and go to state 40
    CHAR        shift, and go to state 41
    STRING      shift, and go to state 42
    ADD         shift, and go to state 43
    SUB         shift, and go to state 44

    expr  go to state 138


State 101

   84 expr: expr MUL . expr

    LPAREN      shift, and go to state 87
    IDENTIFIER  shift, and go to state 39
    INTEGER     shift, and go to state 40
    CHAR        shift, and go to state 41
    STRING      shift, and go to state 42
    ADD         shift, and go to state 43
    SUB         shift, and go to state 44

    expr  go to state 139


State 102

   85 expr: expr DIV . expr

    LPAREN      shift, and go to state 87
    IDENTIFIER  shift, and go to state 39
    INTEGER     shift, and go to state 40
    CHAR        shift, and go to state 41
    STRING      shift, and go to state 42
    ADD         shift, and go to state 43
    SUB         shift, and go to state 44

    expr  go to state 140


State 103

   86 expr: expr MOD . expr

    LPAREN      shift, and go to state 87
    IDENTIFIER  shift, and go to state 39
    INTEGER     shift, and go to state 40
    CHAR        shift, and go to state 41
    STRING      shift, and go to state 42
    ADD         shift, and go to state 43
    SUB         shift, and go to state 44

    expr  go to state 141


State 104

   76 idlist: IDENTIFIER .

    $default  reduce using rule 76 (idlist)


State 105

   31 printf: PRINTF LPAREN STRING . RPAREN
   32       | PRINTF LPAREN STRING . COMMA exprs RPAREN

    COMMA   shift, and go to state 142
    RPAREN  shift, and go to state 143


State 106

   33 printf: PRINTF LPAREN idlist . RPAREN
   75 idlist: idlist . COMMA IDENTIFIER

    COMMA   shift, and go to state 119
    RPAREN  shift, and go to state 144


State 107

   34 scanf: SCANF LPAREN STRING . COMMA address_idlist RPAREN

    COMMA  shift, and go to state 145


State 108

    4 statements: LBRACE statements RBRACE .
   39 block: LBRACE statements RBRACE .

    $end            reduce using rule 4 (statements)
    $end            [reduce using rule 39 (block)]
    IF              reduce using rule 4 (statements)
    IF              [reduce using rule 39 (block)]
    WHILE           reduce using rule 4 (statements)
    WHILE           [reduce using rule 39 (block)]
    FOR             reduce using rule 4 (statements)
    FOR             [reduce using rule 39 (block)]
    RETURN          reduce using rule 4 (statements)
    RETURN          [reduce using rule 39 (block)]
    T_CHAR          reduce using rule 4 (statements)
    T_CHAR          [reduce using rule 39 (block)]
    T_INT           reduce using rule 4 (statements)
    T_INT           [reduce using rule 39 (block)]
    T_STRING        reduce using rule 4 (statements)
    T_STRING        [reduce using rule 39 (block)]
    T_BOOL          reduce using rule 4 (statements)
    T_BOOL          [reduce using rule 39 (block)]
    T_INT_POINTER   reduce using rule 4 (statements)
    T_INT_POINTER   [reduce using rule 39 (block)]
    T_CHAR_POINTER  reduce using rule 4 (statements)
    T_CHAR_POINTER  [reduce using rule 39 (block)]
    PRINTF          reduce using rule 4 (statements)
    PRINTF          [reduce using rule 39 (block)]
    SCANF           reduce using rule 4 (statements)
    SCANF           [reduce using rule 39 (block)]
    SEMICOLON       reduce using rule 4 (statements)
    SEMICOLON       [reduce using rule 39 (block)]
    RBRACE          reduce using rule 4 (statements)
    RBRACE          [reduce using rule 39 (block)]
    IDENTIFIER      reduce using rule 4 (statements)
    IDENTIFIER      [reduce using rule 39 (block)]
    SELF_INC        reduce using rule 4 (statements)
    SELF_INC        [reduce using rule 39 (block)]
    SELF_DEC        reduce using rule 4 (statements)
    SELF_DEC        [reduce using rule 39 (block)]
    $default        reduce using rule 4 (statements)


State 109

   65 eq_assign: IDENTIFIER LOP_ASSIGN expr .
   80 expr: expr . ADD expr
   81     | expr . SUB expr
   84     | expr . MUL expr
   85     | expr . DIV expr
   86     | expr . MOD expr

    ADD  shift, and go to state 99
    SUB  shift, and go to state 100
    MUL  shift, and go to state 101
    DIV  shift, and go to state 102
    MOD  shift, and go to state 103

    $default  reduce using rule 65 (eq_assign)


State 110

   66 opassign: IDENTIFIER ADD_ASSIGN expr .
   80 expr: expr . ADD expr
   81     | expr . SUB expr
   84     | expr . MUL expr
   85     | expr . DIV expr
   86     | expr . MOD expr

    ADD  shift, and go to state 99
    SUB  shift, and go to state 100
    MUL  shift, and go to state 101
    DIV  shift, and go to state 102
    MOD  shift, and go to state 103

    $default  reduce using rule 66 (opassign)


State 111

   67 opassign: IDENTIFIER SUB_ASSIGN expr .
   80 expr: expr . ADD expr
   81     | expr . SUB expr
   84     | expr . MUL expr
   85     | expr . DIV expr
   86     | expr . MOD expr

    ADD  shift, and go to state 99
    SUB  shift, and go to state 100
    MUL  shift, and go to state 101
    DIV  shift, and go to state 102
    MOD  shift, and go to state 103

    $default  reduce using rule 67 (opassign)


State 112

   70 opassign: IDENTIFIER MOD_ASSIGN expr .
   80 expr: expr . ADD expr
   81     | expr . SUB expr
   84     | expr . MUL expr
   85     | expr . DIV expr
   86     | expr . MOD expr

    ADD  shift, and go to state 99
    SUB  shift, and go to state 100
    MUL  shift, and go to state 101
    DIV  shift, and go to state 102
    MOD  shift, and go to state 103

    $default  reduce using rule 70 (opassign)


State 113

   69 opassign: IDENTIFIER DIV_ASSIGN expr .
   80 expr: expr . ADD expr
   81     | expr . SUB expr
   84     | expr . MUL expr
   85     | expr . DIV expr
   86     | expr . MOD expr

    ADD  shift, and go to state 99
    SUB  shift, and go to state 100
    MUL  shift, and go to state 101
    DIV  shift, and go to state 102
    MOD  shift, and go to state 103

    $default  reduce using rule 69 (opassign)


State 114

   68 opassign: IDENTIFIER MUL_ASSIGN expr .
   80 expr: expr . ADD expr
   81     | expr . SUB expr
   84     | expr . MUL expr
   85     | expr . DIV expr
   86     | expr . MOD expr

    ADD  shift, and go to state 99
    SUB  shift, and go to state 100
    MUL  shift, and go to state 101
    DIV  shift, and go to state 102
    MOD  shift, and go to state 103

    $default  reduce using rule 68 (opassign)


State 115

   27 function_use: IDENTIFIER LPAREN RPAREN .

    $default  reduce using rule 27 (function_use)


State 116

   26 function_use: IDENTIFIER LPAREN idlist . RPAREN
   75 idlist: idlist . COMMA IDENTIFIER

    COMMA   shift, and go to state 119
    RPAREN  shift, and go to state 146


State 117

   23 function_decl: T IDENTIFIER LPAREN . RPAREN
   24              | T IDENTIFIER LPAREN . params RPAREN
   25 function_def: T IDENTIFIER LPAREN . params RPAREN LBRACE statements RBRACE

    T_CHAR          shift, and go to state 5
    T_INT           shift, and go to state 6
    T_STRING        shift, and go to state 7
    T_BOOL          shift, and go to state 8
    T_INT_POINTER   shift, and go to state 9
    T_CHAR_POINTER  shift, and go to state 10
    RPAREN          shift, and go to state 147

    params  go to state 148
    param   go to state 149
    T       go to state 150


State 118

   63 eq_assigns: eq_assigns COMMA . eq_assign

    IDENTIFIER  shift, and go to state 151

    eq_assign  go to state 152


State 119

   75 idlist: idlist COMMA . IDENTIFIER

    IDENTIFIER  shift, and go to state 153


State 120

   41 if_else: IF LPAREN bool_statements RPAREN . block ELSE block
   42        | IF LPAREN bool_statements RPAREN . block

    LBRACE  shift, and go to state 154

    block  go to state 155


State 121

   38 while: WHILE LPAREN bool_statements RPAREN . block

    LBRACE  shift, and go to state 154

    block  go to state 156


State 122

   22 for: FOR LPAREN SEMICOLON bool_statements . SEMICOLON assigns RPAREN block
   44 bool_statements: bool_statements . AND bool_statements
   45                | bool_statements . OR bool_statements

    SEMICOLON  shift, and go to state 157
    OR         shift, and go to state 91
    AND        shift, and go to state 92


State 123

   21 for: FOR LPAREN declarations SEMICOLON . bool_statements SEMICOLON assigns RPAREN block

    LPAREN      shift, and go to state 38
    IDENTIFIER  shift, and go to state 39
    INTEGER     shift, and go to state 40
    CHAR        shift, and go to state 41
    STRING      shift, and go to state 42
    ADD         shift, and go to state 43
    SUB         shift, and go to state 44
    NOT         shift, and go to state 45

    bool_statements  go to state 158
    bool_statement   go to state 47
    expr             go to state 79


State 124

   55 declarations: declarations COMMA . declaration

    T_CHAR          shift, and go to state 5
    T_INT           shift, and go to state 6
    T_STRING        shift, and go to state 7
    T_BOOL          shift, and go to state 8
    T_INT_POINTER   shift, and go to state 9
    T_CHAR_POINTER  shift, and go to state 10

    declaration  go to state 159
    T            go to state 84


State 125

   65 eq_assign: IDENTIFIER . LOP_ASSIGN expr
   76 idlist: IDENTIFIER .

    LOP_ASSIGN  shift, and go to state 53

    $default  reduce using rule 76 (idlist)


State 126

   43 bool_statements: LPAREN bool_statements RPAREN .

    $default  reduce using rule 43 (bool_statements)


State 127

   79 expr: LPAREN expr RPAREN .

    $default  reduce using rule 79 (expr)


State 128

   79 expr: LPAREN expr . RPAREN
   80     | expr . ADD expr
   81     | expr . SUB expr
   84     | expr . MUL expr
   85     | expr . DIV expr
   86     | expr . MOD expr

    RPAREN  shift, and go to state 127
    ADD     shift, and go to state 99
    SUB     shift, and go to state 100
    MUL     shift, and go to state 101
    DIV     shift, and go to state 102
    MOD     shift, and go to state 103


State 129

   44 bool_statements: bool_statements . AND bool_statements
   45                | bool_statements . OR bool_statements
   45                | bool_statements OR bool_statements .

    AND  shift, and go to state 92

    $default  reduce using rule 45 (bool_statements)


State 130

   44 bool_statements: bool_statements . AND bool_statements
   44                | bool_statements AND bool_statements .
   45                | bool_statements . OR bool_statements

    $default  reduce using rule 44 (bool_statements)


State 131

   49 bool_statement: bool_statement . GREAT bool_statement
   50               | bool_statement . LESS bool_statement
   51               | bool_statement . GREAT_EQ bool_statement
   52               | bool_statement . LESS_EQ bool_statement
   53               | bool_statement . LOP_EQ bool_statement
   53               | bool_statement LOP_EQ bool_statement .
   54               | bool_statement . NOT_EQ bool_statement

    $default  reduce using rule 53 (bool_statement)


State 132

   49 bool_statement: bool_statement . GREAT bool_statement
   49               | bool_statement GREAT bool_statement .
   50               | bool_statement . LESS bool_statement
   51               | bool_statement . GREAT_EQ bool_statement
   52               | bool_statement . LESS_EQ bool_statement
   53               | bool_statement . LOP_EQ bool_statement
   54               | bool_statement . NOT_EQ bool_statement

    $default  reduce using rule 49 (bool_statement)


State 133

   49 bool_statement: bool_statement . GREAT bool_statement
   50               | bool_statement . LESS bool_statement
   50               | bool_statement LESS bool_statement .
   51               | bool_statement . GREAT_EQ bool_statement
   52               | bool_statement . LESS_EQ bool_statement
   53               | bool_statement . LOP_EQ bool_statement
   54               | bool_statement . NOT_EQ bool_statement

    $default  reduce using rule 50 (bool_statement)


State 134

   49 bool_statement: bool_statement . GREAT bool_statement
   50               | bool_statement . LESS bool_statement
   51               | bool_statement . GREAT_EQ bool_statement
   51               | bool_statement GREAT_EQ bool_statement .
   52               | bool_statement . LESS_EQ bool_statement
   53               | bool_statement . LOP_EQ bool_statement
   54               | bool_statement . NOT_EQ bool_statement

    $default  reduce using rule 51 (bool_statement)


State 135

   49 bool_statement: bool_statement . GREAT bool_statement
   50               | bool_statement . LESS bool_statement
   51               | bool_statement . GREAT_EQ bool_statement
   52               | bool_statement . LESS_EQ bool_statement
   52               | bool_statement LESS_EQ bool_statement .
   53               | bool_statement . LOP_EQ bool_statement
   54               | bool_statement . NOT_EQ bool_statement

    $default  reduce using rule 52 (bool_statement)


State 136

   49 bool_statement: bool_statement . GREAT bool_statement
   50               | bool_statement . LESS bool_statement
   51               | bool_statement . GREAT_EQ bool_statement
   52               | bool_statement . LESS_EQ bool_statement
   53               | bool_statement . LOP_EQ bool_statement
   54               | bool_statement . NOT_EQ bool_statement
   54               | bool_statement NOT_EQ bool_statement .

    $default  reduce using rule 54 (bool_statement)


State 137

   80 expr: expr . ADD expr
   80     | expr ADD expr .
   81     | expr . SUB expr
   84     | expr . MUL expr
   85     | expr . DIV expr
   86     | expr . MOD expr

    MUL  shift, and go to state 101
    DIV  shift, and go to state 102
    MOD  shift, and go to state 103

    $default  reduce using rule 80 (expr)


State 138

   80 expr: expr . ADD expr
   81     | expr . SUB expr
   81     | expr SUB expr .
   84     | expr . MUL expr
   85     | expr . DIV expr
   86     | expr . MOD expr

    MUL  shift, and go to state 101
    DIV  shift, and go to state 102
    MOD  shift, and go to state 103

    $default  reduce using rule 81 (expr)


State 139

   80 expr: expr . ADD expr
   81     | expr . SUB expr
   84     | expr . MUL expr
   84     | expr MUL expr .
   85     | expr . DIV expr
   86     | expr . MOD expr

    $default  reduce using rule 84 (expr)


State 140

   80 expr: expr . ADD expr
   81     | expr . SUB expr
   84     | expr . MUL expr
   85     | expr . DIV expr
   85     | expr DIV expr .
   86     | expr . MOD expr

    $default  reduce using rule 85 (expr)


State 141

   80 expr: expr . ADD expr
   81     | expr . SUB expr
   84     | expr . MUL expr
   85     | expr . DIV expr
   86     | expr . MOD expr
   86     | expr MOD expr .

    $default  reduce using rule 86 (expr)


State 142

   32 printf: PRINTF LPAREN STRING COMMA . exprs RPAREN

    LPAREN      shift, and go to state 87
    IDENTIFIER  shift, and go to state 39
    INTEGER     shift, and go to state 40
    CHAR        shift, and go to state 41
    STRING      shift, and go to state 42
    ADD         shift, and go to state 43
    SUB         shift, and go to state 44

    exprs  go to state 160
    expr   go to state 161


State 143

   31 printf: PRINTF LPAREN STRING RPAREN .

    $default  reduce using rule 31 (printf)


State 144

   33 printf: PRINTF LPAREN idlist RPAREN .

    $default  reduce using rule 33 (printf)


State 145

   34 scanf: SCANF LPAREN STRING COMMA . address_idlist RPAREN

    GET_ADDRESS  shift, and go to state 162

    address_idlist  go to state 163
    get_address_id  go to state 164


State 146

   26 function_use: IDENTIFIER LPAREN idlist RPAREN .

    $default  reduce using rule 26 (function_use)


State 147

   23 function_decl: T IDENTIFIER LPAREN RPAREN .

    $default  reduce using rule 23 (function_decl)


State 148

   24 function_decl: T IDENTIFIER LPAREN params . RPAREN
   25 function_def: T IDENTIFIER LPAREN params . RPAREN LBRACE statements RBRACE
   28 params: params . COMMA param

    COMMA   shift, and go to state 165
    RPAREN  shift, and go to state 166


State 149

   29 params: param .

    $default  reduce using rule 29 (params)


State 150

   30 param: T . IDENTIFIER

    IDENTIFIER  shift, and go to state 167


State 151

   65 eq_assign: IDENTIFIER . LOP_ASSIGN expr

    LOP_ASSIGN  shift, and go to state 53


State 152

   63 eq_assigns: eq_assigns COMMA eq_assign .

    $default  reduce using rule 63 (eq_assigns)


State 153

   75 idlist: idlist COMMA IDENTIFIER .

    $default  reduce using rule 75 (idlist)


State 154

   39 block: LBRACE . statements RBRACE
   40      | LBRACE . RBRACE

    IF              shift, and go to state 1
    WHILE           shift, and go to state 2
    FOR             shift, and go to state 3
    RETURN          shift, and go to state 4
    T_CHAR          shift, and go to state 5
    T_INT           shift, and go to state 6
    T_STRING        shift, and go to state 7
    T_BOOL          shift, and go to state 8
    T_INT_POINTER   shift, and go to state 9
    T_CHAR_POINTER  shift, and go to state 10
    PRINTF          shift, and go to state 11
    SCANF           shift, and go to state 12
    SEMICOLON       shift, and go to state 13
    LBRACE          shift, and go to state 14
    RBRACE          shift, and go to state 51
    IDENTIFIER      shift, and go to state 15
    SELF_INC        shift, and go to state 16
    SELF_DEC        shift, and go to state 17

    statements     go to state 168
    statement      go to state 20
    return         go to state 21
    for            go to state 22
    function_decl  go to state 23
    function_def   go to state 24
    function_use   go to state 25
    printf         go to state 26
    scanf          go to state 27
    while          go to state 28
    block          go to state 29
    if_else        go to state 30
    declaration    go to state 31
    eq_assign      go to state 32
    opassign       go to state 33
    T              go to state 34


State 155

   41 if_else: IF LPAREN bool_statements RPAREN block . ELSE block
   42        | IF LPAREN bool_statements RPAREN block .

    ELSE  shift, and go to state 169

    $default  reduce using rule 42 (if_else)


State 156

   38 while: WHILE LPAREN bool_statements RPAREN block .

    $default  reduce using rule 38 (while)


State 157

   22 for: FOR LPAREN SEMICOLON bool_statements SEMICOLON . assigns RPAREN block

    IDENTIFIER  shift, and go to state 170
    SELF_INC    shift, and go to state 16
    SELF_DEC    shift, and go to state 17

    assigns    go to state 171
    eq_assign  go to state 172
    opassign   go to state 173


State 158

   21 for: FOR LPAREN declarations SEMICOLON bool_statements . SEMICOLON assigns RPAREN block
   44 bool_statements: bool_statements . AND bool_statements
   45                | bool_statements . OR bool_statements

    SEMICOLON  shift, and go to state 174
    OR         shift, and go to state 91
    AND        shift, and go to state 92


State 159

   55 declarations: declarations COMMA declaration .

    $default  reduce using rule 55 (declarations)


State 160

   32 printf: PRINTF LPAREN STRING COMMA exprs . RPAREN
   77 exprs: exprs . COMMA expr

    COMMA   shift, and go to state 175
    RPAREN  shift, and go to state 176


State 161

   78 exprs: expr .
   80 expr: expr . ADD expr
   81     | expr . SUB expr
   84     | expr . MUL expr
   85     | expr . DIV expr
   86     | expr . MOD expr

    ADD  shift, and go to state 99
    SUB  shift, and go to state 100
    MUL  shift, and go to state 101
    DIV  shift, and go to state 102
    MOD  shift, and go to state 103

    $default  reduce using rule 78 (exprs)


State 162

   37 get_address_id: GET_ADDRESS . IDENTIFIER

    IDENTIFIER  shift, and go to state 177


State 163

   34 scanf: SCANF LPAREN STRING COMMA address_idlist . RPAREN
   35 address_idlist: address_idlist . COMMA get_address_id

    COMMA   shift, and go to state 178
    RPAREN  shift, and go to state 179


State 164

   36 address_idlist: get_address_id .

    $default  reduce using rule 36 (address_idlist)


State 165

   28 params: params COMMA . param

    T_CHAR          shift, and go to state 5
    T_INT           shift, and go to state 6
    T_STRING        shift, and go to state 7
    T_BOOL          shift, and go to state 8
    T_INT_POINTER   shift, and go to state 9
    T_CHAR_POINTER  shift, and go to state 10

    param  go to state 180
    T      go to state 150


State 166

   24 function_decl: T IDENTIFIER LPAREN params RPAREN .
   25 function_def: T IDENTIFIER LPAREN params RPAREN . LBRACE statements RBRACE

    LBRACE  shift, and go to state 181

    $default  reduce using rule 24 (function_decl)


State 167

   30 param: T IDENTIFIER .

    $default  reduce using rule 30 (param)


State 168

    3 statements: statements . statement
   39 block: LBRACE statements . RBRACE

    IF              shift, and go to state 1
    WHILE           shift, and go to state 2
    FOR             shift, and go to state 3
    RETURN          shift, and go to state 4
    T_CHAR          shift, and go to state 5
    T_INT           shift, and go to state 6
    T_STRING        shift, and go to state 7
    T_BOOL          shift, and go to state 8
    T_INT_POINTER   shift, and go to state 9
    T_CHAR_POINTER  shift, and go to state 10
    PRINTF          shift, and go to state 11
    SCANF           shift, and go to state 12
    SEMICOLON       shift, and go to state 13
    RBRACE          shift, and go to state 182
    IDENTIFIER      shift, and go to state 15
    SELF_INC        shift, and go to state 16
    SELF_DEC        shift, and go to state 17

    statement      go to state 65
    return         go to state 21
    for            go to state 22
    function_decl  go to state 23
    function_def   go to state 24
    function_use   go to state 25
    printf         go to state 26
    scanf          go to state 27
    while          go to state 28
    if_else        go to state 30
    declaration    go to state 31
    eq_assign      go to state 32
    opassign       go to state 33
    T              go to state 34


State 169

   41 if_else: IF LPAREN bool_statements RPAREN block ELSE . block

    LBRACE  shift, and go to state 154

    block  go to state 183


State 170

   65 eq_assign: IDENTIFIER . LOP_ASSIGN expr
   66 opassign: IDENTIFIER . ADD_ASSIGN expr
   67         | IDENTIFIER . SUB_ASSIGN expr
   68         | IDENTIFIER . MUL_ASSIGN expr
   69         | IDENTIFIER . DIV_ASSIGN expr
   70         | IDENTIFIER . MOD_ASSIGN expr
   73         | IDENTIFIER . SELF_INC
   74         | IDENTIFIER . SELF_DEC

    LOP_ASSIGN  shift, and go to state 53
    ADD_ASSIGN  shift, and go to state 54
    SUB_ASSIGN  shift, and go to state 55
    MOD_ASSIGN  shift, and go to state 56
    DIV_ASSIGN  shift, and go to state 57
    MUL_ASSIGN  shift, and go to state 58
    SELF_INC    shift, and go to state 60
    SELF_DEC    shift, and go to state 61


State 171

   22 for: FOR LPAREN SEMICOLON bool_statements SEMICOLON assigns . RPAREN block
   59 assigns: assigns . COMMA eq_assign
   60        | assigns . COMMA opassign

    COMMA   shift, and go to state 184
    RPAREN  shift, and go to state 185


State 172

   61 assigns: eq_assign .

    $default  reduce using rule 61 (assigns)


State 173

   62 assigns: opassign .

    $default  reduce using rule 62 (assigns)


State 174

   21 for: FOR LPAREN declarations SEMICOLON bool_statements SEMICOLON . assigns RPAREN block

    IDENTIFIER  shift, and go to state 170
    SELF_INC    shift, and go to state 16
    SELF_DEC    shift, and go to state 17

    assigns    go to state 186
    eq_assign  go to state 172
    opassign   go to state 173


State 175

   77 exprs: exprs COMMA . expr

    LPAREN      shift, and go to state 87
    IDENTIFIER  shift, and go to state 39
    INTEGER     shift, and go to state 40
    CHAR        shift, and go to state 41
    STRING      shift, and go to state 42
    ADD         shift, and go to state 43
    SUB         shift, and go to state 44

    expr  go to state 187


State 176

   32 printf: PRINTF LPAREN STRING COMMA exprs RPAREN .

    $default  reduce using rule 32 (printf)


State 177

   37 get_address_id: GET_ADDRESS IDENTIFIER .

    $default  reduce using rule 37 (get_address_id)


State 178

   35 address_idlist: address_idlist COMMA . get_address_id

    GET_ADDRESS  shift, and go to state 162

    get_address_id  go to state 188


State 179

   34 scanf: SCANF LPAREN STRING COMMA address_idlist RPAREN .

    $default  reduce using rule 34 (scanf)


State 180

   28 params: params COMMA param .

    $default  reduce using rule 28 (params)


State 181

   25 function_def: T IDENTIFIER LPAREN params RPAREN LBRACE . statements RBRACE

    IF              shift, and go to state 1
    WHILE           shift, and go to state 2
    FOR             shift, and go to state 3
    RETURN          shift, and go to state 4
    T_CHAR          shift, and go to state 5
    T_INT           shift, and go to state 6
    T_STRING        shift, and go to state 7
    T_BOOL          shift, and go to state 8
    T_INT_POINTER   shift, and go to state 9
    T_CHAR_POINTER  shift, and go to state 10
    PRINTF          shift, and go to state 11
    SCANF           shift, and go to state 12
    SEMICOLON       shift, and go to state 13
    LBRACE          shift, and go to state 14
    IDENTIFIER      shift, and go to state 15
    SELF_INC        shift, and go to state 16
    SELF_DEC        shift, and go to state 17

    statements     go to state 189
    statement      go to state 20
    return         go to state 21
    for            go to state 22
    function_decl  go to state 23
    function_def   go to state 24
    function_use   go to state 25
    printf         go to state 26
    scanf          go to state 27
    while          go to state 28
    block          go to state 29
    if_else        go to state 30
    declaration    go to state 31
    eq_assign      go to state 32
    opassign       go to state 33
    T              go to state 34


State 182

   39 block: LBRACE statements RBRACE .

    $default  reduce using rule 39 (block)


State 183

   41 if_else: IF LPAREN bool_statements RPAREN block ELSE block .

    $default  reduce using rule 41 (if_else)


State 184

   59 assigns: assigns COMMA . eq_assign
   60        | assigns COMMA . opassign

    IDENTIFIER  shift, and go to state 170
    SELF_INC    shift, and go to state 16
    SELF_DEC    shift, and go to state 17

    eq_assign  go to state 190
    opassign   go to state 191


State 185

   22 for: FOR LPAREN SEMICOLON bool_statements SEMICOLON assigns RPAREN . block

    LBRACE  shift, and go to state 154

    block  go to state 192


State 186

   21 for: FOR LPAREN declarations SEMICOLON bool_statements SEMICOLON assigns . RPAREN block
   59 assigns: assigns . COMMA eq_assign
   60        | assigns . COMMA opassign

    COMMA   shift, and go to state 184
    RPAREN  shift, and go to state 193


State 187

   77 exprs: exprs COMMA expr .
   80 expr: expr . ADD expr
   81     | expr . SUB expr
   84     | expr . MUL expr
   85     | expr . DIV expr
   86     | expr . MOD expr

    ADD  shift, and go to state 99
    SUB  shift, and go to state 100
    MUL  shift, and go to state 101
    DIV  shift, and go to state 102
    MOD  shift, and go to state 103

    $default  reduce using rule 77 (exprs)


State 188

   35 address_idlist: address_idlist COMMA get_address_id .

    $default  reduce using rule 35 (address_idlist)


State 189

    3 statements: statements . statement
   25 function_def: T IDENTIFIER LPAREN params RPAREN LBRACE statements . RBRACE

    IF              shift, and go to state 1
    WHILE           shift, and go to state 2
    FOR             shift, and go to state 3
    RETURN          shift, and go to state 4
    T_CHAR          shift, and go to state 5
    T_INT           shift, and go to state 6
    T_STRING        shift, and go to state 7
    T_BOOL          shift, and go to state 8
    T_INT_POINTER   shift, and go to state 9
    T_CHAR_POINTER  shift, and go to state 10
    PRINTF          shift, and go to state 11
    SCANF           shift, and go to state 12
    SEMICOLON       shift, and go to state 13
    RBRACE          shift, and go to state 194
    IDENTIFIER      shift, and go to state 15
    SELF_INC        shift, and go to state 16
    SELF_DEC        shift, and go to state 17

    statement      go to state 65
    return         go to state 21
    for            go to state 22
    function_decl  go to state 23
    function_def   go to state 24
    function_use   go to state 25
    printf         go to state 26
    scanf          go to state 27
    while          go to state 28
    if_else        go to state 30
    declaration    go to state 31
    eq_assign      go to state 32
    opassign       go to state 33
    T              go to state 34


State 190

   59 assigns: assigns COMMA eq_assign .

    $default  reduce using rule 59 (assigns)


State 191

   60 assigns: assigns COMMA opassign .

    $default  reduce using rule 60 (assigns)


State 192

   22 for: FOR LPAREN SEMICOLON bool_statements SEMICOLON assigns RPAREN block .

    $default  reduce using rule 22 (for)


State 193

   21 for: FOR LPAREN declarations SEMICOLON bool_statements SEMICOLON assigns RPAREN . block

    LBRACE  shift, and go to state 154

    block  go to state 195


State 194

   25 function_def: T IDENTIFIER LPAREN params RPAREN LBRACE statements RBRACE .

    $default  reduce using rule 25 (function_def)


State 195

   21 for: FOR LPAREN declarations SEMICOLON bool_statements SEMICOLON assigns RPAREN block .

    $default  reduce using rule 21 (for)

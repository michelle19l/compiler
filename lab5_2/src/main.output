Terminals unused in grammar

   RETURN
   POINT
   LBRACK
   RBRACK
   BOOL
   GET_VALUE


State 64 conflicts: 1 shift/reduce
State 66 conflicts: 1 shift/reduce
State 68 conflicts: 1 shift/reduce
State 75 conflicts: 14 shift/reduce
State 87 conflicts: 13 shift/reduce
State 141 conflicts: 13 shift/reduce
State 173 conflicts: 13 shift/reduce
State 176 conflicts: 13 shift/reduce


Grammar

    0 $accept: program $end

    1 program: statements

    2 statements: statement
    3           | statements statement
    4           | LBRACE statements RBRACE
    5           | LBRACE RBRACE

    6 statement: SEMICOLON
    7          | declaration SEMICOLON
    8          | eq_assign SEMICOLON
    9          | if_else
   10          | while
   11          | printf SEMICOLON
   12          | scanf SEMICOLON
   13          | function_decl SEMICOLON
   14          | function_def
   15          | function_use SEMICOLON
   16          | for
   17          | opassign SEMICOLON

   18 for: FOR LPAREN declarations SEMICOLON bool_statements SEMICOLON assigns RPAREN statements
   19    | FOR LPAREN SEMICOLON bool_statements SEMICOLON assigns RPAREN statements

   20 function_decl: T IDENTIFIER LPAREN RPAREN
   21              | T IDENTIFIER LPAREN params RPAREN

   22 function_def: T IDENTIFIER LPAREN params RPAREN LBRACE statements RBRACE

   23 function_use: IDENTIFIER LPAREN idlist RPAREN
   24             | IDENTIFIER LPAREN RPAREN

   25 params: params COMMA param
   26       | param

   27 param: T IDENTIFIER

   28 printf: PRINTF LPAREN STRING RPAREN
   29       | PRINTF LPAREN STRING COMMA exprs RPAREN
   30       | PRINTF LPAREN idlist RPAREN

   31 scanf: SCANF LPAREN STRING COMMA address_idlist RPAREN

   32 address_idlist: address_idlist COMMA get_address_id
   33               | get_address_id

   34 get_address_id: GET_ADDRESS IDENTIFIER

   35 while: WHILE bool_statements statements

   36 if_else: IF bool_statements statements ELSE statements
   37        | IF bool_statements statements

   38 bool_statements: LPAREN bool_statements RPAREN
   39                | bool_statements AND bool_statements
   40                | bool_statements OR bool_statements
   41                | NOT bool_statements
   42                | bool_statement

   43 bool_statement: expr
   44               | bool_statement GREAT bool_statement
   45               | bool_statement LESS bool_statement
   46               | bool_statement GREAT_EQ bool_statement
   47               | bool_statement LESS_EQ bool_statement
   48               | bool_statement LOP_EQ bool_statement
   49               | bool_statement NOT_EQ bool_statement

   50 declarations: declarations COMMA declaration
   51             | declaration

   52 declaration: T eq_assigns
   53            | T idlist

   54 assigns: assigns COMMA eq_assign
   55        | assigns COMMA opassign
   56        | eq_assign
   57        | opassign

   58 eq_assigns: eq_assigns COMMA eq_assign
   59           | eq_assign

   60 eq_assign: IDENTIFIER LOP_ASSIGN expr

   61 opassign: IDENTIFIER ADD_ASSIGN expr
   62         | IDENTIFIER SUB_ASSIGN expr
   63         | IDENTIFIER MUL_ASSIGN expr
   64         | IDENTIFIER DIV_ASSIGN expr
   65         | IDENTIFIER MOD_ASSIGN expr

   66 idlist: idlist COMMA IDENTIFIER
   67       | IDENTIFIER

   68 exprs: exprs COMMA expr
   69      | expr

   70 expr: LPAREN expr RPAREN
   71     | expr ADD expr
   72     | expr SUB expr
   73     | SUB expr
   74     | ADD expr
   75     | expr MUL expr
   76     | expr DIV expr
   77     | expr MOD expr
   78     | IDENTIFIER
   79     | INTEGER
   80     | CHAR
   81     | STRING

   82 T: T_INT
   83  | T_CHAR
   84  | T_BOOL
   85  | T_STRING
   86  | T_INT_POINTER
   87  | T_CHAR_POINTER


Terminals, with rules where they appear

$end (0) 0
error (256)
IF (258) 36 37
ELSE (259) 36
WHILE (260) 35
FOR (261) 18 19
RETURN (262)
T_CHAR (263) 83
T_INT (264) 82
T_STRING (265) 85
T_BOOL (266) 84
T_INT_POINTER (267) 86
T_CHAR_POINTER (268) 87
PRINTF (269) 28 29 30
SCANF (270) 31
LOP_ASSIGN (271) 60
ADD_ASSIGN (272) 61
SUB_ASSIGN (273) 62
MOD_ASSIGN (274) 65
DIV_ASSIGN (275) 64
MUL_ASSIGN (276) 63
SEMICOLON (277) 6 7 8 11 12 13 15 17 18 19
COMMA (278) 25 29 31 32 50 54 55 58 66 68
POINT (279)
LPAREN (280) 18 19 20 21 22 23 24 28 29 30 31 38 70
RPAREN (281) 18 19 20 21 22 23 24 28 29 30 31 38 70
LBRACK (282)
RBRACK (283)
LBRACE (284) 4 5 22
RBRACE (285) 4 5 22
IDENTIFIER (286) 20 21 22 23 24 27 34 60 61 62 63 64 65 66 67 78
INTEGER (287) 79
CHAR (288) 80
BOOL (289)
STRING (290) 28 29 31 81
LOP_EQ (291) 48
GREAT (292) 44
LESS (293) 45
GREAT_EQ (294) 46
LESS_EQ (295) 47
NOT_EQ (296) 49
ADD (297) 71 74
SUB (298) 72 73
MUL (299) 75
DIV (300) 76
MOD (301) 77
OR (302) 40
AND (303) 39
NOT (304) 41
NEG (305)
POS (306)
GET_ADDRESS (307) 34
GET_VALUE (308)


Nonterminals, with rules where they appear

$accept (54)
    on left: 0
program (55)
    on left: 1, on right: 0
statements (56)
    on left: 2 3 4 5, on right: 1 3 4 18 19 22 35 36 37
statement (57)
    on left: 6 7 8 9 10 11 12 13 14 15 16 17, on right: 2 3
for (58)
    on left: 18 19, on right: 16
function_decl (59)
    on left: 20 21, on right: 13
function_def (60)
    on left: 22, on right: 14
function_use (61)
    on left: 23 24, on right: 15
params (62)
    on left: 25 26, on right: 21 22 25
param (63)
    on left: 27, on right: 25 26
printf (64)
    on left: 28 29 30, on right: 11
scanf (65)
    on left: 31, on right: 12
address_idlist (66)
    on left: 32 33, on right: 31 32
get_address_id (67)
    on left: 34, on right: 32 33
while (68)
    on left: 35, on right: 10
if_else (69)
    on left: 36 37, on right: 9
bool_statements (70)
    on left: 38 39 40 41 42, on right: 18 19 35 36 37 38 39 40 41
bool_statement (71)
    on left: 43 44 45 46 47 48 49, on right: 42 44 45 46 47 48 49
declarations (72)
    on left: 50 51, on right: 18 50
declaration (73)
    on left: 52 53, on right: 7 50 51
assigns (74)
    on left: 54 55 56 57, on right: 18 19 54 55
eq_assigns (75)
    on left: 58 59, on right: 52 58
eq_assign (76)
    on left: 60, on right: 8 54 56 58 59
opassign (77)
    on left: 61 62 63 64 65, on right: 17 55 57
idlist (78)
    on left: 66 67, on right: 23 30 53 66
exprs (79)
    on left: 68 69, on right: 29 68
expr (80)
    on left: 70 71 72 73 74 75 76 77 78 79 80 81, on right: 43 60 61
    62 63 64 65 68 69 70 71 72 73 74 75 76 77
T (81)
    on left: 82 83 84 85 86 87, on right: 20 21 22 27 52 53


State 0

    0 $accept: . program $end

    IF              shift, and go to state 1
    WHILE           shift, and go to state 2
    FOR             shift, and go to state 3
    T_CHAR          shift, and go to state 4
    T_INT           shift, and go to state 5
    T_STRING        shift, and go to state 6
    T_BOOL          shift, and go to state 7
    T_INT_POINTER   shift, and go to state 8
    T_CHAR_POINTER  shift, and go to state 9
    PRINTF          shift, and go to state 10
    SCANF           shift, and go to state 11
    SEMICOLON       shift, and go to state 12
    LBRACE          shift, and go to state 13
    IDENTIFIER      shift, and go to state 14

    program        go to state 15
    statements     go to state 16
    statement      go to state 17
    for            go to state 18
    function_decl  go to state 19
    function_def   go to state 20
    function_use   go to state 21
    printf         go to state 22
    scanf          go to state 23
    while          go to state 24
    if_else        go to state 25
    declaration    go to state 26
    eq_assign      go to state 27
    opassign       go to state 28
    T              go to state 29


State 1

   36 if_else: IF . bool_statements statements ELSE statements
   37        | IF . bool_statements statements

    LPAREN      shift, and go to state 30
    IDENTIFIER  shift, and go to state 31
    INTEGER     shift, and go to state 32
    CHAR        shift, and go to state 33
    STRING      shift, and go to state 34
    ADD         shift, and go to state 35
    SUB         shift, and go to state 36
    NOT         shift, and go to state 37

    bool_statements  go to state 38
    bool_statement   go to state 39
    expr             go to state 40


State 2

   35 while: WHILE . bool_statements statements

    LPAREN      shift, and go to state 30
    IDENTIFIER  shift, and go to state 31
    INTEGER     shift, and go to state 32
    CHAR        shift, and go to state 33
    STRING      shift, and go to state 34
    ADD         shift, and go to state 35
    SUB         shift, and go to state 36
    NOT         shift, and go to state 37

    bool_statements  go to state 41
    bool_statement   go to state 39
    expr             go to state 40


State 3

   18 for: FOR . LPAREN declarations SEMICOLON bool_statements SEMICOLON assigns RPAREN statements
   19    | FOR . LPAREN SEMICOLON bool_statements SEMICOLON assigns RPAREN statements

    LPAREN  shift, and go to state 42


State 4

   83 T: T_CHAR .

    $default  reduce using rule 83 (T)


State 5

   82 T: T_INT .

    $default  reduce using rule 82 (T)


State 6

   85 T: T_STRING .

    $default  reduce using rule 85 (T)


State 7

   84 T: T_BOOL .

    $default  reduce using rule 84 (T)


State 8

   86 T: T_INT_POINTER .

    $default  reduce using rule 86 (T)


State 9

   87 T: T_CHAR_POINTER .

    $default  reduce using rule 87 (T)


State 10

   28 printf: PRINTF . LPAREN STRING RPAREN
   29       | PRINTF . LPAREN STRING COMMA exprs RPAREN
   30       | PRINTF . LPAREN idlist RPAREN

    LPAREN  shift, and go to state 43


State 11

   31 scanf: SCANF . LPAREN STRING COMMA address_idlist RPAREN

    LPAREN  shift, and go to state 44


State 12

    6 statement: SEMICOLON .

    $default  reduce using rule 6 (statement)


State 13

    4 statements: LBRACE . statements RBRACE
    5           | LBRACE . RBRACE

    IF              shift, and go to state 1
    WHILE           shift, and go to state 2
    FOR             shift, and go to state 3
    T_CHAR          shift, and go to state 4
    T_INT           shift, and go to state 5
    T_STRING        shift, and go to state 6
    T_BOOL          shift, and go to state 7
    T_INT_POINTER   shift, and go to state 8
    T_CHAR_POINTER  shift, and go to state 9
    PRINTF          shift, and go to state 10
    SCANF           shift, and go to state 11
    SEMICOLON       shift, and go to state 12
    LBRACE          shift, and go to state 13
    RBRACE          shift, and go to state 45
    IDENTIFIER      shift, and go to state 14

    statements     go to state 46
    statement      go to state 17
    for            go to state 18
    function_decl  go to state 19
    function_def   go to state 20
    function_use   go to state 21
    printf         go to state 22
    scanf          go to state 23
    while          go to state 24
    if_else        go to state 25
    declaration    go to state 26
    eq_assign      go to state 27
    opassign       go to state 28
    T              go to state 29


State 14

   23 function_use: IDENTIFIER . LPAREN idlist RPAREN
   24             | IDENTIFIER . LPAREN RPAREN
   60 eq_assign: IDENTIFIER . LOP_ASSIGN expr
   61 opassign: IDENTIFIER . ADD_ASSIGN expr
   62         | IDENTIFIER . SUB_ASSIGN expr
   63         | IDENTIFIER . MUL_ASSIGN expr
   64         | IDENTIFIER . DIV_ASSIGN expr
   65         | IDENTIFIER . MOD_ASSIGN expr

    LOP_ASSIGN  shift, and go to state 47
    ADD_ASSIGN  shift, and go to state 48
    SUB_ASSIGN  shift, and go to state 49
    MOD_ASSIGN  shift, and go to state 50
    DIV_ASSIGN  shift, and go to state 51
    MUL_ASSIGN  shift, and go to state 52
    LPAREN      shift, and go to state 53


State 15

    0 $accept: program . $end

    $end  shift, and go to state 54


State 16

    1 program: statements .
    3 statements: statements . statement

    IF              shift, and go to state 1
    WHILE           shift, and go to state 2
    FOR             shift, and go to state 3
    T_CHAR          shift, and go to state 4
    T_INT           shift, and go to state 5
    T_STRING        shift, and go to state 6
    T_BOOL          shift, and go to state 7
    T_INT_POINTER   shift, and go to state 8
    T_CHAR_POINTER  shift, and go to state 9
    PRINTF          shift, and go to state 10
    SCANF           shift, and go to state 11
    SEMICOLON       shift, and go to state 12
    IDENTIFIER      shift, and go to state 14

    $default  reduce using rule 1 (program)

    statement      go to state 55
    for            go to state 18
    function_decl  go to state 19
    function_def   go to state 20
    function_use   go to state 21
    printf         go to state 22
    scanf          go to state 23
    while          go to state 24
    if_else        go to state 25
    declaration    go to state 26
    eq_assign      go to state 27
    opassign       go to state 28
    T              go to state 29


State 17

    2 statements: statement .

    $default  reduce using rule 2 (statements)


State 18

   16 statement: for .

    $default  reduce using rule 16 (statement)


State 19

   13 statement: function_decl . SEMICOLON

    SEMICOLON  shift, and go to state 56


State 20

   14 statement: function_def .

    $default  reduce using rule 14 (statement)


State 21

   15 statement: function_use . SEMICOLON

    SEMICOLON  shift, and go to state 57


State 22

   11 statement: printf . SEMICOLON

    SEMICOLON  shift, and go to state 58


State 23

   12 statement: scanf . SEMICOLON

    SEMICOLON  shift, and go to state 59


State 24

   10 statement: while .

    $default  reduce using rule 10 (statement)


State 25

    9 statement: if_else .

    $default  reduce using rule 9 (statement)


State 26

    7 statement: declaration . SEMICOLON

    SEMICOLON  shift, and go to state 60


State 27

    8 statement: eq_assign . SEMICOLON

    SEMICOLON  shift, and go to state 61


State 28

   17 statement: opassign . SEMICOLON

    SEMICOLON  shift, and go to state 62


State 29

   20 function_decl: T . IDENTIFIER LPAREN RPAREN
   21              | T . IDENTIFIER LPAREN params RPAREN
   22 function_def: T . IDENTIFIER LPAREN params RPAREN LBRACE statements RBRACE
   52 declaration: T . eq_assigns
   53            | T . idlist

    IDENTIFIER  shift, and go to state 63

    eq_assigns  go to state 64
    eq_assign   go to state 65
    idlist      go to state 66


State 30

   38 bool_statements: LPAREN . bool_statements RPAREN
   70 expr: LPAREN . expr RPAREN

    LPAREN      shift, and go to state 30
    IDENTIFIER  shift, and go to state 31
    INTEGER     shift, and go to state 32
    CHAR        shift, and go to state 33
    STRING      shift, and go to state 34
    ADD         shift, and go to state 35
    SUB         shift, and go to state 36
    NOT         shift, and go to state 37

    bool_statements  go to state 67
    bool_statement   go to state 39
    expr             go to state 68


State 31

   78 expr: IDENTIFIER .

    $default  reduce using rule 78 (expr)


State 32

   79 expr: INTEGER .

    $default  reduce using rule 79 (expr)


State 33

   80 expr: CHAR .

    $default  reduce using rule 80 (expr)


State 34

   81 expr: STRING .

    $default  reduce using rule 81 (expr)


State 35

   74 expr: ADD . expr

    LPAREN      shift, and go to state 69
    IDENTIFIER  shift, and go to state 31
    INTEGER     shift, and go to state 32
    CHAR        shift, and go to state 33
    STRING      shift, and go to state 34
    ADD         shift, and go to state 35
    SUB         shift, and go to state 36

    expr  go to state 70


State 36

   73 expr: SUB . expr

    LPAREN      shift, and go to state 69
    IDENTIFIER  shift, and go to state 31
    INTEGER     shift, and go to state 32
    CHAR        shift, and go to state 33
    STRING      shift, and go to state 34
    ADD         shift, and go to state 35
    SUB         shift, and go to state 36

    expr  go to state 71


State 37

   41 bool_statements: NOT . bool_statements

    LPAREN      shift, and go to state 30
    IDENTIFIER  shift, and go to state 31
    INTEGER     shift, and go to state 32
    CHAR        shift, and go to state 33
    STRING      shift, and go to state 34
    ADD         shift, and go to state 35
    SUB         shift, and go to state 36
    NOT         shift, and go to state 37

    bool_statements  go to state 72
    bool_statement   go to state 39
    expr             go to state 40


State 38

   36 if_else: IF bool_statements . statements ELSE statements
   37        | IF bool_statements . statements
   39 bool_statements: bool_statements . AND bool_statements
   40                | bool_statements . OR bool_statements

    IF              shift, and go to state 1
    WHILE           shift, and go to state 2
    FOR             shift, and go to state 3
    T_CHAR          shift, and go to state 4
    T_INT           shift, and go to state 5
    T_STRING        shift, and go to state 6
    T_BOOL          shift, and go to state 7
    T_INT_POINTER   shift, and go to state 8
    T_CHAR_POINTER  shift, and go to state 9
    PRINTF          shift, and go to state 10
    SCANF           shift, and go to state 11
    SEMICOLON       shift, and go to state 12
    LBRACE          shift, and go to state 13
    IDENTIFIER      shift, and go to state 14
    OR              shift, and go to state 73
    AND             shift, and go to state 74

    statements     go to state 75
    statement      go to state 17
    for            go to state 18
    function_decl  go to state 19
    function_def   go to state 20
    function_use   go to state 21
    printf         go to state 22
    scanf          go to state 23
    while          go to state 24
    if_else        go to state 25
    declaration    go to state 26
    eq_assign      go to state 27
    opassign       go to state 28
    T              go to state 29


State 39

   42 bool_statements: bool_statement .
   44 bool_statement: bool_statement . GREAT bool_statement
   45               | bool_statement . LESS bool_statement
   46               | bool_statement . GREAT_EQ bool_statement
   47               | bool_statement . LESS_EQ bool_statement
   48               | bool_statement . LOP_EQ bool_statement
   49               | bool_statement . NOT_EQ bool_statement

    LOP_EQ    shift, and go to state 76
    GREAT     shift, and go to state 77
    LESS      shift, and go to state 78
    GREAT_EQ  shift, and go to state 79
    LESS_EQ   shift, and go to state 80
    NOT_EQ    shift, and go to state 81

    $default  reduce using rule 42 (bool_statements)


State 40

   43 bool_statement: expr .
   71 expr: expr . ADD expr
   72     | expr . SUB expr
   75     | expr . MUL expr
   76     | expr . DIV expr
   77     | expr . MOD expr

    ADD  shift, and go to state 82
    SUB  shift, and go to state 83
    MUL  shift, and go to state 84
    DIV  shift, and go to state 85
    MOD  shift, and go to state 86

    $default  reduce using rule 43 (bool_statement)


State 41

   35 while: WHILE bool_statements . statements
   39 bool_statements: bool_statements . AND bool_statements
   40                | bool_statements . OR bool_statements

    IF              shift, and go to state 1
    WHILE           shift, and go to state 2
    FOR             shift, and go to state 3
    T_CHAR          shift, and go to state 4
    T_INT           shift, and go to state 5
    T_STRING        shift, and go to state 6
    T_BOOL          shift, and go to state 7
    T_INT_POINTER   shift, and go to state 8
    T_CHAR_POINTER  shift, and go to state 9
    PRINTF          shift, and go to state 10
    SCANF           shift, and go to state 11
    SEMICOLON       shift, and go to state 12
    LBRACE          shift, and go to state 13
    IDENTIFIER      shift, and go to state 14
    OR              shift, and go to state 73
    AND             shift, and go to state 74

    statements     go to state 87
    statement      go to state 17
    for            go to state 18
    function_decl  go to state 19
    function_def   go to state 20
    function_use   go to state 21
    printf         go to state 22
    scanf          go to state 23
    while          go to state 24
    if_else        go to state 25
    declaration    go to state 26
    eq_assign      go to state 27
    opassign       go to state 28
    T              go to state 29


State 42

   18 for: FOR LPAREN . declarations SEMICOLON bool_statements SEMICOLON assigns RPAREN statements
   19    | FOR LPAREN . SEMICOLON bool_statements SEMICOLON assigns RPAREN statements

    T_CHAR          shift, and go to state 4
    T_INT           shift, and go to state 5
    T_STRING        shift, and go to state 6
    T_BOOL          shift, and go to state 7
    T_INT_POINTER   shift, and go to state 8
    T_CHAR_POINTER  shift, and go to state 9
    SEMICOLON       shift, and go to state 88

    declarations  go to state 89
    declaration   go to state 90
    T             go to state 91


State 43

   28 printf: PRINTF LPAREN . STRING RPAREN
   29       | PRINTF LPAREN . STRING COMMA exprs RPAREN
   30       | PRINTF LPAREN . idlist RPAREN

    IDENTIFIER  shift, and go to state 92
    STRING      shift, and go to state 93

    idlist  go to state 94


State 44

   31 scanf: SCANF LPAREN . STRING COMMA address_idlist RPAREN

    STRING  shift, and go to state 95


State 45

    5 statements: LBRACE RBRACE .

    $default  reduce using rule 5 (statements)


State 46

    3 statements: statements . statement
    4           | LBRACE statements . RBRACE

    IF              shift, and go to state 1
    WHILE           shift, and go to state 2
    FOR             shift, and go to state 3
    T_CHAR          shift, and go to state 4
    T_INT           shift, and go to state 5
    T_STRING        shift, and go to state 6
    T_BOOL          shift, and go to state 7
    T_INT_POINTER   shift, and go to state 8
    T_CHAR_POINTER  shift, and go to state 9
    PRINTF          shift, and go to state 10
    SCANF           shift, and go to state 11
    SEMICOLON       shift, and go to state 12
    RBRACE          shift, and go to state 96
    IDENTIFIER      shift, and go to state 14

    statement      go to state 55
    for            go to state 18
    function_decl  go to state 19
    function_def   go to state 20
    function_use   go to state 21
    printf         go to state 22
    scanf          go to state 23
    while          go to state 24
    if_else        go to state 25
    declaration    go to state 26
    eq_assign      go to state 27
    opassign       go to state 28
    T              go to state 29


State 47

   60 eq_assign: IDENTIFIER LOP_ASSIGN . expr

    LPAREN      shift, and go to state 69
    IDENTIFIER  shift, and go to state 31
    INTEGER     shift, and go to state 32
    CHAR        shift, and go to state 33
    STRING      shift, and go to state 34
    ADD         shift, and go to state 35
    SUB         shift, and go to state 36

    expr  go to state 97


State 48

   61 opassign: IDENTIFIER ADD_ASSIGN . expr

    LPAREN      shift, and go to state 69
    IDENTIFIER  shift, and go to state 31
    INTEGER     shift, and go to state 32
    CHAR        shift, and go to state 33
    STRING      shift, and go to state 34
    ADD         shift, and go to state 35
    SUB         shift, and go to state 36

    expr  go to state 98


State 49

   62 opassign: IDENTIFIER SUB_ASSIGN . expr

    LPAREN      shift, and go to state 69
    IDENTIFIER  shift, and go to state 31
    INTEGER     shift, and go to state 32
    CHAR        shift, and go to state 33
    STRING      shift, and go to state 34
    ADD         shift, and go to state 35
    SUB         shift, and go to state 36

    expr  go to state 99


State 50

   65 opassign: IDENTIFIER MOD_ASSIGN . expr

    LPAREN      shift, and go to state 69
    IDENTIFIER  shift, and go to state 31
    INTEGER     shift, and go to state 32
    CHAR        shift, and go to state 33
    STRING      shift, and go to state 34
    ADD         shift, and go to state 35
    SUB         shift, and go to state 36

    expr  go to state 100


State 51

   64 opassign: IDENTIFIER DIV_ASSIGN . expr

    LPAREN      shift, and go to state 69
    IDENTIFIER  shift, and go to state 31
    INTEGER     shift, and go to state 32
    CHAR        shift, and go to state 33
    STRING      shift, and go to state 34
    ADD         shift, and go to state 35
    SUB         shift, and go to state 36

    expr  go to state 101


State 52

   63 opassign: IDENTIFIER MUL_ASSIGN . expr

    LPAREN      shift, and go to state 69
    IDENTIFIER  shift, and go to state 31
    INTEGER     shift, and go to state 32
    CHAR        shift, and go to state 33
    STRING      shift, and go to state 34
    ADD         shift, and go to state 35
    SUB         shift, and go to state 36

    expr  go to state 102


State 53

   23 function_use: IDENTIFIER LPAREN . idlist RPAREN
   24             | IDENTIFIER LPAREN . RPAREN

    RPAREN      shift, and go to state 103
    IDENTIFIER  shift, and go to state 92

    idlist  go to state 104


State 54

    0 $accept: program $end .

    $default  accept


State 55

    3 statements: statements statement .

    $default  reduce using rule 3 (statements)


State 56

   13 statement: function_decl SEMICOLON .

    $default  reduce using rule 13 (statement)


State 57

   15 statement: function_use SEMICOLON .

    $default  reduce using rule 15 (statement)


State 58

   11 statement: printf SEMICOLON .

    $default  reduce using rule 11 (statement)


State 59

   12 statement: scanf SEMICOLON .

    $default  reduce using rule 12 (statement)


State 60

    7 statement: declaration SEMICOLON .

    $default  reduce using rule 7 (statement)


State 61

    8 statement: eq_assign SEMICOLON .

    $default  reduce using rule 8 (statement)


State 62

   17 statement: opassign SEMICOLON .

    $default  reduce using rule 17 (statement)


State 63

   20 function_decl: T IDENTIFIER . LPAREN RPAREN
   21              | T IDENTIFIER . LPAREN params RPAREN
   22 function_def: T IDENTIFIER . LPAREN params RPAREN LBRACE statements RBRACE
   60 eq_assign: IDENTIFIER . LOP_ASSIGN expr
   67 idlist: IDENTIFIER .

    LOP_ASSIGN  shift, and go to state 47
    LPAREN      shift, and go to state 105

    $default  reduce using rule 67 (idlist)


State 64

   52 declaration: T eq_assigns .
   58 eq_assigns: eq_assigns . COMMA eq_assign

    COMMA  shift, and go to state 106

    COMMA     [reduce using rule 52 (declaration)]
    $default  reduce using rule 52 (declaration)


State 65

   59 eq_assigns: eq_assign .

    $default  reduce using rule 59 (eq_assigns)


State 66

   53 declaration: T idlist .
   66 idlist: idlist . COMMA IDENTIFIER

    COMMA  shift, and go to state 107

    COMMA     [reduce using rule 53 (declaration)]
    $default  reduce using rule 53 (declaration)


State 67

   38 bool_statements: LPAREN bool_statements . RPAREN
   39                | bool_statements . AND bool_statements
   40                | bool_statements . OR bool_statements

    RPAREN  shift, and go to state 108
    OR      shift, and go to state 73
    AND     shift, and go to state 74


State 68

   43 bool_statement: expr .
   70 expr: LPAREN expr . RPAREN
   71     | expr . ADD expr
   72     | expr . SUB expr
   75     | expr . MUL expr
   76     | expr . DIV expr
   77     | expr . MOD expr

    RPAREN  shift, and go to state 109
    ADD     shift, and go to state 82
    SUB     shift, and go to state 83
    MUL     shift, and go to state 84
    DIV     shift, and go to state 85
    MOD     shift, and go to state 86

    RPAREN    [reduce using rule 43 (bool_statement)]
    $default  reduce using rule 43 (bool_statement)


State 69

   70 expr: LPAREN . expr RPAREN

    LPAREN      shift, and go to state 69
    IDENTIFIER  shift, and go to state 31
    INTEGER     shift, and go to state 32
    CHAR        shift, and go to state 33
    STRING      shift, and go to state 34
    ADD         shift, and go to state 35
    SUB         shift, and go to state 36

    expr  go to state 110


State 70

   71 expr: expr . ADD expr
   72     | expr . SUB expr
   74     | ADD expr .
   75     | expr . MUL expr
   76     | expr . DIV expr
   77     | expr . MOD expr

    $default  reduce using rule 74 (expr)


State 71

   71 expr: expr . ADD expr
   72     | expr . SUB expr
   73     | SUB expr .
   75     | expr . MUL expr
   76     | expr . DIV expr
   77     | expr . MOD expr

    $default  reduce using rule 73 (expr)


State 72

   39 bool_statements: bool_statements . AND bool_statements
   40                | bool_statements . OR bool_statements
   41                | NOT bool_statements .

    $default  reduce using rule 41 (bool_statements)


State 73

   40 bool_statements: bool_statements OR . bool_statements

    LPAREN      shift, and go to state 30
    IDENTIFIER  shift, and go to state 31
    INTEGER     shift, and go to state 32
    CHAR        shift, and go to state 33
    STRING      shift, and go to state 34
    ADD         shift, and go to state 35
    SUB         shift, and go to state 36
    NOT         shift, and go to state 37

    bool_statements  go to state 111
    bool_statement   go to state 39
    expr             go to state 40


State 74

   39 bool_statements: bool_statements AND . bool_statements

    LPAREN      shift, and go to state 30
    IDENTIFIER  shift, and go to state 31
    INTEGER     shift, and go to state 32
    CHAR        shift, and go to state 33
    STRING      shift, and go to state 34
    ADD         shift, and go to state 35
    SUB         shift, and go to state 36
    NOT         shift, and go to state 37

    bool_statements  go to state 112
    bool_statement   go to state 39
    expr             go to state 40


State 75

    3 statements: statements . statement
   36 if_else: IF bool_statements statements . ELSE statements
   37        | IF bool_statements statements .

    IF              shift, and go to state 1
    ELSE            shift, and go to state 113
    WHILE           shift, and go to state 2
    FOR             shift, and go to state 3
    T_CHAR          shift, and go to state 4
    T_INT           shift, and go to state 5
    T_STRING        shift, and go to state 6
    T_BOOL          shift, and go to state 7
    T_INT_POINTER   shift, and go to state 8
    T_CHAR_POINTER  shift, and go to state 9
    PRINTF          shift, and go to state 10
    SCANF           shift, and go to state 11
    SEMICOLON       shift, and go to state 12
    IDENTIFIER      shift, and go to state 14

    IF              [reduce using rule 37 (if_else)]
    ELSE            [reduce using rule 37 (if_else)]
    WHILE           [reduce using rule 37 (if_else)]
    FOR             [reduce using rule 37 (if_else)]
    T_CHAR          [reduce using rule 37 (if_else)]
    T_INT           [reduce using rule 37 (if_else)]
    T_STRING        [reduce using rule 37 (if_else)]
    T_BOOL          [reduce using rule 37 (if_else)]
    T_INT_POINTER   [reduce using rule 37 (if_else)]
    T_CHAR_POINTER  [reduce using rule 37 (if_else)]
    PRINTF          [reduce using rule 37 (if_else)]
    SCANF           [reduce using rule 37 (if_else)]
    SEMICOLON       [reduce using rule 37 (if_else)]
    IDENTIFIER      [reduce using rule 37 (if_else)]
    $default        reduce using rule 37 (if_else)

    statement      go to state 55
    for            go to state 18
    function_decl  go to state 19
    function_def   go to state 20
    function_use   go to state 21
    printf         go to state 22
    scanf          go to state 23
    while          go to state 24
    if_else        go to state 25
    declaration    go to state 26
    eq_assign      go to state 27
    opassign       go to state 28
    T              go to state 29


State 76

   48 bool_statement: bool_statement LOP_EQ . bool_statement

    LPAREN      shift, and go to state 69
    IDENTIFIER  shift, and go to state 31
    INTEGER     shift, and go to state 32
    CHAR        shift, and go to state 33
    STRING      shift, and go to state 34
    ADD         shift, and go to state 35
    SUB         shift, and go to state 36

    bool_statement  go to state 114
    expr            go to state 40


State 77

   44 bool_statement: bool_statement GREAT . bool_statement

    LPAREN      shift, and go to state 69
    IDENTIFIER  shift, and go to state 31
    INTEGER     shift, and go to state 32
    CHAR        shift, and go to state 33
    STRING      shift, and go to state 34
    ADD         shift, and go to state 35
    SUB         shift, and go to state 36

    bool_statement  go to state 115
    expr            go to state 40


State 78

   45 bool_statement: bool_statement LESS . bool_statement

    LPAREN      shift, and go to state 69
    IDENTIFIER  shift, and go to state 31
    INTEGER     shift, and go to state 32
    CHAR        shift, and go to state 33
    STRING      shift, and go to state 34
    ADD         shift, and go to state 35
    SUB         shift, and go to state 36

    bool_statement  go to state 116
    expr            go to state 40


State 79

   46 bool_statement: bool_statement GREAT_EQ . bool_statement

    LPAREN      shift, and go to state 69
    IDENTIFIER  shift, and go to state 31
    INTEGER     shift, and go to state 32
    CHAR        shift, and go to state 33
    STRING      shift, and go to state 34
    ADD         shift, and go to state 35
    SUB         shift, and go to state 36

    bool_statement  go to state 117
    expr            go to state 40


State 80

   47 bool_statement: bool_statement LESS_EQ . bool_statement

    LPAREN      shift, and go to state 69
    IDENTIFIER  shift, and go to state 31
    INTEGER     shift, and go to state 32
    CHAR        shift, and go to state 33
    STRING      shift, and go to state 34
    ADD         shift, and go to state 35
    SUB         shift, and go to state 36

    bool_statement  go to state 118
    expr            go to state 40


State 81

   49 bool_statement: bool_statement NOT_EQ . bool_statement

    LPAREN      shift, and go to state 69
    IDENTIFIER  shift, and go to state 31
    INTEGER     shift, and go to state 32
    CHAR        shift, and go to state 33
    STRING      shift, and go to state 34
    ADD         shift, and go to state 35
    SUB         shift, and go to state 36

    bool_statement  go to state 119
    expr            go to state 40


State 82

   71 expr: expr ADD . expr

    LPAREN      shift, and go to state 69
    IDENTIFIER  shift, and go to state 31
    INTEGER     shift, and go to state 32
    CHAR        shift, and go to state 33
    STRING      shift, and go to state 34
    ADD         shift, and go to state 35
    SUB         shift, and go to state 36

    expr  go to state 120


State 83

   72 expr: expr SUB . expr

    LPAREN      shift, and go to state 69
    IDENTIFIER  shift, and go to state 31
    INTEGER     shift, and go to state 32
    CHAR        shift, and go to state 33
    STRING      shift, and go to state 34
    ADD         shift, and go to state 35
    SUB         shift, and go to state 36

    expr  go to state 121


State 84

   75 expr: expr MUL . expr

    LPAREN      shift, and go to state 69
    IDENTIFIER  shift, and go to state 31
    INTEGER     shift, and go to state 32
    CHAR        shift, and go to state 33
    STRING      shift, and go to state 34
    ADD         shift, and go to state 35
    SUB         shift, and go to state 36

    expr  go to state 122


State 85

   76 expr: expr DIV . expr

    LPAREN      shift, and go to state 69
    IDENTIFIER  shift, and go to state 31
    INTEGER     shift, and go to state 32
    CHAR        shift, and go to state 33
    STRING      shift, and go to state 34
    ADD         shift, and go to state 35
    SUB         shift, and go to state 36

    expr  go to state 123


State 86

   77 expr: expr MOD . expr

    LPAREN      shift, and go to state 69
    IDENTIFIER  shift, and go to state 31
    INTEGER     shift, and go to state 32
    CHAR        shift, and go to state 33
    STRING      shift, and go to state 34
    ADD         shift, and go to state 35
    SUB         shift, and go to state 36

    expr  go to state 124


State 87

    3 statements: statements . statement
   35 while: WHILE bool_statements statements .

    IF              shift, and go to state 1
    WHILE           shift, and go to state 2
    FOR             shift, and go to state 3
    T_CHAR          shift, and go to state 4
    T_INT           shift, and go to state 5
    T_STRING        shift, and go to state 6
    T_BOOL          shift, and go to state 7
    T_INT_POINTER   shift, and go to state 8
    T_CHAR_POINTER  shift, and go to state 9
    PRINTF          shift, and go to state 10
    SCANF           shift, and go to state 11
    SEMICOLON       shift, and go to state 12
    IDENTIFIER      shift, and go to state 14

    IF              [reduce using rule 35 (while)]
    WHILE           [reduce using rule 35 (while)]
    FOR             [reduce using rule 35 (while)]
    T_CHAR          [reduce using rule 35 (while)]
    T_INT           [reduce using rule 35 (while)]
    T_STRING        [reduce using rule 35 (while)]
    T_BOOL          [reduce using rule 35 (while)]
    T_INT_POINTER   [reduce using rule 35 (while)]
    T_CHAR_POINTER  [reduce using rule 35 (while)]
    PRINTF          [reduce using rule 35 (while)]
    SCANF           [reduce using rule 35 (while)]
    SEMICOLON       [reduce using rule 35 (while)]
    IDENTIFIER      [reduce using rule 35 (while)]
    $default        reduce using rule 35 (while)

    statement      go to state 55
    for            go to state 18
    function_decl  go to state 19
    function_def   go to state 20
    function_use   go to state 21
    printf         go to state 22
    scanf          go to state 23
    while          go to state 24
    if_else        go to state 25
    declaration    go to state 26
    eq_assign      go to state 27
    opassign       go to state 28
    T              go to state 29


State 88

   19 for: FOR LPAREN SEMICOLON . bool_statements SEMICOLON assigns RPAREN statements

    LPAREN      shift, and go to state 30
    IDENTIFIER  shift, and go to state 31
    INTEGER     shift, and go to state 32
    CHAR        shift, and go to state 33
    STRING      shift, and go to state 34
    ADD         shift, and go to state 35
    SUB         shift, and go to state 36
    NOT         shift, and go to state 37

    bool_statements  go to state 125
    bool_statement   go to state 39
    expr             go to state 40


State 89

   18 for: FOR LPAREN declarations . SEMICOLON bool_statements SEMICOLON assigns RPAREN statements
   50 declarations: declarations . COMMA declaration

    SEMICOLON  shift, and go to state 126
    COMMA      shift, and go to state 127


State 90

   51 declarations: declaration .

    $default  reduce using rule 51 (declarations)


State 91

   52 declaration: T . eq_assigns
   53            | T . idlist

    IDENTIFIER  shift, and go to state 128

    eq_assigns  go to state 64
    eq_assign   go to state 65
    idlist      go to state 66


State 92

   67 idlist: IDENTIFIER .

    $default  reduce using rule 67 (idlist)


State 93

   28 printf: PRINTF LPAREN STRING . RPAREN
   29       | PRINTF LPAREN STRING . COMMA exprs RPAREN

    COMMA   shift, and go to state 129
    RPAREN  shift, and go to state 130


State 94

   30 printf: PRINTF LPAREN idlist . RPAREN
   66 idlist: idlist . COMMA IDENTIFIER

    COMMA   shift, and go to state 107
    RPAREN  shift, and go to state 131


State 95

   31 scanf: SCANF LPAREN STRING . COMMA address_idlist RPAREN

    COMMA  shift, and go to state 132


State 96

    4 statements: LBRACE statements RBRACE .

    $default  reduce using rule 4 (statements)


State 97

   60 eq_assign: IDENTIFIER LOP_ASSIGN expr .
   71 expr: expr . ADD expr
   72     | expr . SUB expr
   75     | expr . MUL expr
   76     | expr . DIV expr
   77     | expr . MOD expr

    ADD  shift, and go to state 82
    SUB  shift, and go to state 83
    MUL  shift, and go to state 84
    DIV  shift, and go to state 85
    MOD  shift, and go to state 86

    $default  reduce using rule 60 (eq_assign)


State 98

   61 opassign: IDENTIFIER ADD_ASSIGN expr .
   71 expr: expr . ADD expr
   72     | expr . SUB expr
   75     | expr . MUL expr
   76     | expr . DIV expr
   77     | expr . MOD expr

    ADD  shift, and go to state 82
    SUB  shift, and go to state 83
    MUL  shift, and go to state 84
    DIV  shift, and go to state 85
    MOD  shift, and go to state 86

    $default  reduce using rule 61 (opassign)


State 99

   62 opassign: IDENTIFIER SUB_ASSIGN expr .
   71 expr: expr . ADD expr
   72     | expr . SUB expr
   75     | expr . MUL expr
   76     | expr . DIV expr
   77     | expr . MOD expr

    ADD  shift, and go to state 82
    SUB  shift, and go to state 83
    MUL  shift, and go to state 84
    DIV  shift, and go to state 85
    MOD  shift, and go to state 86

    $default  reduce using rule 62 (opassign)


State 100

   65 opassign: IDENTIFIER MOD_ASSIGN expr .
   71 expr: expr . ADD expr
   72     | expr . SUB expr
   75     | expr . MUL expr
   76     | expr . DIV expr
   77     | expr . MOD expr

    ADD  shift, and go to state 82
    SUB  shift, and go to state 83
    MUL  shift, and go to state 84
    DIV  shift, and go to state 85
    MOD  shift, and go to state 86

    $default  reduce using rule 65 (opassign)


State 101

   64 opassign: IDENTIFIER DIV_ASSIGN expr .
   71 expr: expr . ADD expr
   72     | expr . SUB expr
   75     | expr . MUL expr
   76     | expr . DIV expr
   77     | expr . MOD expr

    ADD  shift, and go to state 82
    SUB  shift, and go to state 83
    MUL  shift, and go to state 84
    DIV  shift, and go to state 85
    MOD  shift, and go to state 86

    $default  reduce using rule 64 (opassign)


State 102

   63 opassign: IDENTIFIER MUL_ASSIGN expr .
   71 expr: expr . ADD expr
   72     | expr . SUB expr
   75     | expr . MUL expr
   76     | expr . DIV expr
   77     | expr . MOD expr

    ADD  shift, and go to state 82
    SUB  shift, and go to state 83
    MUL  shift, and go to state 84
    DIV  shift, and go to state 85
    MOD  shift, and go to state 86

    $default  reduce using rule 63 (opassign)


State 103

   24 function_use: IDENTIFIER LPAREN RPAREN .

    $default  reduce using rule 24 (function_use)


State 104

   23 function_use: IDENTIFIER LPAREN idlist . RPAREN
   66 idlist: idlist . COMMA IDENTIFIER

    COMMA   shift, and go to state 107
    RPAREN  shift, and go to state 133


State 105

   20 function_decl: T IDENTIFIER LPAREN . RPAREN
   21              | T IDENTIFIER LPAREN . params RPAREN
   22 function_def: T IDENTIFIER LPAREN . params RPAREN LBRACE statements RBRACE

    T_CHAR          shift, and go to state 4
    T_INT           shift, and go to state 5
    T_STRING        shift, and go to state 6
    T_BOOL          shift, and go to state 7
    T_INT_POINTER   shift, and go to state 8
    T_CHAR_POINTER  shift, and go to state 9
    RPAREN          shift, and go to state 134

    params  go to state 135
    param   go to state 136
    T       go to state 137


State 106

   58 eq_assigns: eq_assigns COMMA . eq_assign

    IDENTIFIER  shift, and go to state 138

    eq_assign  go to state 139


State 107

   66 idlist: idlist COMMA . IDENTIFIER

    IDENTIFIER  shift, and go to state 140


State 108

   38 bool_statements: LPAREN bool_statements RPAREN .

    $default  reduce using rule 38 (bool_statements)


State 109

   70 expr: LPAREN expr RPAREN .

    $default  reduce using rule 70 (expr)


State 110

   70 expr: LPAREN expr . RPAREN
   71     | expr . ADD expr
   72     | expr . SUB expr
   75     | expr . MUL expr
   76     | expr . DIV expr
   77     | expr . MOD expr

    RPAREN  shift, and go to state 109
    ADD     shift, and go to state 82
    SUB     shift, and go to state 83
    MUL     shift, and go to state 84
    DIV     shift, and go to state 85
    MOD     shift, and go to state 86


State 111

   39 bool_statements: bool_statements . AND bool_statements
   40                | bool_statements . OR bool_statements
   40                | bool_statements OR bool_statements .

    AND  shift, and go to state 74

    $default  reduce using rule 40 (bool_statements)


State 112

   39 bool_statements: bool_statements . AND bool_statements
   39                | bool_statements AND bool_statements .
   40                | bool_statements . OR bool_statements

    $default  reduce using rule 39 (bool_statements)


State 113

   36 if_else: IF bool_statements statements ELSE . statements

    IF              shift, and go to state 1
    WHILE           shift, and go to state 2
    FOR             shift, and go to state 3
    T_CHAR          shift, and go to state 4
    T_INT           shift, and go to state 5
    T_STRING        shift, and go to state 6
    T_BOOL          shift, and go to state 7
    T_INT_POINTER   shift, and go to state 8
    T_CHAR_POINTER  shift, and go to state 9
    PRINTF          shift, and go to state 10
    SCANF           shift, and go to state 11
    SEMICOLON       shift, and go to state 12
    LBRACE          shift, and go to state 13
    IDENTIFIER      shift, and go to state 14

    statements     go to state 141
    statement      go to state 17
    for            go to state 18
    function_decl  go to state 19
    function_def   go to state 20
    function_use   go to state 21
    printf         go to state 22
    scanf          go to state 23
    while          go to state 24
    if_else        go to state 25
    declaration    go to state 26
    eq_assign      go to state 27
    opassign       go to state 28
    T              go to state 29


State 114

   44 bool_statement: bool_statement . GREAT bool_statement
   45               | bool_statement . LESS bool_statement
   46               | bool_statement . GREAT_EQ bool_statement
   47               | bool_statement . LESS_EQ bool_statement
   48               | bool_statement . LOP_EQ bool_statement
   48               | bool_statement LOP_EQ bool_statement .
   49               | bool_statement . NOT_EQ bool_statement

    $default  reduce using rule 48 (bool_statement)


State 115

   44 bool_statement: bool_statement . GREAT bool_statement
   44               | bool_statement GREAT bool_statement .
   45               | bool_statement . LESS bool_statement
   46               | bool_statement . GREAT_EQ bool_statement
   47               | bool_statement . LESS_EQ bool_statement
   48               | bool_statement . LOP_EQ bool_statement
   49               | bool_statement . NOT_EQ bool_statement

    $default  reduce using rule 44 (bool_statement)


State 116

   44 bool_statement: bool_statement . GREAT bool_statement
   45               | bool_statement . LESS bool_statement
   45               | bool_statement LESS bool_statement .
   46               | bool_statement . GREAT_EQ bool_statement
   47               | bool_statement . LESS_EQ bool_statement
   48               | bool_statement . LOP_EQ bool_statement
   49               | bool_statement . NOT_EQ bool_statement

    $default  reduce using rule 45 (bool_statement)


State 117

   44 bool_statement: bool_statement . GREAT bool_statement
   45               | bool_statement . LESS bool_statement
   46               | bool_statement . GREAT_EQ bool_statement
   46               | bool_statement GREAT_EQ bool_statement .
   47               | bool_statement . LESS_EQ bool_statement
   48               | bool_statement . LOP_EQ bool_statement
   49               | bool_statement . NOT_EQ bool_statement

    $default  reduce using rule 46 (bool_statement)


State 118

   44 bool_statement: bool_statement . GREAT bool_statement
   45               | bool_statement . LESS bool_statement
   46               | bool_statement . GREAT_EQ bool_statement
   47               | bool_statement . LESS_EQ bool_statement
   47               | bool_statement LESS_EQ bool_statement .
   48               | bool_statement . LOP_EQ bool_statement
   49               | bool_statement . NOT_EQ bool_statement

    $default  reduce using rule 47 (bool_statement)


State 119

   44 bool_statement: bool_statement . GREAT bool_statement
   45               | bool_statement . LESS bool_statement
   46               | bool_statement . GREAT_EQ bool_statement
   47               | bool_statement . LESS_EQ bool_statement
   48               | bool_statement . LOP_EQ bool_statement
   49               | bool_statement . NOT_EQ bool_statement
   49               | bool_statement NOT_EQ bool_statement .

    $default  reduce using rule 49 (bool_statement)


State 120

   71 expr: expr . ADD expr
   71     | expr ADD expr .
   72     | expr . SUB expr
   75     | expr . MUL expr
   76     | expr . DIV expr
   77     | expr . MOD expr

    MUL  shift, and go to state 84
    DIV  shift, and go to state 85
    MOD  shift, and go to state 86

    $default  reduce using rule 71 (expr)


State 121

   71 expr: expr . ADD expr
   72     | expr . SUB expr
   72     | expr SUB expr .
   75     | expr . MUL expr
   76     | expr . DIV expr
   77     | expr . MOD expr

    MUL  shift, and go to state 84
    DIV  shift, and go to state 85
    MOD  shift, and go to state 86

    $default  reduce using rule 72 (expr)


State 122

   71 expr: expr . ADD expr
   72     | expr . SUB expr
   75     | expr . MUL expr
   75     | expr MUL expr .
   76     | expr . DIV expr
   77     | expr . MOD expr

    $default  reduce using rule 75 (expr)


State 123

   71 expr: expr . ADD expr
   72     | expr . SUB expr
   75     | expr . MUL expr
   76     | expr . DIV expr
   76     | expr DIV expr .
   77     | expr . MOD expr

    $default  reduce using rule 76 (expr)


State 124

   71 expr: expr . ADD expr
   72     | expr . SUB expr
   75     | expr . MUL expr
   76     | expr . DIV expr
   77     | expr . MOD expr
   77     | expr MOD expr .

    $default  reduce using rule 77 (expr)


State 125

   19 for: FOR LPAREN SEMICOLON bool_statements . SEMICOLON assigns RPAREN statements
   39 bool_statements: bool_statements . AND bool_statements
   40                | bool_statements . OR bool_statements

    SEMICOLON  shift, and go to state 142
    OR         shift, and go to state 73
    AND        shift, and go to state 74


State 126

   18 for: FOR LPAREN declarations SEMICOLON . bool_statements SEMICOLON assigns RPAREN statements

    LPAREN      shift, and go to state 30
    IDENTIFIER  shift, and go to state 31
    INTEGER     shift, and go to state 32
    CHAR        shift, and go to state 33
    STRING      shift, and go to state 34
    ADD         shift, and go to state 35
    SUB         shift, and go to state 36
    NOT         shift, and go to state 37

    bool_statements  go to state 143
    bool_statement   go to state 39
    expr             go to state 40


State 127

   50 declarations: declarations COMMA . declaration

    T_CHAR          shift, and go to state 4
    T_INT           shift, and go to state 5
    T_STRING        shift, and go to state 6
    T_BOOL          shift, and go to state 7
    T_INT_POINTER   shift, and go to state 8
    T_CHAR_POINTER  shift, and go to state 9

    declaration  go to state 144
    T            go to state 91


State 128

   60 eq_assign: IDENTIFIER . LOP_ASSIGN expr
   67 idlist: IDENTIFIER .

    LOP_ASSIGN  shift, and go to state 47

    $default  reduce using rule 67 (idlist)


State 129

   29 printf: PRINTF LPAREN STRING COMMA . exprs RPAREN

    LPAREN      shift, and go to state 69
    IDENTIFIER  shift, and go to state 31
    INTEGER     shift, and go to state 32
    CHAR        shift, and go to state 33
    STRING      shift, and go to state 34
    ADD         shift, and go to state 35
    SUB         shift, and go to state 36

    exprs  go to state 145
    expr   go to state 146


State 130

   28 printf: PRINTF LPAREN STRING RPAREN .

    $default  reduce using rule 28 (printf)


State 131

   30 printf: PRINTF LPAREN idlist RPAREN .

    $default  reduce using rule 30 (printf)


State 132

   31 scanf: SCANF LPAREN STRING COMMA . address_idlist RPAREN

    GET_ADDRESS  shift, and go to state 147

    address_idlist  go to state 148
    get_address_id  go to state 149


State 133

   23 function_use: IDENTIFIER LPAREN idlist RPAREN .

    $default  reduce using rule 23 (function_use)


State 134

   20 function_decl: T IDENTIFIER LPAREN RPAREN .

    $default  reduce using rule 20 (function_decl)


State 135

   21 function_decl: T IDENTIFIER LPAREN params . RPAREN
   22 function_def: T IDENTIFIER LPAREN params . RPAREN LBRACE statements RBRACE
   25 params: params . COMMA param

    COMMA   shift, and go to state 150
    RPAREN  shift, and go to state 151


State 136

   26 params: param .

    $default  reduce using rule 26 (params)


State 137

   27 param: T . IDENTIFIER

    IDENTIFIER  shift, and go to state 152


State 138

   60 eq_assign: IDENTIFIER . LOP_ASSIGN expr

    LOP_ASSIGN  shift, and go to state 47


State 139

   58 eq_assigns: eq_assigns COMMA eq_assign .

    $default  reduce using rule 58 (eq_assigns)


State 140

   66 idlist: idlist COMMA IDENTIFIER .

    $default  reduce using rule 66 (idlist)


State 141

    3 statements: statements . statement
   36 if_else: IF bool_statements statements ELSE statements .

    IF              shift, and go to state 1
    WHILE           shift, and go to state 2
    FOR             shift, and go to state 3
    T_CHAR          shift, and go to state 4
    T_INT           shift, and go to state 5
    T_STRING        shift, and go to state 6
    T_BOOL          shift, and go to state 7
    T_INT_POINTER   shift, and go to state 8
    T_CHAR_POINTER  shift, and go to state 9
    PRINTF          shift, and go to state 10
    SCANF           shift, and go to state 11
    SEMICOLON       shift, and go to state 12
    IDENTIFIER      shift, and go to state 14

    IF              [reduce using rule 36 (if_else)]
    WHILE           [reduce using rule 36 (if_else)]
    FOR             [reduce using rule 36 (if_else)]
    T_CHAR          [reduce using rule 36 (if_else)]
    T_INT           [reduce using rule 36 (if_else)]
    T_STRING        [reduce using rule 36 (if_else)]
    T_BOOL          [reduce using rule 36 (if_else)]
    T_INT_POINTER   [reduce using rule 36 (if_else)]
    T_CHAR_POINTER  [reduce using rule 36 (if_else)]
    PRINTF          [reduce using rule 36 (if_else)]
    SCANF           [reduce using rule 36 (if_else)]
    SEMICOLON       [reduce using rule 36 (if_else)]
    IDENTIFIER      [reduce using rule 36 (if_else)]
    $default        reduce using rule 36 (if_else)

    statement      go to state 55
    for            go to state 18
    function_decl  go to state 19
    function_def   go to state 20
    function_use   go to state 21
    printf         go to state 22
    scanf          go to state 23
    while          go to state 24
    if_else        go to state 25
    declaration    go to state 26
    eq_assign      go to state 27
    opassign       go to state 28
    T              go to state 29


State 142

   19 for: FOR LPAREN SEMICOLON bool_statements SEMICOLON . assigns RPAREN statements

    IDENTIFIER  shift, and go to state 153

    assigns    go to state 154
    eq_assign  go to state 155
    opassign   go to state 156


State 143

   18 for: FOR LPAREN declarations SEMICOLON bool_statements . SEMICOLON assigns RPAREN statements
   39 bool_statements: bool_statements . AND bool_statements
   40                | bool_statements . OR bool_statements

    SEMICOLON  shift, and go to state 157
    OR         shift, and go to state 73
    AND        shift, and go to state 74


State 144

   50 declarations: declarations COMMA declaration .

    $default  reduce using rule 50 (declarations)


State 145

   29 printf: PRINTF LPAREN STRING COMMA exprs . RPAREN
   68 exprs: exprs . COMMA expr

    COMMA   shift, and go to state 158
    RPAREN  shift, and go to state 159


State 146

   69 exprs: expr .
   71 expr: expr . ADD expr
   72     | expr . SUB expr
   75     | expr . MUL expr
   76     | expr . DIV expr
   77     | expr . MOD expr

    ADD  shift, and go to state 82
    SUB  shift, and go to state 83
    MUL  shift, and go to state 84
    DIV  shift, and go to state 85
    MOD  shift, and go to state 86

    $default  reduce using rule 69 (exprs)


State 147

   34 get_address_id: GET_ADDRESS . IDENTIFIER

    IDENTIFIER  shift, and go to state 160


State 148

   31 scanf: SCANF LPAREN STRING COMMA address_idlist . RPAREN
   32 address_idlist: address_idlist . COMMA get_address_id

    COMMA   shift, and go to state 161
    RPAREN  shift, and go to state 162


State 149

   33 address_idlist: get_address_id .

    $default  reduce using rule 33 (address_idlist)


State 150

   25 params: params COMMA . param

    T_CHAR          shift, and go to state 4
    T_INT           shift, and go to state 5
    T_STRING        shift, and go to state 6
    T_BOOL          shift, and go to state 7
    T_INT_POINTER   shift, and go to state 8
    T_CHAR_POINTER  shift, and go to state 9

    param  go to state 163
    T      go to state 137


State 151

   21 function_decl: T IDENTIFIER LPAREN params RPAREN .
   22 function_def: T IDENTIFIER LPAREN params RPAREN . LBRACE statements RBRACE

    LBRACE  shift, and go to state 164

    $default  reduce using rule 21 (function_decl)


State 152

   27 param: T IDENTIFIER .

    $default  reduce using rule 27 (param)


State 153

   60 eq_assign: IDENTIFIER . LOP_ASSIGN expr
   61 opassign: IDENTIFIER . ADD_ASSIGN expr
   62         | IDENTIFIER . SUB_ASSIGN expr
   63         | IDENTIFIER . MUL_ASSIGN expr
   64         | IDENTIFIER . DIV_ASSIGN expr
   65         | IDENTIFIER . MOD_ASSIGN expr

    LOP_ASSIGN  shift, and go to state 47
    ADD_ASSIGN  shift, and go to state 48
    SUB_ASSIGN  shift, and go to state 49
    MOD_ASSIGN  shift, and go to state 50
    DIV_ASSIGN  shift, and go to state 51
    MUL_ASSIGN  shift, and go to state 52


State 154

   19 for: FOR LPAREN SEMICOLON bool_statements SEMICOLON assigns . RPAREN statements
   54 assigns: assigns . COMMA eq_assign
   55        | assigns . COMMA opassign

    COMMA   shift, and go to state 165
    RPAREN  shift, and go to state 166


State 155

   56 assigns: eq_assign .

    $default  reduce using rule 56 (assigns)


State 156

   57 assigns: opassign .

    $default  reduce using rule 57 (assigns)


State 157

   18 for: FOR LPAREN declarations SEMICOLON bool_statements SEMICOLON . assigns RPAREN statements

    IDENTIFIER  shift, and go to state 153

    assigns    go to state 167
    eq_assign  go to state 155
    opassign   go to state 156


State 158

   68 exprs: exprs COMMA . expr

    LPAREN      shift, and go to state 69
    IDENTIFIER  shift, and go to state 31
    INTEGER     shift, and go to state 32
    CHAR        shift, and go to state 33
    STRING      shift, and go to state 34
    ADD         shift, and go to state 35
    SUB         shift, and go to state 36

    expr  go to state 168


State 159

   29 printf: PRINTF LPAREN STRING COMMA exprs RPAREN .

    $default  reduce using rule 29 (printf)


State 160

   34 get_address_id: GET_ADDRESS IDENTIFIER .

    $default  reduce using rule 34 (get_address_id)


State 161

   32 address_idlist: address_idlist COMMA . get_address_id

    GET_ADDRESS  shift, and go to state 147

    get_address_id  go to state 169


State 162

   31 scanf: SCANF LPAREN STRING COMMA address_idlist RPAREN .

    $default  reduce using rule 31 (scanf)


State 163

   25 params: params COMMA param .

    $default  reduce using rule 25 (params)


State 164

   22 function_def: T IDENTIFIER LPAREN params RPAREN LBRACE . statements RBRACE

    IF              shift, and go to state 1
    WHILE           shift, and go to state 2
    FOR             shift, and go to state 3
    T_CHAR          shift, and go to state 4
    T_INT           shift, and go to state 5
    T_STRING        shift, and go to state 6
    T_BOOL          shift, and go to state 7
    T_INT_POINTER   shift, and go to state 8
    T_CHAR_POINTER  shift, and go to state 9
    PRINTF          shift, and go to state 10
    SCANF           shift, and go to state 11
    SEMICOLON       shift, and go to state 12
    LBRACE          shift, and go to state 13
    IDENTIFIER      shift, and go to state 14

    statements     go to state 170
    statement      go to state 17
    for            go to state 18
    function_decl  go to state 19
    function_def   go to state 20
    function_use   go to state 21
    printf         go to state 22
    scanf          go to state 23
    while          go to state 24
    if_else        go to state 25
    declaration    go to state 26
    eq_assign      go to state 27
    opassign       go to state 28
    T              go to state 29


State 165

   54 assigns: assigns COMMA . eq_assign
   55        | assigns COMMA . opassign

    IDENTIFIER  shift, and go to state 153

    eq_assign  go to state 171
    opassign   go to state 172


State 166

   19 for: FOR LPAREN SEMICOLON bool_statements SEMICOLON assigns RPAREN . statements

    IF              shift, and go to state 1
    WHILE           shift, and go to state 2
    FOR             shift, and go to state 3
    T_CHAR          shift, and go to state 4
    T_INT           shift, and go to state 5
    T_STRING        shift, and go to state 6
    T_BOOL          shift, and go to state 7
    T_INT_POINTER   shift, and go to state 8
    T_CHAR_POINTER  shift, and go to state 9
    PRINTF          shift, and go to state 10
    SCANF           shift, and go to state 11
    SEMICOLON       shift, and go to state 12
    LBRACE          shift, and go to state 13
    IDENTIFIER      shift, and go to state 14

    statements     go to state 173
    statement      go to state 17
    for            go to state 18
    function_decl  go to state 19
    function_def   go to state 20
    function_use   go to state 21
    printf         go to state 22
    scanf          go to state 23
    while          go to state 24
    if_else        go to state 25
    declaration    go to state 26
    eq_assign      go to state 27
    opassign       go to state 28
    T              go to state 29


State 167

   18 for: FOR LPAREN declarations SEMICOLON bool_statements SEMICOLON assigns . RPAREN statements
   54 assigns: assigns . COMMA eq_assign
   55        | assigns . COMMA opassign

    COMMA   shift, and go to state 165
    RPAREN  shift, and go to state 174


State 168

   68 exprs: exprs COMMA expr .
   71 expr: expr . ADD expr
   72     | expr . SUB expr
   75     | expr . MUL expr
   76     | expr . DIV expr
   77     | expr . MOD expr

    ADD  shift, and go to state 82
    SUB  shift, and go to state 83
    MUL  shift, and go to state 84
    DIV  shift, and go to state 85
    MOD  shift, and go to state 86

    $default  reduce using rule 68 (exprs)


State 169

   32 address_idlist: address_idlist COMMA get_address_id .

    $default  reduce using rule 32 (address_idlist)


State 170

    3 statements: statements . statement
   22 function_def: T IDENTIFIER LPAREN params RPAREN LBRACE statements . RBRACE

    IF              shift, and go to state 1
    WHILE           shift, and go to state 2
    FOR             shift, and go to state 3
    T_CHAR          shift, and go to state 4
    T_INT           shift, and go to state 5
    T_STRING        shift, and go to state 6
    T_BOOL          shift, and go to state 7
    T_INT_POINTER   shift, and go to state 8
    T_CHAR_POINTER  shift, and go to state 9
    PRINTF          shift, and go to state 10
    SCANF           shift, and go to state 11
    SEMICOLON       shift, and go to state 12
    RBRACE          shift, and go to state 175
    IDENTIFIER      shift, and go to state 14

    statement      go to state 55
    for            go to state 18
    function_decl  go to state 19
    function_def   go to state 20
    function_use   go to state 21
    printf         go to state 22
    scanf          go to state 23
    while          go to state 24
    if_else        go to state 25
    declaration    go to state 26
    eq_assign      go to state 27
    opassign       go to state 28
    T              go to state 29


State 171

   54 assigns: assigns COMMA eq_assign .

    $default  reduce using rule 54 (assigns)


State 172

   55 assigns: assigns COMMA opassign .

    $default  reduce using rule 55 (assigns)


State 173

    3 statements: statements . statement
   19 for: FOR LPAREN SEMICOLON bool_statements SEMICOLON assigns RPAREN statements .

    IF              shift, and go to state 1
    WHILE           shift, and go to state 2
    FOR             shift, and go to state 3
    T_CHAR          shift, and go to state 4
    T_INT           shift, and go to state 5
    T_STRING        shift, and go to state 6
    T_BOOL          shift, and go to state 7
    T_INT_POINTER   shift, and go to state 8
    T_CHAR_POINTER  shift, and go to state 9
    PRINTF          shift, and go to state 10
    SCANF           shift, and go to state 11
    SEMICOLON       shift, and go to state 12
    IDENTIFIER      shift, and go to state 14

    IF              [reduce using rule 19 (for)]
    WHILE           [reduce using rule 19 (for)]
    FOR             [reduce using rule 19 (for)]
    T_CHAR          [reduce using rule 19 (for)]
    T_INT           [reduce using rule 19 (for)]
    T_STRING        [reduce using rule 19 (for)]
    T_BOOL          [reduce using rule 19 (for)]
    T_INT_POINTER   [reduce using rule 19 (for)]
    T_CHAR_POINTER  [reduce using rule 19 (for)]
    PRINTF          [reduce using rule 19 (for)]
    SCANF           [reduce using rule 19 (for)]
    SEMICOLON       [reduce using rule 19 (for)]
    IDENTIFIER      [reduce using rule 19 (for)]
    $default        reduce using rule 19 (for)

    statement      go to state 55
    for            go to state 18
    function_decl  go to state 19
    function_def   go to state 20
    function_use   go to state 21
    printf         go to state 22
    scanf          go to state 23
    while          go to state 24
    if_else        go to state 25
    declaration    go to state 26
    eq_assign      go to state 27
    opassign       go to state 28
    T              go to state 29


State 174

   18 for: FOR LPAREN declarations SEMICOLON bool_statements SEMICOLON assigns RPAREN . statements

    IF              shift, and go to state 1
    WHILE           shift, and go to state 2
    FOR             shift, and go to state 3
    T_CHAR          shift, and go to state 4
    T_INT           shift, and go to state 5
    T_STRING        shift, and go to state 6
    T_BOOL          shift, and go to state 7
    T_INT_POINTER   shift, and go to state 8
    T_CHAR_POINTER  shift, and go to state 9
    PRINTF          shift, and go to state 10
    SCANF           shift, and go to state 11
    SEMICOLON       shift, and go to state 12
    LBRACE          shift, and go to state 13
    IDENTIFIER      shift, and go to state 14

    statements     go to state 176
    statement      go to state 17
    for            go to state 18
    function_decl  go to state 19
    function_def   go to state 20
    function_use   go to state 21
    printf         go to state 22
    scanf          go to state 23
    while          go to state 24
    if_else        go to state 25
    declaration    go to state 26
    eq_assign      go to state 27
    opassign       go to state 28
    T              go to state 29


State 175

   22 function_def: T IDENTIFIER LPAREN params RPAREN LBRACE statements RBRACE .

    $default  reduce using rule 22 (function_def)


State 176

    3 statements: statements . statement
   18 for: FOR LPAREN declarations SEMICOLON bool_statements SEMICOLON assigns RPAREN statements .

    IF              shift, and go to state 1
    WHILE           shift, and go to state 2
    FOR             shift, and go to state 3
    T_CHAR          shift, and go to state 4
    T_INT           shift, and go to state 5
    T_STRING        shift, and go to state 6
    T_BOOL          shift, and go to state 7
    T_INT_POINTER   shift, and go to state 8
    T_CHAR_POINTER  shift, and go to state 9
    PRINTF          shift, and go to state 10
    SCANF           shift, and go to state 11
    SEMICOLON       shift, and go to state 12
    IDENTIFIER      shift, and go to state 14

    IF              [reduce using rule 18 (for)]
    WHILE           [reduce using rule 18 (for)]
    FOR             [reduce using rule 18 (for)]
    T_CHAR          [reduce using rule 18 (for)]
    T_INT           [reduce using rule 18 (for)]
    T_STRING        [reduce using rule 18 (for)]
    T_BOOL          [reduce using rule 18 (for)]
    T_INT_POINTER   [reduce using rule 18 (for)]
    T_CHAR_POINTER  [reduce using rule 18 (for)]
    PRINTF          [reduce using rule 18 (for)]
    SCANF           [reduce using rule 18 (for)]
    SEMICOLON       [reduce using rule 18 (for)]
    IDENTIFIER      [reduce using rule 18 (for)]
    $default        reduce using rule 18 (for)

    statement      go to state 55
    for            go to state 18
    function_decl  go to state 19
    function_def   go to state 20
    function_use   go to state 21
    printf         go to state 22
    scanf          go to state 23
    while          go to state 24
    if_else        go to state 25
    declaration    go to state 26
    eq_assign      go to state 27
    opassign       go to state 28
    T              go to state 29

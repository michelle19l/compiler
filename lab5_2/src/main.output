Terminals unused in grammar

   RETURN
   POINT
   LBRACK
   RBRACK
   BOOL
   GET_VALUE


State 70 conflicts: 1 shift/reduce
State 72 conflicts: 1 shift/reduce
State 74 conflicts: 1 shift/reduce
State 81 conflicts: 16 shift/reduce
State 93 conflicts: 15 shift/reduce
State 147 conflicts: 15 shift/reduce
State 179 conflicts: 15 shift/reduce
State 182 conflicts: 15 shift/reduce


Grammar

    0 $accept: program $end

    1 program: statements

    2 statements: statement
    3           | statements statement
    4           | LBRACE statements RBRACE
    5           | LBRACE RBRACE

    6 statement: SEMICOLON
    7          | declaration SEMICOLON
    8          | eq_assign SEMICOLON
    9          | if_else
   10          | while
   11          | printf SEMICOLON
   12          | scanf SEMICOLON
   13          | function_decl SEMICOLON
   14          | function_def
   15          | function_use SEMICOLON
   16          | for
   17          | opassign SEMICOLON

   18 for: FOR LPAREN declarations SEMICOLON bool_statements SEMICOLON assigns RPAREN statements
   19    | FOR LPAREN SEMICOLON bool_statements SEMICOLON assigns RPAREN statements

   20 function_decl: T IDENTIFIER LPAREN RPAREN
   21              | T IDENTIFIER LPAREN params RPAREN

   22 function_def: T IDENTIFIER LPAREN params RPAREN LBRACE statements RBRACE

   23 function_use: IDENTIFIER LPAREN idlist RPAREN
   24             | IDENTIFIER LPAREN RPAREN

   25 params: params COMMA param
   26       | param

   27 param: T IDENTIFIER

   28 printf: PRINTF LPAREN STRING RPAREN
   29       | PRINTF LPAREN STRING COMMA exprs RPAREN
   30       | PRINTF LPAREN idlist RPAREN

   31 scanf: SCANF LPAREN STRING COMMA address_idlist RPAREN

   32 address_idlist: address_idlist COMMA get_address_id
   33               | get_address_id

   34 get_address_id: GET_ADDRESS IDENTIFIER

   35 while: WHILE bool_statements statements

   36 if_else: IF bool_statements statements ELSE statements
   37        | IF bool_statements statements

   38 bool_statements: LPAREN bool_statements RPAREN
   39                | bool_statements AND bool_statements
   40                | bool_statements OR bool_statements
   41                | NOT bool_statements
   42                | bool_statement

   43 bool_statement: expr
   44               | bool_statement GREAT bool_statement
   45               | bool_statement LESS bool_statement
   46               | bool_statement GREAT_EQ bool_statement
   47               | bool_statement LESS_EQ bool_statement
   48               | bool_statement LOP_EQ bool_statement
   49               | bool_statement NOT_EQ bool_statement

   50 declarations: declarations COMMA declaration
   51             | declaration

   52 declaration: T eq_assigns
   53            | T idlist

   54 assigns: assigns COMMA eq_assign
   55        | assigns COMMA opassign
   56        | eq_assign
   57        | opassign

   58 eq_assigns: eq_assigns COMMA eq_assign
   59           | eq_assign

   60 eq_assign: IDENTIFIER LOP_ASSIGN expr

   61 opassign: IDENTIFIER ADD_ASSIGN expr
   62         | IDENTIFIER SUB_ASSIGN expr
   63         | IDENTIFIER MUL_ASSIGN expr
   64         | IDENTIFIER DIV_ASSIGN expr
   65         | IDENTIFIER MOD_ASSIGN expr
   66         | SELF_DEC IDENTIFIER
   67         | SELF_INC IDENTIFIER
   68         | IDENTIFIER SELF_INC
   69         | IDENTIFIER SELF_DEC

   70 idlist: idlist COMMA IDENTIFIER
   71       | IDENTIFIER

   72 exprs: exprs COMMA expr
   73      | expr

   74 expr: LPAREN expr RPAREN
   75     | expr ADD expr
   76     | expr SUB expr
   77     | SUB expr
   78     | ADD expr
   79     | expr MUL expr
   80     | expr DIV expr
   81     | expr MOD expr
   82     | IDENTIFIER
   83     | INTEGER
   84     | CHAR
   85     | STRING

   86 T: T_INT
   87  | T_CHAR
   88  | T_BOOL
   89  | T_STRING
   90  | T_INT_POINTER
   91  | T_CHAR_POINTER


Terminals, with rules where they appear

$end (0) 0
error (256)
IF (258) 36 37
ELSE (259) 36
WHILE (260) 35
FOR (261) 18 19
RETURN (262)
T_CHAR (263) 87
T_INT (264) 86
T_STRING (265) 89
T_BOOL (266) 88
T_INT_POINTER (267) 90
T_CHAR_POINTER (268) 91
PRINTF (269) 28 29 30
SCANF (270) 31
LOP_ASSIGN (271) 60
ADD_ASSIGN (272) 61
SUB_ASSIGN (273) 62
MOD_ASSIGN (274) 65
DIV_ASSIGN (275) 64
MUL_ASSIGN (276) 63
SEMICOLON (277) 6 7 8 11 12 13 15 17 18 19
COMMA (278) 25 29 31 32 50 54 55 58 70 72
POINT (279)
LPAREN (280) 18 19 20 21 22 23 24 28 29 30 31 38 74
RPAREN (281) 18 19 20 21 22 23 24 28 29 30 31 38 74
LBRACK (282)
RBRACK (283)
LBRACE (284) 4 5 22
RBRACE (285) 4 5 22
IDENTIFIER (286) 20 21 22 23 24 27 34 60 61 62 63 64 65 66 67 68 69
    70 71 82
INTEGER (287) 83
CHAR (288) 84
BOOL (289)
STRING (290) 28 29 31 85
LOP_EQ (291) 48
GREAT (292) 44
LESS (293) 45
GREAT_EQ (294) 46
LESS_EQ (295) 47
NOT_EQ (296) 49
ADD (297) 75 78
SUB (298) 76 77
MUL (299) 79
DIV (300) 80
MOD (301) 81
OR (302) 40
AND (303) 39
NOT (304) 41
NEG (305)
POS (306)
SELF_INC (307) 67 68
SELF_DEC (308) 66 69
SELF_INC_R (309)
SELF_DEC_R (310)
SELF_INC_L (311)
SELF_DEC_L (312)
GET_ADDRESS (313) 34
GET_VALUE (314)


Nonterminals, with rules where they appear

$accept (60)
    on left: 0
program (61)
    on left: 1, on right: 0
statements (62)
    on left: 2 3 4 5, on right: 1 3 4 18 19 22 35 36 37
statement (63)
    on left: 6 7 8 9 10 11 12 13 14 15 16 17, on right: 2 3
for (64)
    on left: 18 19, on right: 16
function_decl (65)
    on left: 20 21, on right: 13
function_def (66)
    on left: 22, on right: 14
function_use (67)
    on left: 23 24, on right: 15
params (68)
    on left: 25 26, on right: 21 22 25
param (69)
    on left: 27, on right: 25 26
printf (70)
    on left: 28 29 30, on right: 11
scanf (71)
    on left: 31, on right: 12
address_idlist (72)
    on left: 32 33, on right: 31 32
get_address_id (73)
    on left: 34, on right: 32 33
while (74)
    on left: 35, on right: 10
if_else (75)
    on left: 36 37, on right: 9
bool_statements (76)
    on left: 38 39 40 41 42, on right: 18 19 35 36 37 38 39 40 41
bool_statement (77)
    on left: 43 44 45 46 47 48 49, on right: 42 44 45 46 47 48 49
declarations (78)
    on left: 50 51, on right: 18 50
declaration (79)
    on left: 52 53, on right: 7 50 51
assigns (80)
    on left: 54 55 56 57, on right: 18 19 54 55
eq_assigns (81)
    on left: 58 59, on right: 52 58
eq_assign (82)
    on left: 60, on right: 8 54 56 58 59
opassign (83)
    on left: 61 62 63 64 65 66 67 68 69, on right: 17 55 57
idlist (84)
    on left: 70 71, on right: 23 30 53 70
exprs (85)
    on left: 72 73, on right: 29 72
expr (86)
    on left: 74 75 76 77 78 79 80 81 82 83 84 85, on right: 43 60 61
    62 63 64 65 72 73 74 75 76 77 78 79 80 81
T (87)
    on left: 86 87 88 89 90 91, on right: 20 21 22 27 52 53


State 0

    0 $accept: . program $end

    IF              shift, and go to state 1
    WHILE           shift, and go to state 2
    FOR             shift, and go to state 3
    T_CHAR          shift, and go to state 4
    T_INT           shift, and go to state 5
    T_STRING        shift, and go to state 6
    T_BOOL          shift, and go to state 7
    T_INT_POINTER   shift, and go to state 8
    T_CHAR_POINTER  shift, and go to state 9
    PRINTF          shift, and go to state 10
    SCANF           shift, and go to state 11
    SEMICOLON       shift, and go to state 12
    LBRACE          shift, and go to state 13
    IDENTIFIER      shift, and go to state 14
    SELF_INC        shift, and go to state 15
    SELF_DEC        shift, and go to state 16

    program        go to state 17
    statements     go to state 18
    statement      go to state 19
    for            go to state 20
    function_decl  go to state 21
    function_def   go to state 22
    function_use   go to state 23
    printf         go to state 24
    scanf          go to state 25
    while          go to state 26
    if_else        go to state 27
    declaration    go to state 28
    eq_assign      go to state 29
    opassign       go to state 30
    T              go to state 31


State 1

   36 if_else: IF . bool_statements statements ELSE statements
   37        | IF . bool_statements statements

    LPAREN      shift, and go to state 32
    IDENTIFIER  shift, and go to state 33
    INTEGER     shift, and go to state 34
    CHAR        shift, and go to state 35
    STRING      shift, and go to state 36
    ADD         shift, and go to state 37
    SUB         shift, and go to state 38
    NOT         shift, and go to state 39

    bool_statements  go to state 40
    bool_statement   go to state 41
    expr             go to state 42


State 2

   35 while: WHILE . bool_statements statements

    LPAREN      shift, and go to state 32
    IDENTIFIER  shift, and go to state 33
    INTEGER     shift, and go to state 34
    CHAR        shift, and go to state 35
    STRING      shift, and go to state 36
    ADD         shift, and go to state 37
    SUB         shift, and go to state 38
    NOT         shift, and go to state 39

    bool_statements  go to state 43
    bool_statement   go to state 41
    expr             go to state 42


State 3

   18 for: FOR . LPAREN declarations SEMICOLON bool_statements SEMICOLON assigns RPAREN statements
   19    | FOR . LPAREN SEMICOLON bool_statements SEMICOLON assigns RPAREN statements

    LPAREN  shift, and go to state 44


State 4

   87 T: T_CHAR .

    $default  reduce using rule 87 (T)


State 5

   86 T: T_INT .

    $default  reduce using rule 86 (T)


State 6

   89 T: T_STRING .

    $default  reduce using rule 89 (T)


State 7

   88 T: T_BOOL .

    $default  reduce using rule 88 (T)


State 8

   90 T: T_INT_POINTER .

    $default  reduce using rule 90 (T)


State 9

   91 T: T_CHAR_POINTER .

    $default  reduce using rule 91 (T)


State 10

   28 printf: PRINTF . LPAREN STRING RPAREN
   29       | PRINTF . LPAREN STRING COMMA exprs RPAREN
   30       | PRINTF . LPAREN idlist RPAREN

    LPAREN  shift, and go to state 45


State 11

   31 scanf: SCANF . LPAREN STRING COMMA address_idlist RPAREN

    LPAREN  shift, and go to state 46


State 12

    6 statement: SEMICOLON .

    $default  reduce using rule 6 (statement)


State 13

    4 statements: LBRACE . statements RBRACE
    5           | LBRACE . RBRACE

    IF              shift, and go to state 1
    WHILE           shift, and go to state 2
    FOR             shift, and go to state 3
    T_CHAR          shift, and go to state 4
    T_INT           shift, and go to state 5
    T_STRING        shift, and go to state 6
    T_BOOL          shift, and go to state 7
    T_INT_POINTER   shift, and go to state 8
    T_CHAR_POINTER  shift, and go to state 9
    PRINTF          shift, and go to state 10
    SCANF           shift, and go to state 11
    SEMICOLON       shift, and go to state 12
    LBRACE          shift, and go to state 13
    RBRACE          shift, and go to state 47
    IDENTIFIER      shift, and go to state 14
    SELF_INC        shift, and go to state 15
    SELF_DEC        shift, and go to state 16

    statements     go to state 48
    statement      go to state 19
    for            go to state 20
    function_decl  go to state 21
    function_def   go to state 22
    function_use   go to state 23
    printf         go to state 24
    scanf          go to state 25
    while          go to state 26
    if_else        go to state 27
    declaration    go to state 28
    eq_assign      go to state 29
    opassign       go to state 30
    T              go to state 31


State 14

   23 function_use: IDENTIFIER . LPAREN idlist RPAREN
   24             | IDENTIFIER . LPAREN RPAREN
   60 eq_assign: IDENTIFIER . LOP_ASSIGN expr
   61 opassign: IDENTIFIER . ADD_ASSIGN expr
   62         | IDENTIFIER . SUB_ASSIGN expr
   63         | IDENTIFIER . MUL_ASSIGN expr
   64         | IDENTIFIER . DIV_ASSIGN expr
   65         | IDENTIFIER . MOD_ASSIGN expr
   68         | IDENTIFIER . SELF_INC
   69         | IDENTIFIER . SELF_DEC

    LOP_ASSIGN  shift, and go to state 49
    ADD_ASSIGN  shift, and go to state 50
    SUB_ASSIGN  shift, and go to state 51
    MOD_ASSIGN  shift, and go to state 52
    DIV_ASSIGN  shift, and go to state 53
    MUL_ASSIGN  shift, and go to state 54
    LPAREN      shift, and go to state 55
    SELF_INC    shift, and go to state 56
    SELF_DEC    shift, and go to state 57


State 15

   67 opassign: SELF_INC . IDENTIFIER

    IDENTIFIER  shift, and go to state 58


State 16

   66 opassign: SELF_DEC . IDENTIFIER

    IDENTIFIER  shift, and go to state 59


State 17

    0 $accept: program . $end

    $end  shift, and go to state 60


State 18

    1 program: statements .
    3 statements: statements . statement

    IF              shift, and go to state 1
    WHILE           shift, and go to state 2
    FOR             shift, and go to state 3
    T_CHAR          shift, and go to state 4
    T_INT           shift, and go to state 5
    T_STRING        shift, and go to state 6
    T_BOOL          shift, and go to state 7
    T_INT_POINTER   shift, and go to state 8
    T_CHAR_POINTER  shift, and go to state 9
    PRINTF          shift, and go to state 10
    SCANF           shift, and go to state 11
    SEMICOLON       shift, and go to state 12
    IDENTIFIER      shift, and go to state 14
    SELF_INC        shift, and go to state 15
    SELF_DEC        shift, and go to state 16

    $default  reduce using rule 1 (program)

    statement      go to state 61
    for            go to state 20
    function_decl  go to state 21
    function_def   go to state 22
    function_use   go to state 23
    printf         go to state 24
    scanf          go to state 25
    while          go to state 26
    if_else        go to state 27
    declaration    go to state 28
    eq_assign      go to state 29
    opassign       go to state 30
    T              go to state 31


State 19

    2 statements: statement .

    $default  reduce using rule 2 (statements)


State 20

   16 statement: for .

    $default  reduce using rule 16 (statement)


State 21

   13 statement: function_decl . SEMICOLON

    SEMICOLON  shift, and go to state 62


State 22

   14 statement: function_def .

    $default  reduce using rule 14 (statement)


State 23

   15 statement: function_use . SEMICOLON

    SEMICOLON  shift, and go to state 63


State 24

   11 statement: printf . SEMICOLON

    SEMICOLON  shift, and go to state 64


State 25

   12 statement: scanf . SEMICOLON

    SEMICOLON  shift, and go to state 65


State 26

   10 statement: while .

    $default  reduce using rule 10 (statement)


State 27

    9 statement: if_else .

    $default  reduce using rule 9 (statement)


State 28

    7 statement: declaration . SEMICOLON

    SEMICOLON  shift, and go to state 66


State 29

    8 statement: eq_assign . SEMICOLON

    SEMICOLON  shift, and go to state 67


State 30

   17 statement: opassign . SEMICOLON

    SEMICOLON  shift, and go to state 68


State 31

   20 function_decl: T . IDENTIFIER LPAREN RPAREN
   21              | T . IDENTIFIER LPAREN params RPAREN
   22 function_def: T . IDENTIFIER LPAREN params RPAREN LBRACE statements RBRACE
   52 declaration: T . eq_assigns
   53            | T . idlist

    IDENTIFIER  shift, and go to state 69

    eq_assigns  go to state 70
    eq_assign   go to state 71
    idlist      go to state 72


State 32

   38 bool_statements: LPAREN . bool_statements RPAREN
   74 expr: LPAREN . expr RPAREN

    LPAREN      shift, and go to state 32
    IDENTIFIER  shift, and go to state 33
    INTEGER     shift, and go to state 34
    CHAR        shift, and go to state 35
    STRING      shift, and go to state 36
    ADD         shift, and go to state 37
    SUB         shift, and go to state 38
    NOT         shift, and go to state 39

    bool_statements  go to state 73
    bool_statement   go to state 41
    expr             go to state 74


State 33

   82 expr: IDENTIFIER .

    $default  reduce using rule 82 (expr)


State 34

   83 expr: INTEGER .

    $default  reduce using rule 83 (expr)


State 35

   84 expr: CHAR .

    $default  reduce using rule 84 (expr)


State 36

   85 expr: STRING .

    $default  reduce using rule 85 (expr)


State 37

   78 expr: ADD . expr

    LPAREN      shift, and go to state 75
    IDENTIFIER  shift, and go to state 33
    INTEGER     shift, and go to state 34
    CHAR        shift, and go to state 35
    STRING      shift, and go to state 36
    ADD         shift, and go to state 37
    SUB         shift, and go to state 38

    expr  go to state 76


State 38

   77 expr: SUB . expr

    LPAREN      shift, and go to state 75
    IDENTIFIER  shift, and go to state 33
    INTEGER     shift, and go to state 34
    CHAR        shift, and go to state 35
    STRING      shift, and go to state 36
    ADD         shift, and go to state 37
    SUB         shift, and go to state 38

    expr  go to state 77


State 39

   41 bool_statements: NOT . bool_statements

    LPAREN      shift, and go to state 32
    IDENTIFIER  shift, and go to state 33
    INTEGER     shift, and go to state 34
    CHAR        shift, and go to state 35
    STRING      shift, and go to state 36
    ADD         shift, and go to state 37
    SUB         shift, and go to state 38
    NOT         shift, and go to state 39

    bool_statements  go to state 78
    bool_statement   go to state 41
    expr             go to state 42


State 40

   36 if_else: IF bool_statements . statements ELSE statements
   37        | IF bool_statements . statements
   39 bool_statements: bool_statements . AND bool_statements
   40                | bool_statements . OR bool_statements

    IF              shift, and go to state 1
    WHILE           shift, and go to state 2
    FOR             shift, and go to state 3
    T_CHAR          shift, and go to state 4
    T_INT           shift, and go to state 5
    T_STRING        shift, and go to state 6
    T_BOOL          shift, and go to state 7
    T_INT_POINTER   shift, and go to state 8
    T_CHAR_POINTER  shift, and go to state 9
    PRINTF          shift, and go to state 10
    SCANF           shift, and go to state 11
    SEMICOLON       shift, and go to state 12
    LBRACE          shift, and go to state 13
    IDENTIFIER      shift, and go to state 14
    OR              shift, and go to state 79
    AND             shift, and go to state 80
    SELF_INC        shift, and go to state 15
    SELF_DEC        shift, and go to state 16

    statements     go to state 81
    statement      go to state 19
    for            go to state 20
    function_decl  go to state 21
    function_def   go to state 22
    function_use   go to state 23
    printf         go to state 24
    scanf          go to state 25
    while          go to state 26
    if_else        go to state 27
    declaration    go to state 28
    eq_assign      go to state 29
    opassign       go to state 30
    T              go to state 31


State 41

   42 bool_statements: bool_statement .
   44 bool_statement: bool_statement . GREAT bool_statement
   45               | bool_statement . LESS bool_statement
   46               | bool_statement . GREAT_EQ bool_statement
   47               | bool_statement . LESS_EQ bool_statement
   48               | bool_statement . LOP_EQ bool_statement
   49               | bool_statement . NOT_EQ bool_statement

    LOP_EQ    shift, and go to state 82
    GREAT     shift, and go to state 83
    LESS      shift, and go to state 84
    GREAT_EQ  shift, and go to state 85
    LESS_EQ   shift, and go to state 86
    NOT_EQ    shift, and go to state 87

    $default  reduce using rule 42 (bool_statements)


State 42

   43 bool_statement: expr .
   75 expr: expr . ADD expr
   76     | expr . SUB expr
   79     | expr . MUL expr
   80     | expr . DIV expr
   81     | expr . MOD expr

    ADD  shift, and go to state 88
    SUB  shift, and go to state 89
    MUL  shift, and go to state 90
    DIV  shift, and go to state 91
    MOD  shift, and go to state 92

    $default  reduce using rule 43 (bool_statement)


State 43

   35 while: WHILE bool_statements . statements
   39 bool_statements: bool_statements . AND bool_statements
   40                | bool_statements . OR bool_statements

    IF              shift, and go to state 1
    WHILE           shift, and go to state 2
    FOR             shift, and go to state 3
    T_CHAR          shift, and go to state 4
    T_INT           shift, and go to state 5
    T_STRING        shift, and go to state 6
    T_BOOL          shift, and go to state 7
    T_INT_POINTER   shift, and go to state 8
    T_CHAR_POINTER  shift, and go to state 9
    PRINTF          shift, and go to state 10
    SCANF           shift, and go to state 11
    SEMICOLON       shift, and go to state 12
    LBRACE          shift, and go to state 13
    IDENTIFIER      shift, and go to state 14
    OR              shift, and go to state 79
    AND             shift, and go to state 80
    SELF_INC        shift, and go to state 15
    SELF_DEC        shift, and go to state 16

    statements     go to state 93
    statement      go to state 19
    for            go to state 20
    function_decl  go to state 21
    function_def   go to state 22
    function_use   go to state 23
    printf         go to state 24
    scanf          go to state 25
    while          go to state 26
    if_else        go to state 27
    declaration    go to state 28
    eq_assign      go to state 29
    opassign       go to state 30
    T              go to state 31


State 44

   18 for: FOR LPAREN . declarations SEMICOLON bool_statements SEMICOLON assigns RPAREN statements
   19    | FOR LPAREN . SEMICOLON bool_statements SEMICOLON assigns RPAREN statements

    T_CHAR          shift, and go to state 4
    T_INT           shift, and go to state 5
    T_STRING        shift, and go to state 6
    T_BOOL          shift, and go to state 7
    T_INT_POINTER   shift, and go to state 8
    T_CHAR_POINTER  shift, and go to state 9
    SEMICOLON       shift, and go to state 94

    declarations  go to state 95
    declaration   go to state 96
    T             go to state 97


State 45

   28 printf: PRINTF LPAREN . STRING RPAREN
   29       | PRINTF LPAREN . STRING COMMA exprs RPAREN
   30       | PRINTF LPAREN . idlist RPAREN

    IDENTIFIER  shift, and go to state 98
    STRING      shift, and go to state 99

    idlist  go to state 100


State 46

   31 scanf: SCANF LPAREN . STRING COMMA address_idlist RPAREN

    STRING  shift, and go to state 101


State 47

    5 statements: LBRACE RBRACE .

    $default  reduce using rule 5 (statements)


State 48

    3 statements: statements . statement
    4           | LBRACE statements . RBRACE

    IF              shift, and go to state 1
    WHILE           shift, and go to state 2
    FOR             shift, and go to state 3
    T_CHAR          shift, and go to state 4
    T_INT           shift, and go to state 5
    T_STRING        shift, and go to state 6
    T_BOOL          shift, and go to state 7
    T_INT_POINTER   shift, and go to state 8
    T_CHAR_POINTER  shift, and go to state 9
    PRINTF          shift, and go to state 10
    SCANF           shift, and go to state 11
    SEMICOLON       shift, and go to state 12
    RBRACE          shift, and go to state 102
    IDENTIFIER      shift, and go to state 14
    SELF_INC        shift, and go to state 15
    SELF_DEC        shift, and go to state 16

    statement      go to state 61
    for            go to state 20
    function_decl  go to state 21
    function_def   go to state 22
    function_use   go to state 23
    printf         go to state 24
    scanf          go to state 25
    while          go to state 26
    if_else        go to state 27
    declaration    go to state 28
    eq_assign      go to state 29
    opassign       go to state 30
    T              go to state 31


State 49

   60 eq_assign: IDENTIFIER LOP_ASSIGN . expr

    LPAREN      shift, and go to state 75
    IDENTIFIER  shift, and go to state 33
    INTEGER     shift, and go to state 34
    CHAR        shift, and go to state 35
    STRING      shift, and go to state 36
    ADD         shift, and go to state 37
    SUB         shift, and go to state 38

    expr  go to state 103


State 50

   61 opassign: IDENTIFIER ADD_ASSIGN . expr

    LPAREN      shift, and go to state 75
    IDENTIFIER  shift, and go to state 33
    INTEGER     shift, and go to state 34
    CHAR        shift, and go to state 35
    STRING      shift, and go to state 36
    ADD         shift, and go to state 37
    SUB         shift, and go to state 38

    expr  go to state 104


State 51

   62 opassign: IDENTIFIER SUB_ASSIGN . expr

    LPAREN      shift, and go to state 75
    IDENTIFIER  shift, and go to state 33
    INTEGER     shift, and go to state 34
    CHAR        shift, and go to state 35
    STRING      shift, and go to state 36
    ADD         shift, and go to state 37
    SUB         shift, and go to state 38

    expr  go to state 105


State 52

   65 opassign: IDENTIFIER MOD_ASSIGN . expr

    LPAREN      shift, and go to state 75
    IDENTIFIER  shift, and go to state 33
    INTEGER     shift, and go to state 34
    CHAR        shift, and go to state 35
    STRING      shift, and go to state 36
    ADD         shift, and go to state 37
    SUB         shift, and go to state 38

    expr  go to state 106


State 53

   64 opassign: IDENTIFIER DIV_ASSIGN . expr

    LPAREN      shift, and go to state 75
    IDENTIFIER  shift, and go to state 33
    INTEGER     shift, and go to state 34
    CHAR        shift, and go to state 35
    STRING      shift, and go to state 36
    ADD         shift, and go to state 37
    SUB         shift, and go to state 38

    expr  go to state 107


State 54

   63 opassign: IDENTIFIER MUL_ASSIGN . expr

    LPAREN      shift, and go to state 75
    IDENTIFIER  shift, and go to state 33
    INTEGER     shift, and go to state 34
    CHAR        shift, and go to state 35
    STRING      shift, and go to state 36
    ADD         shift, and go to state 37
    SUB         shift, and go to state 38

    expr  go to state 108


State 55

   23 function_use: IDENTIFIER LPAREN . idlist RPAREN
   24             | IDENTIFIER LPAREN . RPAREN

    RPAREN      shift, and go to state 109
    IDENTIFIER  shift, and go to state 98

    idlist  go to state 110


State 56

   68 opassign: IDENTIFIER SELF_INC .

    $default  reduce using rule 68 (opassign)


State 57

   69 opassign: IDENTIFIER SELF_DEC .

    $default  reduce using rule 69 (opassign)


State 58

   67 opassign: SELF_INC IDENTIFIER .

    $default  reduce using rule 67 (opassign)


State 59

   66 opassign: SELF_DEC IDENTIFIER .

    $default  reduce using rule 66 (opassign)


State 60

    0 $accept: program $end .

    $default  accept


State 61

    3 statements: statements statement .

    $default  reduce using rule 3 (statements)


State 62

   13 statement: function_decl SEMICOLON .

    $default  reduce using rule 13 (statement)


State 63

   15 statement: function_use SEMICOLON .

    $default  reduce using rule 15 (statement)


State 64

   11 statement: printf SEMICOLON .

    $default  reduce using rule 11 (statement)


State 65

   12 statement: scanf SEMICOLON .

    $default  reduce using rule 12 (statement)


State 66

    7 statement: declaration SEMICOLON .

    $default  reduce using rule 7 (statement)


State 67

    8 statement: eq_assign SEMICOLON .

    $default  reduce using rule 8 (statement)


State 68

   17 statement: opassign SEMICOLON .

    $default  reduce using rule 17 (statement)


State 69

   20 function_decl: T IDENTIFIER . LPAREN RPAREN
   21              | T IDENTIFIER . LPAREN params RPAREN
   22 function_def: T IDENTIFIER . LPAREN params RPAREN LBRACE statements RBRACE
   60 eq_assign: IDENTIFIER . LOP_ASSIGN expr
   71 idlist: IDENTIFIER .

    LOP_ASSIGN  shift, and go to state 49
    LPAREN      shift, and go to state 111

    $default  reduce using rule 71 (idlist)


State 70

   52 declaration: T eq_assigns .
   58 eq_assigns: eq_assigns . COMMA eq_assign

    COMMA  shift, and go to state 112

    COMMA     [reduce using rule 52 (declaration)]
    $default  reduce using rule 52 (declaration)


State 71

   59 eq_assigns: eq_assign .

    $default  reduce using rule 59 (eq_assigns)


State 72

   53 declaration: T idlist .
   70 idlist: idlist . COMMA IDENTIFIER

    COMMA  shift, and go to state 113

    COMMA     [reduce using rule 53 (declaration)]
    $default  reduce using rule 53 (declaration)


State 73

   38 bool_statements: LPAREN bool_statements . RPAREN
   39                | bool_statements . AND bool_statements
   40                | bool_statements . OR bool_statements

    RPAREN  shift, and go to state 114
    OR      shift, and go to state 79
    AND     shift, and go to state 80


State 74

   43 bool_statement: expr .
   74 expr: LPAREN expr . RPAREN
   75     | expr . ADD expr
   76     | expr . SUB expr
   79     | expr . MUL expr
   80     | expr . DIV expr
   81     | expr . MOD expr

    RPAREN  shift, and go to state 115
    ADD     shift, and go to state 88
    SUB     shift, and go to state 89
    MUL     shift, and go to state 90
    DIV     shift, and go to state 91
    MOD     shift, and go to state 92

    RPAREN    [reduce using rule 43 (bool_statement)]
    $default  reduce using rule 43 (bool_statement)


State 75

   74 expr: LPAREN . expr RPAREN

    LPAREN      shift, and go to state 75
    IDENTIFIER  shift, and go to state 33
    INTEGER     shift, and go to state 34
    CHAR        shift, and go to state 35
    STRING      shift, and go to state 36
    ADD         shift, and go to state 37
    SUB         shift, and go to state 38

    expr  go to state 116


State 76

   75 expr: expr . ADD expr
   76     | expr . SUB expr
   78     | ADD expr .
   79     | expr . MUL expr
   80     | expr . DIV expr
   81     | expr . MOD expr

    $default  reduce using rule 78 (expr)


State 77

   75 expr: expr . ADD expr
   76     | expr . SUB expr
   77     | SUB expr .
   79     | expr . MUL expr
   80     | expr . DIV expr
   81     | expr . MOD expr

    $default  reduce using rule 77 (expr)


State 78

   39 bool_statements: bool_statements . AND bool_statements
   40                | bool_statements . OR bool_statements
   41                | NOT bool_statements .

    $default  reduce using rule 41 (bool_statements)


State 79

   40 bool_statements: bool_statements OR . bool_statements

    LPAREN      shift, and go to state 32
    IDENTIFIER  shift, and go to state 33
    INTEGER     shift, and go to state 34
    CHAR        shift, and go to state 35
    STRING      shift, and go to state 36
    ADD         shift, and go to state 37
    SUB         shift, and go to state 38
    NOT         shift, and go to state 39

    bool_statements  go to state 117
    bool_statement   go to state 41
    expr             go to state 42


State 80

   39 bool_statements: bool_statements AND . bool_statements

    LPAREN      shift, and go to state 32
    IDENTIFIER  shift, and go to state 33
    INTEGER     shift, and go to state 34
    CHAR        shift, and go to state 35
    STRING      shift, and go to state 36
    ADD         shift, and go to state 37
    SUB         shift, and go to state 38
    NOT         shift, and go to state 39

    bool_statements  go to state 118
    bool_statement   go to state 41
    expr             go to state 42


State 81

    3 statements: statements . statement
   36 if_else: IF bool_statements statements . ELSE statements
   37        | IF bool_statements statements .

    IF              shift, and go to state 1
    ELSE            shift, and go to state 119
    WHILE           shift, and go to state 2
    FOR             shift, and go to state 3
    T_CHAR          shift, and go to state 4
    T_INT           shift, and go to state 5
    T_STRING        shift, and go to state 6
    T_BOOL          shift, and go to state 7
    T_INT_POINTER   shift, and go to state 8
    T_CHAR_POINTER  shift, and go to state 9
    PRINTF          shift, and go to state 10
    SCANF           shift, and go to state 11
    SEMICOLON       shift, and go to state 12
    IDENTIFIER      shift, and go to state 14
    SELF_INC        shift, and go to state 15
    SELF_DEC        shift, and go to state 16

    IF              [reduce using rule 37 (if_else)]
    ELSE            [reduce using rule 37 (if_else)]
    WHILE           [reduce using rule 37 (if_else)]
    FOR             [reduce using rule 37 (if_else)]
    T_CHAR          [reduce using rule 37 (if_else)]
    T_INT           [reduce using rule 37 (if_else)]
    T_STRING        [reduce using rule 37 (if_else)]
    T_BOOL          [reduce using rule 37 (if_else)]
    T_INT_POINTER   [reduce using rule 37 (if_else)]
    T_CHAR_POINTER  [reduce using rule 37 (if_else)]
    PRINTF          [reduce using rule 37 (if_else)]
    SCANF           [reduce using rule 37 (if_else)]
    SEMICOLON       [reduce using rule 37 (if_else)]
    IDENTIFIER      [reduce using rule 37 (if_else)]
    SELF_INC        [reduce using rule 37 (if_else)]
    SELF_DEC        [reduce using rule 37 (if_else)]
    $default        reduce using rule 37 (if_else)

    statement      go to state 61
    for            go to state 20
    function_decl  go to state 21
    function_def   go to state 22
    function_use   go to state 23
    printf         go to state 24
    scanf          go to state 25
    while          go to state 26
    if_else        go to state 27
    declaration    go to state 28
    eq_assign      go to state 29
    opassign       go to state 30
    T              go to state 31


State 82

   48 bool_statement: bool_statement LOP_EQ . bool_statement

    LPAREN      shift, and go to state 75
    IDENTIFIER  shift, and go to state 33
    INTEGER     shift, and go to state 34
    CHAR        shift, and go to state 35
    STRING      shift, and go to state 36
    ADD         shift, and go to state 37
    SUB         shift, and go to state 38

    bool_statement  go to state 120
    expr            go to state 42


State 83

   44 bool_statement: bool_statement GREAT . bool_statement

    LPAREN      shift, and go to state 75
    IDENTIFIER  shift, and go to state 33
    INTEGER     shift, and go to state 34
    CHAR        shift, and go to state 35
    STRING      shift, and go to state 36
    ADD         shift, and go to state 37
    SUB         shift, and go to state 38

    bool_statement  go to state 121
    expr            go to state 42


State 84

   45 bool_statement: bool_statement LESS . bool_statement

    LPAREN      shift, and go to state 75
    IDENTIFIER  shift, and go to state 33
    INTEGER     shift, and go to state 34
    CHAR        shift, and go to state 35
    STRING      shift, and go to state 36
    ADD         shift, and go to state 37
    SUB         shift, and go to state 38

    bool_statement  go to state 122
    expr            go to state 42


State 85

   46 bool_statement: bool_statement GREAT_EQ . bool_statement

    LPAREN      shift, and go to state 75
    IDENTIFIER  shift, and go to state 33
    INTEGER     shift, and go to state 34
    CHAR        shift, and go to state 35
    STRING      shift, and go to state 36
    ADD         shift, and go to state 37
    SUB         shift, and go to state 38

    bool_statement  go to state 123
    expr            go to state 42


State 86

   47 bool_statement: bool_statement LESS_EQ . bool_statement

    LPAREN      shift, and go to state 75
    IDENTIFIER  shift, and go to state 33
    INTEGER     shift, and go to state 34
    CHAR        shift, and go to state 35
    STRING      shift, and go to state 36
    ADD         shift, and go to state 37
    SUB         shift, and go to state 38

    bool_statement  go to state 124
    expr            go to state 42


State 87

   49 bool_statement: bool_statement NOT_EQ . bool_statement

    LPAREN      shift, and go to state 75
    IDENTIFIER  shift, and go to state 33
    INTEGER     shift, and go to state 34
    CHAR        shift, and go to state 35
    STRING      shift, and go to state 36
    ADD         shift, and go to state 37
    SUB         shift, and go to state 38

    bool_statement  go to state 125
    expr            go to state 42


State 88

   75 expr: expr ADD . expr

    LPAREN      shift, and go to state 75
    IDENTIFIER  shift, and go to state 33
    INTEGER     shift, and go to state 34
    CHAR        shift, and go to state 35
    STRING      shift, and go to state 36
    ADD         shift, and go to state 37
    SUB         shift, and go to state 38

    expr  go to state 126


State 89

   76 expr: expr SUB . expr

    LPAREN      shift, and go to state 75
    IDENTIFIER  shift, and go to state 33
    INTEGER     shift, and go to state 34
    CHAR        shift, and go to state 35
    STRING      shift, and go to state 36
    ADD         shift, and go to state 37
    SUB         shift, and go to state 38

    expr  go to state 127


State 90

   79 expr: expr MUL . expr

    LPAREN      shift, and go to state 75
    IDENTIFIER  shift, and go to state 33
    INTEGER     shift, and go to state 34
    CHAR        shift, and go to state 35
    STRING      shift, and go to state 36
    ADD         shift, and go to state 37
    SUB         shift, and go to state 38

    expr  go to state 128


State 91

   80 expr: expr DIV . expr

    LPAREN      shift, and go to state 75
    IDENTIFIER  shift, and go to state 33
    INTEGER     shift, and go to state 34
    CHAR        shift, and go to state 35
    STRING      shift, and go to state 36
    ADD         shift, and go to state 37
    SUB         shift, and go to state 38

    expr  go to state 129


State 92

   81 expr: expr MOD . expr

    LPAREN      shift, and go to state 75
    IDENTIFIER  shift, and go to state 33
    INTEGER     shift, and go to state 34
    CHAR        shift, and go to state 35
    STRING      shift, and go to state 36
    ADD         shift, and go to state 37
    SUB         shift, and go to state 38

    expr  go to state 130


State 93

    3 statements: statements . statement
   35 while: WHILE bool_statements statements .

    IF              shift, and go to state 1
    WHILE           shift, and go to state 2
    FOR             shift, and go to state 3
    T_CHAR          shift, and go to state 4
    T_INT           shift, and go to state 5
    T_STRING        shift, and go to state 6
    T_BOOL          shift, and go to state 7
    T_INT_POINTER   shift, and go to state 8
    T_CHAR_POINTER  shift, and go to state 9
    PRINTF          shift, and go to state 10
    SCANF           shift, and go to state 11
    SEMICOLON       shift, and go to state 12
    IDENTIFIER      shift, and go to state 14
    SELF_INC        shift, and go to state 15
    SELF_DEC        shift, and go to state 16

    IF              [reduce using rule 35 (while)]
    WHILE           [reduce using rule 35 (while)]
    FOR             [reduce using rule 35 (while)]
    T_CHAR          [reduce using rule 35 (while)]
    T_INT           [reduce using rule 35 (while)]
    T_STRING        [reduce using rule 35 (while)]
    T_BOOL          [reduce using rule 35 (while)]
    T_INT_POINTER   [reduce using rule 35 (while)]
    T_CHAR_POINTER  [reduce using rule 35 (while)]
    PRINTF          [reduce using rule 35 (while)]
    SCANF           [reduce using rule 35 (while)]
    SEMICOLON       [reduce using rule 35 (while)]
    IDENTIFIER      [reduce using rule 35 (while)]
    SELF_INC        [reduce using rule 35 (while)]
    SELF_DEC        [reduce using rule 35 (while)]
    $default        reduce using rule 35 (while)

    statement      go to state 61
    for            go to state 20
    function_decl  go to state 21
    function_def   go to state 22
    function_use   go to state 23
    printf         go to state 24
    scanf          go to state 25
    while          go to state 26
    if_else        go to state 27
    declaration    go to state 28
    eq_assign      go to state 29
    opassign       go to state 30
    T              go to state 31


State 94

   19 for: FOR LPAREN SEMICOLON . bool_statements SEMICOLON assigns RPAREN statements

    LPAREN      shift, and go to state 32
    IDENTIFIER  shift, and go to state 33
    INTEGER     shift, and go to state 34
    CHAR        shift, and go to state 35
    STRING      shift, and go to state 36
    ADD         shift, and go to state 37
    SUB         shift, and go to state 38
    NOT         shift, and go to state 39

    bool_statements  go to state 131
    bool_statement   go to state 41
    expr             go to state 42


State 95

   18 for: FOR LPAREN declarations . SEMICOLON bool_statements SEMICOLON assigns RPAREN statements
   50 declarations: declarations . COMMA declaration

    SEMICOLON  shift, and go to state 132
    COMMA      shift, and go to state 133


State 96

   51 declarations: declaration .

    $default  reduce using rule 51 (declarations)


State 97

   52 declaration: T . eq_assigns
   53            | T . idlist

    IDENTIFIER  shift, and go to state 134

    eq_assigns  go to state 70
    eq_assign   go to state 71
    idlist      go to state 72


State 98

   71 idlist: IDENTIFIER .

    $default  reduce using rule 71 (idlist)


State 99

   28 printf: PRINTF LPAREN STRING . RPAREN
   29       | PRINTF LPAREN STRING . COMMA exprs RPAREN

    COMMA   shift, and go to state 135
    RPAREN  shift, and go to state 136


State 100

   30 printf: PRINTF LPAREN idlist . RPAREN
   70 idlist: idlist . COMMA IDENTIFIER

    COMMA   shift, and go to state 113
    RPAREN  shift, and go to state 137


State 101

   31 scanf: SCANF LPAREN STRING . COMMA address_idlist RPAREN

    COMMA  shift, and go to state 138


State 102

    4 statements: LBRACE statements RBRACE .

    $default  reduce using rule 4 (statements)


State 103

   60 eq_assign: IDENTIFIER LOP_ASSIGN expr .
   75 expr: expr . ADD expr
   76     | expr . SUB expr
   79     | expr . MUL expr
   80     | expr . DIV expr
   81     | expr . MOD expr

    ADD  shift, and go to state 88
    SUB  shift, and go to state 89
    MUL  shift, and go to state 90
    DIV  shift, and go to state 91
    MOD  shift, and go to state 92

    $default  reduce using rule 60 (eq_assign)


State 104

   61 opassign: IDENTIFIER ADD_ASSIGN expr .
   75 expr: expr . ADD expr
   76     | expr . SUB expr
   79     | expr . MUL expr
   80     | expr . DIV expr
   81     | expr . MOD expr

    ADD  shift, and go to state 88
    SUB  shift, and go to state 89
    MUL  shift, and go to state 90
    DIV  shift, and go to state 91
    MOD  shift, and go to state 92

    $default  reduce using rule 61 (opassign)


State 105

   62 opassign: IDENTIFIER SUB_ASSIGN expr .
   75 expr: expr . ADD expr
   76     | expr . SUB expr
   79     | expr . MUL expr
   80     | expr . DIV expr
   81     | expr . MOD expr

    ADD  shift, and go to state 88
    SUB  shift, and go to state 89
    MUL  shift, and go to state 90
    DIV  shift, and go to state 91
    MOD  shift, and go to state 92

    $default  reduce using rule 62 (opassign)


State 106

   65 opassign: IDENTIFIER MOD_ASSIGN expr .
   75 expr: expr . ADD expr
   76     | expr . SUB expr
   79     | expr . MUL expr
   80     | expr . DIV expr
   81     | expr . MOD expr

    ADD  shift, and go to state 88
    SUB  shift, and go to state 89
    MUL  shift, and go to state 90
    DIV  shift, and go to state 91
    MOD  shift, and go to state 92

    $default  reduce using rule 65 (opassign)


State 107

   64 opassign: IDENTIFIER DIV_ASSIGN expr .
   75 expr: expr . ADD expr
   76     | expr . SUB expr
   79     | expr . MUL expr
   80     | expr . DIV expr
   81     | expr . MOD expr

    ADD  shift, and go to state 88
    SUB  shift, and go to state 89
    MUL  shift, and go to state 90
    DIV  shift, and go to state 91
    MOD  shift, and go to state 92

    $default  reduce using rule 64 (opassign)


State 108

   63 opassign: IDENTIFIER MUL_ASSIGN expr .
   75 expr: expr . ADD expr
   76     | expr . SUB expr
   79     | expr . MUL expr
   80     | expr . DIV expr
   81     | expr . MOD expr

    ADD  shift, and go to state 88
    SUB  shift, and go to state 89
    MUL  shift, and go to state 90
    DIV  shift, and go to state 91
    MOD  shift, and go to state 92

    $default  reduce using rule 63 (opassign)


State 109

   24 function_use: IDENTIFIER LPAREN RPAREN .

    $default  reduce using rule 24 (function_use)


State 110

   23 function_use: IDENTIFIER LPAREN idlist . RPAREN
   70 idlist: idlist . COMMA IDENTIFIER

    COMMA   shift, and go to state 113
    RPAREN  shift, and go to state 139


State 111

   20 function_decl: T IDENTIFIER LPAREN . RPAREN
   21              | T IDENTIFIER LPAREN . params RPAREN
   22 function_def: T IDENTIFIER LPAREN . params RPAREN LBRACE statements RBRACE

    T_CHAR          shift, and go to state 4
    T_INT           shift, and go to state 5
    T_STRING        shift, and go to state 6
    T_BOOL          shift, and go to state 7
    T_INT_POINTER   shift, and go to state 8
    T_CHAR_POINTER  shift, and go to state 9
    RPAREN          shift, and go to state 140

    params  go to state 141
    param   go to state 142
    T       go to state 143


State 112

   58 eq_assigns: eq_assigns COMMA . eq_assign

    IDENTIFIER  shift, and go to state 144

    eq_assign  go to state 145


State 113

   70 idlist: idlist COMMA . IDENTIFIER

    IDENTIFIER  shift, and go to state 146


State 114

   38 bool_statements: LPAREN bool_statements RPAREN .

    $default  reduce using rule 38 (bool_statements)


State 115

   74 expr: LPAREN expr RPAREN .

    $default  reduce using rule 74 (expr)


State 116

   74 expr: LPAREN expr . RPAREN
   75     | expr . ADD expr
   76     | expr . SUB expr
   79     | expr . MUL expr
   80     | expr . DIV expr
   81     | expr . MOD expr

    RPAREN  shift, and go to state 115
    ADD     shift, and go to state 88
    SUB     shift, and go to state 89
    MUL     shift, and go to state 90
    DIV     shift, and go to state 91
    MOD     shift, and go to state 92


State 117

   39 bool_statements: bool_statements . AND bool_statements
   40                | bool_statements . OR bool_statements
   40                | bool_statements OR bool_statements .

    AND  shift, and go to state 80

    $default  reduce using rule 40 (bool_statements)


State 118

   39 bool_statements: bool_statements . AND bool_statements
   39                | bool_statements AND bool_statements .
   40                | bool_statements . OR bool_statements

    $default  reduce using rule 39 (bool_statements)


State 119

   36 if_else: IF bool_statements statements ELSE . statements

    IF              shift, and go to state 1
    WHILE           shift, and go to state 2
    FOR             shift, and go to state 3
    T_CHAR          shift, and go to state 4
    T_INT           shift, and go to state 5
    T_STRING        shift, and go to state 6
    T_BOOL          shift, and go to state 7
    T_INT_POINTER   shift, and go to state 8
    T_CHAR_POINTER  shift, and go to state 9
    PRINTF          shift, and go to state 10
    SCANF           shift, and go to state 11
    SEMICOLON       shift, and go to state 12
    LBRACE          shift, and go to state 13
    IDENTIFIER      shift, and go to state 14
    SELF_INC        shift, and go to state 15
    SELF_DEC        shift, and go to state 16

    statements     go to state 147
    statement      go to state 19
    for            go to state 20
    function_decl  go to state 21
    function_def   go to state 22
    function_use   go to state 23
    printf         go to state 24
    scanf          go to state 25
    while          go to state 26
    if_else        go to state 27
    declaration    go to state 28
    eq_assign      go to state 29
    opassign       go to state 30
    T              go to state 31


State 120

   44 bool_statement: bool_statement . GREAT bool_statement
   45               | bool_statement . LESS bool_statement
   46               | bool_statement . GREAT_EQ bool_statement
   47               | bool_statement . LESS_EQ bool_statement
   48               | bool_statement . LOP_EQ bool_statement
   48               | bool_statement LOP_EQ bool_statement .
   49               | bool_statement . NOT_EQ bool_statement

    $default  reduce using rule 48 (bool_statement)


State 121

   44 bool_statement: bool_statement . GREAT bool_statement
   44               | bool_statement GREAT bool_statement .
   45               | bool_statement . LESS bool_statement
   46               | bool_statement . GREAT_EQ bool_statement
   47               | bool_statement . LESS_EQ bool_statement
   48               | bool_statement . LOP_EQ bool_statement
   49               | bool_statement . NOT_EQ bool_statement

    $default  reduce using rule 44 (bool_statement)


State 122

   44 bool_statement: bool_statement . GREAT bool_statement
   45               | bool_statement . LESS bool_statement
   45               | bool_statement LESS bool_statement .
   46               | bool_statement . GREAT_EQ bool_statement
   47               | bool_statement . LESS_EQ bool_statement
   48               | bool_statement . LOP_EQ bool_statement
   49               | bool_statement . NOT_EQ bool_statement

    $default  reduce using rule 45 (bool_statement)


State 123

   44 bool_statement: bool_statement . GREAT bool_statement
   45               | bool_statement . LESS bool_statement
   46               | bool_statement . GREAT_EQ bool_statement
   46               | bool_statement GREAT_EQ bool_statement .
   47               | bool_statement . LESS_EQ bool_statement
   48               | bool_statement . LOP_EQ bool_statement
   49               | bool_statement . NOT_EQ bool_statement

    $default  reduce using rule 46 (bool_statement)


State 124

   44 bool_statement: bool_statement . GREAT bool_statement
   45               | bool_statement . LESS bool_statement
   46               | bool_statement . GREAT_EQ bool_statement
   47               | bool_statement . LESS_EQ bool_statement
   47               | bool_statement LESS_EQ bool_statement .
   48               | bool_statement . LOP_EQ bool_statement
   49               | bool_statement . NOT_EQ bool_statement

    $default  reduce using rule 47 (bool_statement)


State 125

   44 bool_statement: bool_statement . GREAT bool_statement
   45               | bool_statement . LESS bool_statement
   46               | bool_statement . GREAT_EQ bool_statement
   47               | bool_statement . LESS_EQ bool_statement
   48               | bool_statement . LOP_EQ bool_statement
   49               | bool_statement . NOT_EQ bool_statement
   49               | bool_statement NOT_EQ bool_statement .

    $default  reduce using rule 49 (bool_statement)


State 126

   75 expr: expr . ADD expr
   75     | expr ADD expr .
   76     | expr . SUB expr
   79     | expr . MUL expr
   80     | expr . DIV expr
   81     | expr . MOD expr

    MUL  shift, and go to state 90
    DIV  shift, and go to state 91
    MOD  shift, and go to state 92

    $default  reduce using rule 75 (expr)


State 127

   75 expr: expr . ADD expr
   76     | expr . SUB expr
   76     | expr SUB expr .
   79     | expr . MUL expr
   80     | expr . DIV expr
   81     | expr . MOD expr

    MUL  shift, and go to state 90
    DIV  shift, and go to state 91
    MOD  shift, and go to state 92

    $default  reduce using rule 76 (expr)


State 128

   75 expr: expr . ADD expr
   76     | expr . SUB expr
   79     | expr . MUL expr
   79     | expr MUL expr .
   80     | expr . DIV expr
   81     | expr . MOD expr

    $default  reduce using rule 79 (expr)


State 129

   75 expr: expr . ADD expr
   76     | expr . SUB expr
   79     | expr . MUL expr
   80     | expr . DIV expr
   80     | expr DIV expr .
   81     | expr . MOD expr

    $default  reduce using rule 80 (expr)


State 130

   75 expr: expr . ADD expr
   76     | expr . SUB expr
   79     | expr . MUL expr
   80     | expr . DIV expr
   81     | expr . MOD expr
   81     | expr MOD expr .

    $default  reduce using rule 81 (expr)


State 131

   19 for: FOR LPAREN SEMICOLON bool_statements . SEMICOLON assigns RPAREN statements
   39 bool_statements: bool_statements . AND bool_statements
   40                | bool_statements . OR bool_statements

    SEMICOLON  shift, and go to state 148
    OR         shift, and go to state 79
    AND        shift, and go to state 80


State 132

   18 for: FOR LPAREN declarations SEMICOLON . bool_statements SEMICOLON assigns RPAREN statements

    LPAREN      shift, and go to state 32
    IDENTIFIER  shift, and go to state 33
    INTEGER     shift, and go to state 34
    CHAR        shift, and go to state 35
    STRING      shift, and go to state 36
    ADD         shift, and go to state 37
    SUB         shift, and go to state 38
    NOT         shift, and go to state 39

    bool_statements  go to state 149
    bool_statement   go to state 41
    expr             go to state 42


State 133

   50 declarations: declarations COMMA . declaration

    T_CHAR          shift, and go to state 4
    T_INT           shift, and go to state 5
    T_STRING        shift, and go to state 6
    T_BOOL          shift, and go to state 7
    T_INT_POINTER   shift, and go to state 8
    T_CHAR_POINTER  shift, and go to state 9

    declaration  go to state 150
    T            go to state 97


State 134

   60 eq_assign: IDENTIFIER . LOP_ASSIGN expr
   71 idlist: IDENTIFIER .

    LOP_ASSIGN  shift, and go to state 49

    $default  reduce using rule 71 (idlist)


State 135

   29 printf: PRINTF LPAREN STRING COMMA . exprs RPAREN

    LPAREN      shift, and go to state 75
    IDENTIFIER  shift, and go to state 33
    INTEGER     shift, and go to state 34
    CHAR        shift, and go to state 35
    STRING      shift, and go to state 36
    ADD         shift, and go to state 37
    SUB         shift, and go to state 38

    exprs  go to state 151
    expr   go to state 152


State 136

   28 printf: PRINTF LPAREN STRING RPAREN .

    $default  reduce using rule 28 (printf)


State 137

   30 printf: PRINTF LPAREN idlist RPAREN .

    $default  reduce using rule 30 (printf)


State 138

   31 scanf: SCANF LPAREN STRING COMMA . address_idlist RPAREN

    GET_ADDRESS  shift, and go to state 153

    address_idlist  go to state 154
    get_address_id  go to state 155


State 139

   23 function_use: IDENTIFIER LPAREN idlist RPAREN .

    $default  reduce using rule 23 (function_use)


State 140

   20 function_decl: T IDENTIFIER LPAREN RPAREN .

    $default  reduce using rule 20 (function_decl)


State 141

   21 function_decl: T IDENTIFIER LPAREN params . RPAREN
   22 function_def: T IDENTIFIER LPAREN params . RPAREN LBRACE statements RBRACE
   25 params: params . COMMA param

    COMMA   shift, and go to state 156
    RPAREN  shift, and go to state 157


State 142

   26 params: param .

    $default  reduce using rule 26 (params)


State 143

   27 param: T . IDENTIFIER

    IDENTIFIER  shift, and go to state 158


State 144

   60 eq_assign: IDENTIFIER . LOP_ASSIGN expr

    LOP_ASSIGN  shift, and go to state 49


State 145

   58 eq_assigns: eq_assigns COMMA eq_assign .

    $default  reduce using rule 58 (eq_assigns)


State 146

   70 idlist: idlist COMMA IDENTIFIER .

    $default  reduce using rule 70 (idlist)


State 147

    3 statements: statements . statement
   36 if_else: IF bool_statements statements ELSE statements .

    IF              shift, and go to state 1
    WHILE           shift, and go to state 2
    FOR             shift, and go to state 3
    T_CHAR          shift, and go to state 4
    T_INT           shift, and go to state 5
    T_STRING        shift, and go to state 6
    T_BOOL          shift, and go to state 7
    T_INT_POINTER   shift, and go to state 8
    T_CHAR_POINTER  shift, and go to state 9
    PRINTF          shift, and go to state 10
    SCANF           shift, and go to state 11
    SEMICOLON       shift, and go to state 12
    IDENTIFIER      shift, and go to state 14
    SELF_INC        shift, and go to state 15
    SELF_DEC        shift, and go to state 16

    IF              [reduce using rule 36 (if_else)]
    WHILE           [reduce using rule 36 (if_else)]
    FOR             [reduce using rule 36 (if_else)]
    T_CHAR          [reduce using rule 36 (if_else)]
    T_INT           [reduce using rule 36 (if_else)]
    T_STRING        [reduce using rule 36 (if_else)]
    T_BOOL          [reduce using rule 36 (if_else)]
    T_INT_POINTER   [reduce using rule 36 (if_else)]
    T_CHAR_POINTER  [reduce using rule 36 (if_else)]
    PRINTF          [reduce using rule 36 (if_else)]
    SCANF           [reduce using rule 36 (if_else)]
    SEMICOLON       [reduce using rule 36 (if_else)]
    IDENTIFIER      [reduce using rule 36 (if_else)]
    SELF_INC        [reduce using rule 36 (if_else)]
    SELF_DEC        [reduce using rule 36 (if_else)]
    $default        reduce using rule 36 (if_else)

    statement      go to state 61
    for            go to state 20
    function_decl  go to state 21
    function_def   go to state 22
    function_use   go to state 23
    printf         go to state 24
    scanf          go to state 25
    while          go to state 26
    if_else        go to state 27
    declaration    go to state 28
    eq_assign      go to state 29
    opassign       go to state 30
    T              go to state 31


State 148

   19 for: FOR LPAREN SEMICOLON bool_statements SEMICOLON . assigns RPAREN statements

    IDENTIFIER  shift, and go to state 159
    SELF_INC    shift, and go to state 15
    SELF_DEC    shift, and go to state 16

    assigns    go to state 160
    eq_assign  go to state 161
    opassign   go to state 162


State 149

   18 for: FOR LPAREN declarations SEMICOLON bool_statements . SEMICOLON assigns RPAREN statements
   39 bool_statements: bool_statements . AND bool_statements
   40                | bool_statements . OR bool_statements

    SEMICOLON  shift, and go to state 163
    OR         shift, and go to state 79
    AND        shift, and go to state 80


State 150

   50 declarations: declarations COMMA declaration .

    $default  reduce using rule 50 (declarations)


State 151

   29 printf: PRINTF LPAREN STRING COMMA exprs . RPAREN
   72 exprs: exprs . COMMA expr

    COMMA   shift, and go to state 164
    RPAREN  shift, and go to state 165


State 152

   73 exprs: expr .
   75 expr: expr . ADD expr
   76     | expr . SUB expr
   79     | expr . MUL expr
   80     | expr . DIV expr
   81     | expr . MOD expr

    ADD  shift, and go to state 88
    SUB  shift, and go to state 89
    MUL  shift, and go to state 90
    DIV  shift, and go to state 91
    MOD  shift, and go to state 92

    $default  reduce using rule 73 (exprs)


State 153

   34 get_address_id: GET_ADDRESS . IDENTIFIER

    IDENTIFIER  shift, and go to state 166


State 154

   31 scanf: SCANF LPAREN STRING COMMA address_idlist . RPAREN
   32 address_idlist: address_idlist . COMMA get_address_id

    COMMA   shift, and go to state 167
    RPAREN  shift, and go to state 168


State 155

   33 address_idlist: get_address_id .

    $default  reduce using rule 33 (address_idlist)


State 156

   25 params: params COMMA . param

    T_CHAR          shift, and go to state 4
    T_INT           shift, and go to state 5
    T_STRING        shift, and go to state 6
    T_BOOL          shift, and go to state 7
    T_INT_POINTER   shift, and go to state 8
    T_CHAR_POINTER  shift, and go to state 9

    param  go to state 169
    T      go to state 143


State 157

   21 function_decl: T IDENTIFIER LPAREN params RPAREN .
   22 function_def: T IDENTIFIER LPAREN params RPAREN . LBRACE statements RBRACE

    LBRACE  shift, and go to state 170

    $default  reduce using rule 21 (function_decl)


State 158

   27 param: T IDENTIFIER .

    $default  reduce using rule 27 (param)


State 159

   60 eq_assign: IDENTIFIER . LOP_ASSIGN expr
   61 opassign: IDENTIFIER . ADD_ASSIGN expr
   62         | IDENTIFIER . SUB_ASSIGN expr
   63         | IDENTIFIER . MUL_ASSIGN expr
   64         | IDENTIFIER . DIV_ASSIGN expr
   65         | IDENTIFIER . MOD_ASSIGN expr
   68         | IDENTIFIER . SELF_INC
   69         | IDENTIFIER . SELF_DEC

    LOP_ASSIGN  shift, and go to state 49
    ADD_ASSIGN  shift, and go to state 50
    SUB_ASSIGN  shift, and go to state 51
    MOD_ASSIGN  shift, and go to state 52
    DIV_ASSIGN  shift, and go to state 53
    MUL_ASSIGN  shift, and go to state 54
    SELF_INC    shift, and go to state 56
    SELF_DEC    shift, and go to state 57


State 160

   19 for: FOR LPAREN SEMICOLON bool_statements SEMICOLON assigns . RPAREN statements
   54 assigns: assigns . COMMA eq_assign
   55        | assigns . COMMA opassign

    COMMA   shift, and go to state 171
    RPAREN  shift, and go to state 172


State 161

   56 assigns: eq_assign .

    $default  reduce using rule 56 (assigns)


State 162

   57 assigns: opassign .

    $default  reduce using rule 57 (assigns)


State 163

   18 for: FOR LPAREN declarations SEMICOLON bool_statements SEMICOLON . assigns RPAREN statements

    IDENTIFIER  shift, and go to state 159
    SELF_INC    shift, and go to state 15
    SELF_DEC    shift, and go to state 16

    assigns    go to state 173
    eq_assign  go to state 161
    opassign   go to state 162


State 164

   72 exprs: exprs COMMA . expr

    LPAREN      shift, and go to state 75
    IDENTIFIER  shift, and go to state 33
    INTEGER     shift, and go to state 34
    CHAR        shift, and go to state 35
    STRING      shift, and go to state 36
    ADD         shift, and go to state 37
    SUB         shift, and go to state 38

    expr  go to state 174


State 165

   29 printf: PRINTF LPAREN STRING COMMA exprs RPAREN .

    $default  reduce using rule 29 (printf)


State 166

   34 get_address_id: GET_ADDRESS IDENTIFIER .

    $default  reduce using rule 34 (get_address_id)


State 167

   32 address_idlist: address_idlist COMMA . get_address_id

    GET_ADDRESS  shift, and go to state 153

    get_address_id  go to state 175


State 168

   31 scanf: SCANF LPAREN STRING COMMA address_idlist RPAREN .

    $default  reduce using rule 31 (scanf)


State 169

   25 params: params COMMA param .

    $default  reduce using rule 25 (params)


State 170

   22 function_def: T IDENTIFIER LPAREN params RPAREN LBRACE . statements RBRACE

    IF              shift, and go to state 1
    WHILE           shift, and go to state 2
    FOR             shift, and go to state 3
    T_CHAR          shift, and go to state 4
    T_INT           shift, and go to state 5
    T_STRING        shift, and go to state 6
    T_BOOL          shift, and go to state 7
    T_INT_POINTER   shift, and go to state 8
    T_CHAR_POINTER  shift, and go to state 9
    PRINTF          shift, and go to state 10
    SCANF           shift, and go to state 11
    SEMICOLON       shift, and go to state 12
    LBRACE          shift, and go to state 13
    IDENTIFIER      shift, and go to state 14
    SELF_INC        shift, and go to state 15
    SELF_DEC        shift, and go to state 16

    statements     go to state 176
    statement      go to state 19
    for            go to state 20
    function_decl  go to state 21
    function_def   go to state 22
    function_use   go to state 23
    printf         go to state 24
    scanf          go to state 25
    while          go to state 26
    if_else        go to state 27
    declaration    go to state 28
    eq_assign      go to state 29
    opassign       go to state 30
    T              go to state 31


State 171

   54 assigns: assigns COMMA . eq_assign
   55        | assigns COMMA . opassign

    IDENTIFIER  shift, and go to state 159
    SELF_INC    shift, and go to state 15
    SELF_DEC    shift, and go to state 16

    eq_assign  go to state 177
    opassign   go to state 178


State 172

   19 for: FOR LPAREN SEMICOLON bool_statements SEMICOLON assigns RPAREN . statements

    IF              shift, and go to state 1
    WHILE           shift, and go to state 2
    FOR             shift, and go to state 3
    T_CHAR          shift, and go to state 4
    T_INT           shift, and go to state 5
    T_STRING        shift, and go to state 6
    T_BOOL          shift, and go to state 7
    T_INT_POINTER   shift, and go to state 8
    T_CHAR_POINTER  shift, and go to state 9
    PRINTF          shift, and go to state 10
    SCANF           shift, and go to state 11
    SEMICOLON       shift, and go to state 12
    LBRACE          shift, and go to state 13
    IDENTIFIER      shift, and go to state 14
    SELF_INC        shift, and go to state 15
    SELF_DEC        shift, and go to state 16

    statements     go to state 179
    statement      go to state 19
    for            go to state 20
    function_decl  go to state 21
    function_def   go to state 22
    function_use   go to state 23
    printf         go to state 24
    scanf          go to state 25
    while          go to state 26
    if_else        go to state 27
    declaration    go to state 28
    eq_assign      go to state 29
    opassign       go to state 30
    T              go to state 31


State 173

   18 for: FOR LPAREN declarations SEMICOLON bool_statements SEMICOLON assigns . RPAREN statements
   54 assigns: assigns . COMMA eq_assign
   55        | assigns . COMMA opassign

    COMMA   shift, and go to state 171
    RPAREN  shift, and go to state 180


State 174

   72 exprs: exprs COMMA expr .
   75 expr: expr . ADD expr
   76     | expr . SUB expr
   79     | expr . MUL expr
   80     | expr . DIV expr
   81     | expr . MOD expr

    ADD  shift, and go to state 88
    SUB  shift, and go to state 89
    MUL  shift, and go to state 90
    DIV  shift, and go to state 91
    MOD  shift, and go to state 92

    $default  reduce using rule 72 (exprs)


State 175

   32 address_idlist: address_idlist COMMA get_address_id .

    $default  reduce using rule 32 (address_idlist)


State 176

    3 statements: statements . statement
   22 function_def: T IDENTIFIER LPAREN params RPAREN LBRACE statements . RBRACE

    IF              shift, and go to state 1
    WHILE           shift, and go to state 2
    FOR             shift, and go to state 3
    T_CHAR          shift, and go to state 4
    T_INT           shift, and go to state 5
    T_STRING        shift, and go to state 6
    T_BOOL          shift, and go to state 7
    T_INT_POINTER   shift, and go to state 8
    T_CHAR_POINTER  shift, and go to state 9
    PRINTF          shift, and go to state 10
    SCANF           shift, and go to state 11
    SEMICOLON       shift, and go to state 12
    RBRACE          shift, and go to state 181
    IDENTIFIER      shift, and go to state 14
    SELF_INC        shift, and go to state 15
    SELF_DEC        shift, and go to state 16

    statement      go to state 61
    for            go to state 20
    function_decl  go to state 21
    function_def   go to state 22
    function_use   go to state 23
    printf         go to state 24
    scanf          go to state 25
    while          go to state 26
    if_else        go to state 27
    declaration    go to state 28
    eq_assign      go to state 29
    opassign       go to state 30
    T              go to state 31


State 177

   54 assigns: assigns COMMA eq_assign .

    $default  reduce using rule 54 (assigns)


State 178

   55 assigns: assigns COMMA opassign .

    $default  reduce using rule 55 (assigns)


State 179

    3 statements: statements . statement
   19 for: FOR LPAREN SEMICOLON bool_statements SEMICOLON assigns RPAREN statements .

    IF              shift, and go to state 1
    WHILE           shift, and go to state 2
    FOR             shift, and go to state 3
    T_CHAR          shift, and go to state 4
    T_INT           shift, and go to state 5
    T_STRING        shift, and go to state 6
    T_BOOL          shift, and go to state 7
    T_INT_POINTER   shift, and go to state 8
    T_CHAR_POINTER  shift, and go to state 9
    PRINTF          shift, and go to state 10
    SCANF           shift, and go to state 11
    SEMICOLON       shift, and go to state 12
    IDENTIFIER      shift, and go to state 14
    SELF_INC        shift, and go to state 15
    SELF_DEC        shift, and go to state 16

    IF              [reduce using rule 19 (for)]
    WHILE           [reduce using rule 19 (for)]
    FOR             [reduce using rule 19 (for)]
    T_CHAR          [reduce using rule 19 (for)]
    T_INT           [reduce using rule 19 (for)]
    T_STRING        [reduce using rule 19 (for)]
    T_BOOL          [reduce using rule 19 (for)]
    T_INT_POINTER   [reduce using rule 19 (for)]
    T_CHAR_POINTER  [reduce using rule 19 (for)]
    PRINTF          [reduce using rule 19 (for)]
    SCANF           [reduce using rule 19 (for)]
    SEMICOLON       [reduce using rule 19 (for)]
    IDENTIFIER      [reduce using rule 19 (for)]
    SELF_INC        [reduce using rule 19 (for)]
    SELF_DEC        [reduce using rule 19 (for)]
    $default        reduce using rule 19 (for)

    statement      go to state 61
    for            go to state 20
    function_decl  go to state 21
    function_def   go to state 22
    function_use   go to state 23
    printf         go to state 24
    scanf          go to state 25
    while          go to state 26
    if_else        go to state 27
    declaration    go to state 28
    eq_assign      go to state 29
    opassign       go to state 30
    T              go to state 31


State 180

   18 for: FOR LPAREN declarations SEMICOLON bool_statements SEMICOLON assigns RPAREN . statements

    IF              shift, and go to state 1
    WHILE           shift, and go to state 2
    FOR             shift, and go to state 3
    T_CHAR          shift, and go to state 4
    T_INT           shift, and go to state 5
    T_STRING        shift, and go to state 6
    T_BOOL          shift, and go to state 7
    T_INT_POINTER   shift, and go to state 8
    T_CHAR_POINTER  shift, and go to state 9
    PRINTF          shift, and go to state 10
    SCANF           shift, and go to state 11
    SEMICOLON       shift, and go to state 12
    LBRACE          shift, and go to state 13
    IDENTIFIER      shift, and go to state 14
    SELF_INC        shift, and go to state 15
    SELF_DEC        shift, and go to state 16

    statements     go to state 182
    statement      go to state 19
    for            go to state 20
    function_decl  go to state 21
    function_def   go to state 22
    function_use   go to state 23
    printf         go to state 24
    scanf          go to state 25
    while          go to state 26
    if_else        go to state 27
    declaration    go to state 28
    eq_assign      go to state 29
    opassign       go to state 30
    T              go to state 31


State 181

   22 function_def: T IDENTIFIER LPAREN params RPAREN LBRACE statements RBRACE .

    $default  reduce using rule 22 (function_def)


State 182

    3 statements: statements . statement
   18 for: FOR LPAREN declarations SEMICOLON bool_statements SEMICOLON assigns RPAREN statements .

    IF              shift, and go to state 1
    WHILE           shift, and go to state 2
    FOR             shift, and go to state 3
    T_CHAR          shift, and go to state 4
    T_INT           shift, and go to state 5
    T_STRING        shift, and go to state 6
    T_BOOL          shift, and go to state 7
    T_INT_POINTER   shift, and go to state 8
    T_CHAR_POINTER  shift, and go to state 9
    PRINTF          shift, and go to state 10
    SCANF           shift, and go to state 11
    SEMICOLON       shift, and go to state 12
    IDENTIFIER      shift, and go to state 14
    SELF_INC        shift, and go to state 15
    SELF_DEC        shift, and go to state 16

    IF              [reduce using rule 18 (for)]
    WHILE           [reduce using rule 18 (for)]
    FOR             [reduce using rule 18 (for)]
    T_CHAR          [reduce using rule 18 (for)]
    T_INT           [reduce using rule 18 (for)]
    T_STRING        [reduce using rule 18 (for)]
    T_BOOL          [reduce using rule 18 (for)]
    T_INT_POINTER   [reduce using rule 18 (for)]
    T_CHAR_POINTER  [reduce using rule 18 (for)]
    PRINTF          [reduce using rule 18 (for)]
    SCANF           [reduce using rule 18 (for)]
    SEMICOLON       [reduce using rule 18 (for)]
    IDENTIFIER      [reduce using rule 18 (for)]
    SELF_INC        [reduce using rule 18 (for)]
    SELF_DEC        [reduce using rule 18 (for)]
    $default        reduce using rule 18 (for)

    statement      go to state 61
    for            go to state 20
    function_decl  go to state 21
    function_def   go to state 22
    function_use   go to state 23
    printf         go to state 24
    scanf          go to state 25
    while          go to state 26
    if_else        go to state 27
    declaration    go to state 28
    eq_assign      go to state 29
    opassign       go to state 30
    T              go to state 31

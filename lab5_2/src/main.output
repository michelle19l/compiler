Terminals unused in grammar

   FOR
   RETURN
   COMMA
   POINT
   LBRACK
   RBRACK
   BOOL


State 47 conflicts: 1 shift/reduce
State 55 conflicts: 11 reduce/reduce
State 67 conflicts: 10 shift/reduce
State 93 conflicts: 10 shift/reduce


Grammar

    0 $accept: program $end

    1 program: statements

    2 statements: statement
    3           | statements statement
    4           | LBRACE statements RBRACE
    5           | LBRACE RBRACE

    6 statement: SEMICOLON
    7          | declaration SEMICOLON
    8          | assign SEMICOLON
    9          | if_else
   10          | while
   11          | printf SEMICOLON
   12          | scanf SEMICOLON

   13 printf: PRINTF LPAREN STRING RPAREN

   14 scanf: SCANF LPAREN STRING RPAREN

   15 while: WHILE bool_statements statements

   16 if_else: IF bool_statements statements ELSE statements
   17        | IF bool_statements statement

   18 bool_statements: LPAREN bool_statements RPAREN
   19                | bool_statements AND bool_statements
   20                | bool_statements OR bool_statements
   21                | NOT bool_statements
   22                | bool_statement

   23 bool_statement: expr
   24               | bool_statement GREAT bool_statement
   25               | bool_statement LESS bool_statement
   26               | bool_statement GREAT_EQ bool_statement
   27               | bool_statement LESS_EQ bool_statement
   28               | bool_statement LOP_EQ bool_statement
   29               | bool_statement NOT_EQ bool_statement

   30 assign: IDENTIFIER LOP_ASSIGN expr

   31 declaration: T IDENTIFIER LOP_ASSIGN expr
   32            | T IDENTIFIER

   33 expr: LPAREN expr RPAREN
   34     | expr ADD expr
   35     | expr SUB expr
   36     | SUB expr
   37     | ADD expr
   38     | expr MUL expr
   39     | expr DIV expr
   40     | expr MOD expr
   41     | IDENTIFIER
   42     | INTEGER
   43     | CHAR
   44     | STRING

   45 T: T_INT
   46  | T_CHAR
   47  | T_BOOL
   48  | T_STRING


Terminals, with rules where they appear

$end (0) 0
error (256)
IF (258) 16 17
ELSE (259) 16
WHILE (260) 15
FOR (261)
RETURN (262)
T_CHAR (263) 46
T_INT (264) 45
T_STRING (265) 48
T_BOOL (266) 47
PRINTF (267) 13
SCANF (268) 14
LOP_ASSIGN (269) 30 31
SEMICOLON (270) 6 7 8 11 12
COMMA (271)
POINT (272)
LPAREN (273) 13 14 18 33
RPAREN (274) 13 14 18 33
LBRACK (275)
RBRACK (276)
LBRACE (277) 4 5
RBRACE (278) 4 5
IDENTIFIER (279) 30 31 32 41
INTEGER (280) 42
CHAR (281) 43
BOOL (282)
STRING (283) 13 14 44
LOP_EQ (284) 28
GREAT (285) 24
LESS (286) 25
GREAT_EQ (287) 26
LESS_EQ (288) 27
NOT_EQ (289) 29
ADD (290) 34 37
SUB (291) 35 36
MUL (292) 38
DIV (293) 39
MOD (294) 40
OR (295) 20
AND (296) 19
NOT (297) 21
NEG (298)
POS (299)


Nonterminals, with rules where they appear

$accept (45)
    on left: 0
program (46)
    on left: 1, on right: 0
statements (47)
    on left: 2 3 4 5, on right: 1 3 4 15 16
statement (48)
    on left: 6 7 8 9 10 11 12, on right: 2 3 17
printf (49)
    on left: 13, on right: 11
scanf (50)
    on left: 14, on right: 12
while (51)
    on left: 15, on right: 10
if_else (52)
    on left: 16 17, on right: 9
bool_statements (53)
    on left: 18 19 20 21 22, on right: 15 16 17 18 19 20 21
bool_statement (54)
    on left: 23 24 25 26 27 28 29, on right: 22 24 25 26 27 28 29
assign (55)
    on left: 30, on right: 8
declaration (56)
    on left: 31 32, on right: 7
expr (57)
    on left: 33 34 35 36 37 38 39 40 41 42 43 44, on right: 23 30 31
    33 34 35 36 37 38 39 40
T (58)
    on left: 45 46 47 48, on right: 31 32


State 0

    0 $accept: . program $end

    IF          shift, and go to state 1
    WHILE       shift, and go to state 2
    T_CHAR      shift, and go to state 3
    T_INT       shift, and go to state 4
    T_STRING    shift, and go to state 5
    T_BOOL      shift, and go to state 6
    PRINTF      shift, and go to state 7
    SCANF       shift, and go to state 8
    SEMICOLON   shift, and go to state 9
    LBRACE      shift, and go to state 10
    IDENTIFIER  shift, and go to state 11

    program      go to state 12
    statements   go to state 13
    statement    go to state 14
    printf       go to state 15
    scanf        go to state 16
    while        go to state 17
    if_else      go to state 18
    assign       go to state 19
    declaration  go to state 20
    T            go to state 21


State 1

   16 if_else: IF . bool_statements statements ELSE statements
   17        | IF . bool_statements statement

    LPAREN      shift, and go to state 22
    IDENTIFIER  shift, and go to state 23
    INTEGER     shift, and go to state 24
    CHAR        shift, and go to state 25
    STRING      shift, and go to state 26
    ADD         shift, and go to state 27
    SUB         shift, and go to state 28
    NOT         shift, and go to state 29

    bool_statements  go to state 30
    bool_statement   go to state 31
    expr             go to state 32


State 2

   15 while: WHILE . bool_statements statements

    LPAREN      shift, and go to state 22
    IDENTIFIER  shift, and go to state 23
    INTEGER     shift, and go to state 24
    CHAR        shift, and go to state 25
    STRING      shift, and go to state 26
    ADD         shift, and go to state 27
    SUB         shift, and go to state 28
    NOT         shift, and go to state 29

    bool_statements  go to state 33
    bool_statement   go to state 31
    expr             go to state 32


State 3

   46 T: T_CHAR .

    $default  reduce using rule 46 (T)


State 4

   45 T: T_INT .

    $default  reduce using rule 45 (T)


State 5

   48 T: T_STRING .

    $default  reduce using rule 48 (T)


State 6

   47 T: T_BOOL .

    $default  reduce using rule 47 (T)


State 7

   13 printf: PRINTF . LPAREN STRING RPAREN

    LPAREN  shift, and go to state 34


State 8

   14 scanf: SCANF . LPAREN STRING RPAREN

    LPAREN  shift, and go to state 35


State 9

    6 statement: SEMICOLON .

    $default  reduce using rule 6 (statement)


State 10

    4 statements: LBRACE . statements RBRACE
    5           | LBRACE . RBRACE

    IF          shift, and go to state 1
    WHILE       shift, and go to state 2
    T_CHAR      shift, and go to state 3
    T_INT       shift, and go to state 4
    T_STRING    shift, and go to state 5
    T_BOOL      shift, and go to state 6
    PRINTF      shift, and go to state 7
    SCANF       shift, and go to state 8
    SEMICOLON   shift, and go to state 9
    LBRACE      shift, and go to state 10
    RBRACE      shift, and go to state 36
    IDENTIFIER  shift, and go to state 11

    statements   go to state 37
    statement    go to state 14
    printf       go to state 15
    scanf        go to state 16
    while        go to state 17
    if_else      go to state 18
    assign       go to state 19
    declaration  go to state 20
    T            go to state 21


State 11

   30 assign: IDENTIFIER . LOP_ASSIGN expr

    LOP_ASSIGN  shift, and go to state 38


State 12

    0 $accept: program . $end

    $end  shift, and go to state 39


State 13

    1 program: statements .
    3 statements: statements . statement

    IF          shift, and go to state 1
    WHILE       shift, and go to state 2
    T_CHAR      shift, and go to state 3
    T_INT       shift, and go to state 4
    T_STRING    shift, and go to state 5
    T_BOOL      shift, and go to state 6
    PRINTF      shift, and go to state 7
    SCANF       shift, and go to state 8
    SEMICOLON   shift, and go to state 9
    IDENTIFIER  shift, and go to state 11

    $default  reduce using rule 1 (program)

    statement    go to state 40
    printf       go to state 15
    scanf        go to state 16
    while        go to state 17
    if_else      go to state 18
    assign       go to state 19
    declaration  go to state 20
    T            go to state 21


State 14

    2 statements: statement .

    $default  reduce using rule 2 (statements)


State 15

   11 statement: printf . SEMICOLON

    SEMICOLON  shift, and go to state 41


State 16

   12 statement: scanf . SEMICOLON

    SEMICOLON  shift, and go to state 42


State 17

   10 statement: while .

    $default  reduce using rule 10 (statement)


State 18

    9 statement: if_else .

    $default  reduce using rule 9 (statement)


State 19

    8 statement: assign . SEMICOLON

    SEMICOLON  shift, and go to state 43


State 20

    7 statement: declaration . SEMICOLON

    SEMICOLON  shift, and go to state 44


State 21

   31 declaration: T . IDENTIFIER LOP_ASSIGN expr
   32            | T . IDENTIFIER

    IDENTIFIER  shift, and go to state 45


State 22

   18 bool_statements: LPAREN . bool_statements RPAREN
   33 expr: LPAREN . expr RPAREN

    LPAREN      shift, and go to state 22
    IDENTIFIER  shift, and go to state 23
    INTEGER     shift, and go to state 24
    CHAR        shift, and go to state 25
    STRING      shift, and go to state 26
    ADD         shift, and go to state 27
    SUB         shift, and go to state 28
    NOT         shift, and go to state 29

    bool_statements  go to state 46
    bool_statement   go to state 31
    expr             go to state 47


State 23

   41 expr: IDENTIFIER .

    $default  reduce using rule 41 (expr)


State 24

   42 expr: INTEGER .

    $default  reduce using rule 42 (expr)


State 25

   43 expr: CHAR .

    $default  reduce using rule 43 (expr)


State 26

   44 expr: STRING .

    $default  reduce using rule 44 (expr)


State 27

   37 expr: ADD . expr

    LPAREN      shift, and go to state 48
    IDENTIFIER  shift, and go to state 23
    INTEGER     shift, and go to state 24
    CHAR        shift, and go to state 25
    STRING      shift, and go to state 26
    ADD         shift, and go to state 27
    SUB         shift, and go to state 28

    expr  go to state 49


State 28

   36 expr: SUB . expr

    LPAREN      shift, and go to state 48
    IDENTIFIER  shift, and go to state 23
    INTEGER     shift, and go to state 24
    CHAR        shift, and go to state 25
    STRING      shift, and go to state 26
    ADD         shift, and go to state 27
    SUB         shift, and go to state 28

    expr  go to state 50


State 29

   21 bool_statements: NOT . bool_statements

    LPAREN      shift, and go to state 22
    IDENTIFIER  shift, and go to state 23
    INTEGER     shift, and go to state 24
    CHAR        shift, and go to state 25
    STRING      shift, and go to state 26
    ADD         shift, and go to state 27
    SUB         shift, and go to state 28
    NOT         shift, and go to state 29

    bool_statements  go to state 51
    bool_statement   go to state 31
    expr             go to state 32


State 30

   16 if_else: IF bool_statements . statements ELSE statements
   17        | IF bool_statements . statement
   19 bool_statements: bool_statements . AND bool_statements
   20                | bool_statements . OR bool_statements

    IF          shift, and go to state 1
    WHILE       shift, and go to state 2
    T_CHAR      shift, and go to state 3
    T_INT       shift, and go to state 4
    T_STRING    shift, and go to state 5
    T_BOOL      shift, and go to state 6
    PRINTF      shift, and go to state 7
    SCANF       shift, and go to state 8
    SEMICOLON   shift, and go to state 9
    LBRACE      shift, and go to state 10
    IDENTIFIER  shift, and go to state 11
    OR          shift, and go to state 52
    AND         shift, and go to state 53

    statements   go to state 54
    statement    go to state 55
    printf       go to state 15
    scanf        go to state 16
    while        go to state 17
    if_else      go to state 18
    assign       go to state 19
    declaration  go to state 20
    T            go to state 21


State 31

   22 bool_statements: bool_statement .
   24 bool_statement: bool_statement . GREAT bool_statement
   25               | bool_statement . LESS bool_statement
   26               | bool_statement . GREAT_EQ bool_statement
   27               | bool_statement . LESS_EQ bool_statement
   28               | bool_statement . LOP_EQ bool_statement
   29               | bool_statement . NOT_EQ bool_statement

    LOP_EQ    shift, and go to state 56
    GREAT     shift, and go to state 57
    LESS      shift, and go to state 58
    GREAT_EQ  shift, and go to state 59
    LESS_EQ   shift, and go to state 60
    NOT_EQ    shift, and go to state 61

    $default  reduce using rule 22 (bool_statements)


State 32

   23 bool_statement: expr .
   34 expr: expr . ADD expr
   35     | expr . SUB expr
   38     | expr . MUL expr
   39     | expr . DIV expr
   40     | expr . MOD expr

    ADD  shift, and go to state 62
    SUB  shift, and go to state 63
    MUL  shift, and go to state 64
    DIV  shift, and go to state 65
    MOD  shift, and go to state 66

    $default  reduce using rule 23 (bool_statement)


State 33

   15 while: WHILE bool_statements . statements
   19 bool_statements: bool_statements . AND bool_statements
   20                | bool_statements . OR bool_statements

    IF          shift, and go to state 1
    WHILE       shift, and go to state 2
    T_CHAR      shift, and go to state 3
    T_INT       shift, and go to state 4
    T_STRING    shift, and go to state 5
    T_BOOL      shift, and go to state 6
    PRINTF      shift, and go to state 7
    SCANF       shift, and go to state 8
    SEMICOLON   shift, and go to state 9
    LBRACE      shift, and go to state 10
    IDENTIFIER  shift, and go to state 11
    OR          shift, and go to state 52
    AND         shift, and go to state 53

    statements   go to state 67
    statement    go to state 14
    printf       go to state 15
    scanf        go to state 16
    while        go to state 17
    if_else      go to state 18
    assign       go to state 19
    declaration  go to state 20
    T            go to state 21


State 34

   13 printf: PRINTF LPAREN . STRING RPAREN

    STRING  shift, and go to state 68


State 35

   14 scanf: SCANF LPAREN . STRING RPAREN

    STRING  shift, and go to state 69


State 36

    5 statements: LBRACE RBRACE .

    $default  reduce using rule 5 (statements)


State 37

    3 statements: statements . statement
    4           | LBRACE statements . RBRACE

    IF          shift, and go to state 1
    WHILE       shift, and go to state 2
    T_CHAR      shift, and go to state 3
    T_INT       shift, and go to state 4
    T_STRING    shift, and go to state 5
    T_BOOL      shift, and go to state 6
    PRINTF      shift, and go to state 7
    SCANF       shift, and go to state 8
    SEMICOLON   shift, and go to state 9
    RBRACE      shift, and go to state 70
    IDENTIFIER  shift, and go to state 11

    statement    go to state 40
    printf       go to state 15
    scanf        go to state 16
    while        go to state 17
    if_else      go to state 18
    assign       go to state 19
    declaration  go to state 20
    T            go to state 21


State 38

   30 assign: IDENTIFIER LOP_ASSIGN . expr

    LPAREN      shift, and go to state 48
    IDENTIFIER  shift, and go to state 23
    INTEGER     shift, and go to state 24
    CHAR        shift, and go to state 25
    STRING      shift, and go to state 26
    ADD         shift, and go to state 27
    SUB         shift, and go to state 28

    expr  go to state 71


State 39

    0 $accept: program $end .

    $default  accept


State 40

    3 statements: statements statement .

    $default  reduce using rule 3 (statements)


State 41

   11 statement: printf SEMICOLON .

    $default  reduce using rule 11 (statement)


State 42

   12 statement: scanf SEMICOLON .

    $default  reduce using rule 12 (statement)


State 43

    8 statement: assign SEMICOLON .

    $default  reduce using rule 8 (statement)


State 44

    7 statement: declaration SEMICOLON .

    $default  reduce using rule 7 (statement)


State 45

   31 declaration: T IDENTIFIER . LOP_ASSIGN expr
   32            | T IDENTIFIER .

    LOP_ASSIGN  shift, and go to state 72

    $default  reduce using rule 32 (declaration)


State 46

   18 bool_statements: LPAREN bool_statements . RPAREN
   19                | bool_statements . AND bool_statements
   20                | bool_statements . OR bool_statements

    RPAREN  shift, and go to state 73
    OR      shift, and go to state 52
    AND     shift, and go to state 53


State 47

   23 bool_statement: expr .
   33 expr: LPAREN expr . RPAREN
   34     | expr . ADD expr
   35     | expr . SUB expr
   38     | expr . MUL expr
   39     | expr . DIV expr
   40     | expr . MOD expr

    RPAREN  shift, and go to state 74
    ADD     shift, and go to state 62
    SUB     shift, and go to state 63
    MUL     shift, and go to state 64
    DIV     shift, and go to state 65
    MOD     shift, and go to state 66

    RPAREN    [reduce using rule 23 (bool_statement)]
    $default  reduce using rule 23 (bool_statement)


State 48

   33 expr: LPAREN . expr RPAREN

    LPAREN      shift, and go to state 48
    IDENTIFIER  shift, and go to state 23
    INTEGER     shift, and go to state 24
    CHAR        shift, and go to state 25
    STRING      shift, and go to state 26
    ADD         shift, and go to state 27
    SUB         shift, and go to state 28

    expr  go to state 75


State 49

   34 expr: expr . ADD expr
   35     | expr . SUB expr
   37     | ADD expr .
   38     | expr . MUL expr
   39     | expr . DIV expr
   40     | expr . MOD expr

    $default  reduce using rule 37 (expr)


State 50

   34 expr: expr . ADD expr
   35     | expr . SUB expr
   36     | SUB expr .
   38     | expr . MUL expr
   39     | expr . DIV expr
   40     | expr . MOD expr

    $default  reduce using rule 36 (expr)


State 51

   19 bool_statements: bool_statements . AND bool_statements
   20                | bool_statements . OR bool_statements
   21                | NOT bool_statements .

    $default  reduce using rule 21 (bool_statements)


State 52

   20 bool_statements: bool_statements OR . bool_statements

    LPAREN      shift, and go to state 22
    IDENTIFIER  shift, and go to state 23
    INTEGER     shift, and go to state 24
    CHAR        shift, and go to state 25
    STRING      shift, and go to state 26
    ADD         shift, and go to state 27
    SUB         shift, and go to state 28
    NOT         shift, and go to state 29

    bool_statements  go to state 76
    bool_statement   go to state 31
    expr             go to state 32


State 53

   19 bool_statements: bool_statements AND . bool_statements

    LPAREN      shift, and go to state 22
    IDENTIFIER  shift, and go to state 23
    INTEGER     shift, and go to state 24
    CHAR        shift, and go to state 25
    STRING      shift, and go to state 26
    ADD         shift, and go to state 27
    SUB         shift, and go to state 28
    NOT         shift, and go to state 29

    bool_statements  go to state 77
    bool_statement   go to state 31
    expr             go to state 32


State 54

    3 statements: statements . statement
   16 if_else: IF bool_statements statements . ELSE statements

    IF          shift, and go to state 1
    ELSE        shift, and go to state 78
    WHILE       shift, and go to state 2
    T_CHAR      shift, and go to state 3
    T_INT       shift, and go to state 4
    T_STRING    shift, and go to state 5
    T_BOOL      shift, and go to state 6
    PRINTF      shift, and go to state 7
    SCANF       shift, and go to state 8
    SEMICOLON   shift, and go to state 9
    IDENTIFIER  shift, and go to state 11

    statement    go to state 40
    printf       go to state 15
    scanf        go to state 16
    while        go to state 17
    if_else      go to state 18
    assign       go to state 19
    declaration  go to state 20
    T            go to state 21


State 55

    2 statements: statement .
   17 if_else: IF bool_statements statement .

    $end        reduce using rule 17 (if_else)
    IF          reduce using rule 2 (statements)
    IF          [reduce using rule 17 (if_else)]
    ELSE        reduce using rule 2 (statements)
    ELSE        [reduce using rule 17 (if_else)]
    WHILE       reduce using rule 2 (statements)
    WHILE       [reduce using rule 17 (if_else)]
    T_CHAR      reduce using rule 2 (statements)
    T_CHAR      [reduce using rule 17 (if_else)]
    T_INT       reduce using rule 2 (statements)
    T_INT       [reduce using rule 17 (if_else)]
    T_STRING    reduce using rule 2 (statements)
    T_STRING    [reduce using rule 17 (if_else)]
    T_BOOL      reduce using rule 2 (statements)
    T_BOOL      [reduce using rule 17 (if_else)]
    PRINTF      reduce using rule 2 (statements)
    PRINTF      [reduce using rule 17 (if_else)]
    SCANF       reduce using rule 2 (statements)
    SCANF       [reduce using rule 17 (if_else)]
    SEMICOLON   reduce using rule 2 (statements)
    SEMICOLON   [reduce using rule 17 (if_else)]
    RBRACE      reduce using rule 17 (if_else)
    IDENTIFIER  reduce using rule 2 (statements)
    IDENTIFIER  [reduce using rule 17 (if_else)]
    $default    reduce using rule 2 (statements)


State 56

   28 bool_statement: bool_statement LOP_EQ . bool_statement

    LPAREN      shift, and go to state 48
    IDENTIFIER  shift, and go to state 23
    INTEGER     shift, and go to state 24
    CHAR        shift, and go to state 25
    STRING      shift, and go to state 26
    ADD         shift, and go to state 27
    SUB         shift, and go to state 28

    bool_statement  go to state 79
    expr            go to state 32


State 57

   24 bool_statement: bool_statement GREAT . bool_statement

    LPAREN      shift, and go to state 48
    IDENTIFIER  shift, and go to state 23
    INTEGER     shift, and go to state 24
    CHAR        shift, and go to state 25
    STRING      shift, and go to state 26
    ADD         shift, and go to state 27
    SUB         shift, and go to state 28

    bool_statement  go to state 80
    expr            go to state 32


State 58

   25 bool_statement: bool_statement LESS . bool_statement

    LPAREN      shift, and go to state 48
    IDENTIFIER  shift, and go to state 23
    INTEGER     shift, and go to state 24
    CHAR        shift, and go to state 25
    STRING      shift, and go to state 26
    ADD         shift, and go to state 27
    SUB         shift, and go to state 28

    bool_statement  go to state 81
    expr            go to state 32


State 59

   26 bool_statement: bool_statement GREAT_EQ . bool_statement

    LPAREN      shift, and go to state 48
    IDENTIFIER  shift, and go to state 23
    INTEGER     shift, and go to state 24
    CHAR        shift, and go to state 25
    STRING      shift, and go to state 26
    ADD         shift, and go to state 27
    SUB         shift, and go to state 28

    bool_statement  go to state 82
    expr            go to state 32


State 60

   27 bool_statement: bool_statement LESS_EQ . bool_statement

    LPAREN      shift, and go to state 48
    IDENTIFIER  shift, and go to state 23
    INTEGER     shift, and go to state 24
    CHAR        shift, and go to state 25
    STRING      shift, and go to state 26
    ADD         shift, and go to state 27
    SUB         shift, and go to state 28

    bool_statement  go to state 83
    expr            go to state 32


State 61

   29 bool_statement: bool_statement NOT_EQ . bool_statement

    LPAREN      shift, and go to state 48
    IDENTIFIER  shift, and go to state 23
    INTEGER     shift, and go to state 24
    CHAR        shift, and go to state 25
    STRING      shift, and go to state 26
    ADD         shift, and go to state 27
    SUB         shift, and go to state 28

    bool_statement  go to state 84
    expr            go to state 32


State 62

   34 expr: expr ADD . expr

    LPAREN      shift, and go to state 48
    IDENTIFIER  shift, and go to state 23
    INTEGER     shift, and go to state 24
    CHAR        shift, and go to state 25
    STRING      shift, and go to state 26
    ADD         shift, and go to state 27
    SUB         shift, and go to state 28

    expr  go to state 85


State 63

   35 expr: expr SUB . expr

    LPAREN      shift, and go to state 48
    IDENTIFIER  shift, and go to state 23
    INTEGER     shift, and go to state 24
    CHAR        shift, and go to state 25
    STRING      shift, and go to state 26
    ADD         shift, and go to state 27
    SUB         shift, and go to state 28

    expr  go to state 86


State 64

   38 expr: expr MUL . expr

    LPAREN      shift, and go to state 48
    IDENTIFIER  shift, and go to state 23
    INTEGER     shift, and go to state 24
    CHAR        shift, and go to state 25
    STRING      shift, and go to state 26
    ADD         shift, and go to state 27
    SUB         shift, and go to state 28

    expr  go to state 87


State 65

   39 expr: expr DIV . expr

    LPAREN      shift, and go to state 48
    IDENTIFIER  shift, and go to state 23
    INTEGER     shift, and go to state 24
    CHAR        shift, and go to state 25
    STRING      shift, and go to state 26
    ADD         shift, and go to state 27
    SUB         shift, and go to state 28

    expr  go to state 88


State 66

   40 expr: expr MOD . expr

    LPAREN      shift, and go to state 48
    IDENTIFIER  shift, and go to state 23
    INTEGER     shift, and go to state 24
    CHAR        shift, and go to state 25
    STRING      shift, and go to state 26
    ADD         shift, and go to state 27
    SUB         shift, and go to state 28

    expr  go to state 89


State 67

    3 statements: statements . statement
   15 while: WHILE bool_statements statements .

    IF          shift, and go to state 1
    WHILE       shift, and go to state 2
    T_CHAR      shift, and go to state 3
    T_INT       shift, and go to state 4
    T_STRING    shift, and go to state 5
    T_BOOL      shift, and go to state 6
    PRINTF      shift, and go to state 7
    SCANF       shift, and go to state 8
    SEMICOLON   shift, and go to state 9
    IDENTIFIER  shift, and go to state 11

    IF          [reduce using rule 15 (while)]
    WHILE       [reduce using rule 15 (while)]
    T_CHAR      [reduce using rule 15 (while)]
    T_INT       [reduce using rule 15 (while)]
    T_STRING    [reduce using rule 15 (while)]
    T_BOOL      [reduce using rule 15 (while)]
    PRINTF      [reduce using rule 15 (while)]
    SCANF       [reduce using rule 15 (while)]
    SEMICOLON   [reduce using rule 15 (while)]
    IDENTIFIER  [reduce using rule 15 (while)]
    $default    reduce using rule 15 (while)

    statement    go to state 40
    printf       go to state 15
    scanf        go to state 16
    while        go to state 17
    if_else      go to state 18
    assign       go to state 19
    declaration  go to state 20
    T            go to state 21


State 68

   13 printf: PRINTF LPAREN STRING . RPAREN

    RPAREN  shift, and go to state 90


State 69

   14 scanf: SCANF LPAREN STRING . RPAREN

    RPAREN  shift, and go to state 91


State 70

    4 statements: LBRACE statements RBRACE .

    $default  reduce using rule 4 (statements)


State 71

   30 assign: IDENTIFIER LOP_ASSIGN expr .
   34 expr: expr . ADD expr
   35     | expr . SUB expr
   38     | expr . MUL expr
   39     | expr . DIV expr
   40     | expr . MOD expr

    ADD  shift, and go to state 62
    SUB  shift, and go to state 63
    MUL  shift, and go to state 64
    DIV  shift, and go to state 65
    MOD  shift, and go to state 66

    $default  reduce using rule 30 (assign)


State 72

   31 declaration: T IDENTIFIER LOP_ASSIGN . expr

    LPAREN      shift, and go to state 48
    IDENTIFIER  shift, and go to state 23
    INTEGER     shift, and go to state 24
    CHAR        shift, and go to state 25
    STRING      shift, and go to state 26
    ADD         shift, and go to state 27
    SUB         shift, and go to state 28

    expr  go to state 92


State 73

   18 bool_statements: LPAREN bool_statements RPAREN .

    $default  reduce using rule 18 (bool_statements)


State 74

   33 expr: LPAREN expr RPAREN .

    $default  reduce using rule 33 (expr)


State 75

   33 expr: LPAREN expr . RPAREN
   34     | expr . ADD expr
   35     | expr . SUB expr
   38     | expr . MUL expr
   39     | expr . DIV expr
   40     | expr . MOD expr

    RPAREN  shift, and go to state 74
    ADD     shift, and go to state 62
    SUB     shift, and go to state 63
    MUL     shift, and go to state 64
    DIV     shift, and go to state 65
    MOD     shift, and go to state 66


State 76

   19 bool_statements: bool_statements . AND bool_statements
   20                | bool_statements . OR bool_statements
   20                | bool_statements OR bool_statements .

    AND  shift, and go to state 53

    $default  reduce using rule 20 (bool_statements)


State 77

   19 bool_statements: bool_statements . AND bool_statements
   19                | bool_statements AND bool_statements .
   20                | bool_statements . OR bool_statements

    $default  reduce using rule 19 (bool_statements)


State 78

   16 if_else: IF bool_statements statements ELSE . statements

    IF          shift, and go to state 1
    WHILE       shift, and go to state 2
    T_CHAR      shift, and go to state 3
    T_INT       shift, and go to state 4
    T_STRING    shift, and go to state 5
    T_BOOL      shift, and go to state 6
    PRINTF      shift, and go to state 7
    SCANF       shift, and go to state 8
    SEMICOLON   shift, and go to state 9
    LBRACE      shift, and go to state 10
    IDENTIFIER  shift, and go to state 11

    statements   go to state 93
    statement    go to state 14
    printf       go to state 15
    scanf        go to state 16
    while        go to state 17
    if_else      go to state 18
    assign       go to state 19
    declaration  go to state 20
    T            go to state 21


State 79

   24 bool_statement: bool_statement . GREAT bool_statement
   25               | bool_statement . LESS bool_statement
   26               | bool_statement . GREAT_EQ bool_statement
   27               | bool_statement . LESS_EQ bool_statement
   28               | bool_statement . LOP_EQ bool_statement
   28               | bool_statement LOP_EQ bool_statement .
   29               | bool_statement . NOT_EQ bool_statement

    $default  reduce using rule 28 (bool_statement)


State 80

   24 bool_statement: bool_statement . GREAT bool_statement
   24               | bool_statement GREAT bool_statement .
   25               | bool_statement . LESS bool_statement
   26               | bool_statement . GREAT_EQ bool_statement
   27               | bool_statement . LESS_EQ bool_statement
   28               | bool_statement . LOP_EQ bool_statement
   29               | bool_statement . NOT_EQ bool_statement

    $default  reduce using rule 24 (bool_statement)


State 81

   24 bool_statement: bool_statement . GREAT bool_statement
   25               | bool_statement . LESS bool_statement
   25               | bool_statement LESS bool_statement .
   26               | bool_statement . GREAT_EQ bool_statement
   27               | bool_statement . LESS_EQ bool_statement
   28               | bool_statement . LOP_EQ bool_statement
   29               | bool_statement . NOT_EQ bool_statement

    $default  reduce using rule 25 (bool_statement)


State 82

   24 bool_statement: bool_statement . GREAT bool_statement
   25               | bool_statement . LESS bool_statement
   26               | bool_statement . GREAT_EQ bool_statement
   26               | bool_statement GREAT_EQ bool_statement .
   27               | bool_statement . LESS_EQ bool_statement
   28               | bool_statement . LOP_EQ bool_statement
   29               | bool_statement . NOT_EQ bool_statement

    $default  reduce using rule 26 (bool_statement)


State 83

   24 bool_statement: bool_statement . GREAT bool_statement
   25               | bool_statement . LESS bool_statement
   26               | bool_statement . GREAT_EQ bool_statement
   27               | bool_statement . LESS_EQ bool_statement
   27               | bool_statement LESS_EQ bool_statement .
   28               | bool_statement . LOP_EQ bool_statement
   29               | bool_statement . NOT_EQ bool_statement

    $default  reduce using rule 27 (bool_statement)


State 84

   24 bool_statement: bool_statement . GREAT bool_statement
   25               | bool_statement . LESS bool_statement
   26               | bool_statement . GREAT_EQ bool_statement
   27               | bool_statement . LESS_EQ bool_statement
   28               | bool_statement . LOP_EQ bool_statement
   29               | bool_statement . NOT_EQ bool_statement
   29               | bool_statement NOT_EQ bool_statement .

    $default  reduce using rule 29 (bool_statement)


State 85

   34 expr: expr . ADD expr
   34     | expr ADD expr .
   35     | expr . SUB expr
   38     | expr . MUL expr
   39     | expr . DIV expr
   40     | expr . MOD expr

    MUL  shift, and go to state 64
    DIV  shift, and go to state 65
    MOD  shift, and go to state 66

    $default  reduce using rule 34 (expr)


State 86

   34 expr: expr . ADD expr
   35     | expr . SUB expr
   35     | expr SUB expr .
   38     | expr . MUL expr
   39     | expr . DIV expr
   40     | expr . MOD expr

    MUL  shift, and go to state 64
    DIV  shift, and go to state 65
    MOD  shift, and go to state 66

    $default  reduce using rule 35 (expr)


State 87

   34 expr: expr . ADD expr
   35     | expr . SUB expr
   38     | expr . MUL expr
   38     | expr MUL expr .
   39     | expr . DIV expr
   40     | expr . MOD expr

    $default  reduce using rule 38 (expr)


State 88

   34 expr: expr . ADD expr
   35     | expr . SUB expr
   38     | expr . MUL expr
   39     | expr . DIV expr
   39     | expr DIV expr .
   40     | expr . MOD expr

    $default  reduce using rule 39 (expr)


State 89

   34 expr: expr . ADD expr
   35     | expr . SUB expr
   38     | expr . MUL expr
   39     | expr . DIV expr
   40     | expr . MOD expr
   40     | expr MOD expr .

    $default  reduce using rule 40 (expr)


State 90

   13 printf: PRINTF LPAREN STRING RPAREN .

    $default  reduce using rule 13 (printf)


State 91

   14 scanf: SCANF LPAREN STRING RPAREN .

    $default  reduce using rule 14 (scanf)


State 92

   31 declaration: T IDENTIFIER LOP_ASSIGN expr .
   34 expr: expr . ADD expr
   35     | expr . SUB expr
   38     | expr . MUL expr
   39     | expr . DIV expr
   40     | expr . MOD expr

    ADD  shift, and go to state 62
    SUB  shift, and go to state 63
    MUL  shift, and go to state 64
    DIV  shift, and go to state 65
    MOD  shift, and go to state 66

    $default  reduce using rule 31 (declaration)


State 93

    3 statements: statements . statement
   16 if_else: IF bool_statements statements ELSE statements .

    IF          shift, and go to state 1
    WHILE       shift, and go to state 2
    T_CHAR      shift, and go to state 3
    T_INT       shift, and go to state 4
    T_STRING    shift, and go to state 5
    T_BOOL      shift, and go to state 6
    PRINTF      shift, and go to state 7
    SCANF       shift, and go to state 8
    SEMICOLON   shift, and go to state 9
    IDENTIFIER  shift, and go to state 11

    IF          [reduce using rule 16 (if_else)]
    WHILE       [reduce using rule 16 (if_else)]
    T_CHAR      [reduce using rule 16 (if_else)]
    T_INT       [reduce using rule 16 (if_else)]
    T_STRING    [reduce using rule 16 (if_else)]
    T_BOOL      [reduce using rule 16 (if_else)]
    PRINTF      [reduce using rule 16 (if_else)]
    SCANF       [reduce using rule 16 (if_else)]
    SEMICOLON   [reduce using rule 16 (if_else)]
    IDENTIFIER  [reduce using rule 16 (if_else)]
    $default    reduce using rule 16 (if_else)

    statement    go to state 40
    printf       go to state 15
    scanf        go to state 16
    while        go to state 17
    if_else      go to state 18
    assign       go to state 19
    declaration  go to state 20
    T            go to state 21
